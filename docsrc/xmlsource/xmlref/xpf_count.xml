<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="xpf_count">
  <refmeta>
    <refentrytitle>count</refentrytitle>
    <refmiscinfo>XPATH</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>count</refname>
    <refpurpose>Returns the number of values in the sequence.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="xpf_syn_count">
      <funcprototype id="xpf_proto_count">
        <funcdef>integer <function>count</function></funcdef>
	<paramdef><parameter>seq</parameter> any</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="xpf_desc_count"><title>Description</title>
    <para>Returns 1 if the argument is a single value or a count of elements in the given sequence of values.</para>
    <para>This function must be called with an argument, it do nothing with context.
To count nodes in context node-set, use last().</para>
  </refsect1>
  <refsect1 id="xpf_params_count"><title>Parameters</title>
    <refsect2><title>seq</title><para>Sequence of values to be counted.</para></refsect2>
  </refsect1>
  <refsect1 id="xpf_ret_count"><title>Return Types</title><para>Integer</para></refsect1>
  <refsect1 id="xpf_errors_count"><title>Errors</title>
    <para>This function never returns any errors</para>
  </refsect1>
  <refsect1 id="xpf_examples_count"><title>Examples</title>
    <example id="xpf_ex_count"><title></title>
      <screen>count(//*)</screen>
    </example>
  </refsect1>
  <refsect1 id="xpf_seealso_count"><title>See Also</title>
    <para><link linkend="xpf_empty">empty()</link><link linkend="xpf_last">last()</link></para>
  </refsect1>
</refentry>
