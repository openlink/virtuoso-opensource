<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- 
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="xpf_unordered">
  <refmeta> 
    <refentrytitle>unordered</refentrytitle> 
    <refmiscinfo>XPATH</refmiscinfo>
  </refmeta> 
  <refnamediv> 
    <refname>unordered</refname> 
    <refpurpose>Returns the given sequence in any order.</refpurpose>
  </refnamediv> 
  <refsynopsisdiv> 
    <funcsynopsis id="xpf_syn_unordered"> 
      <funcprototype id="xpf_proto_unordered">
        <funcdef>sequence <function>unordered</function></funcdef> 
	<paramdef><parameter>input</parameter> sequence</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="xpf_desc_unordered"><title>Description</title>
<para>The function takes a sequence, or more typically an expression that evaluates to a sequence, 
and indicates that the result sequence may be returned in any order.
</para>
</refsect1>
  <refsect1 id="xpf_params_unordered"><title>Parameters</title>
    <refsect2><title>input</title>
      <para>The sequence of nodes</para></refsect2>
  </refsect1>
  <refsect1 id="xpf_ret_unordered"><title>Return Types</title><para>Sequence</para></refsect1>

  <refsect1 id="xpf_examples_unordered"><title>Examples</title>
    <example id="xpf_ex_unordered"><title>Finding pairs of books</title>
      <para>The following example is from the XQuery standard and it
illustrates how to find pairs of books that have different titles but the same set of authors 
(possibly in a different order).</para>
<screen>
&lt;bib&gt;
{
   for $book1 in document("bib.xml")/bib/book,
       $book2 in document("bib.xml")/bib/book
   where $book1/title &gt; $book2/title
   and $book1/author = $book2/author
   return
      &lt;book-pair&gt;
         { $book1/title, $book2/title }
      &lt;/book-pair&gt;
}
&lt;/bib&gt;
</screen>
    </example>
  </refsect1>
</refentry>

