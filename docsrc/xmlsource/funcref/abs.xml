<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_abs">
  <refmeta>
    <refentrytitle>abs</refentrytitle>
    <refmiscinfo>number</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>abs</refname>
    <refpurpose>Return the absolute value of a number</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_abs">
      <funcprototype id="fproto_abs">
        <funcdef><function>abs</function></funcdef>
        <paramdef>in <parameter>num</parameter> any</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_abs">
    <title>Description</title>
    <para><function>abs</function> returns the absolute value of its argument.
    </para>
  </refsect1>
  <refsect1 id="params_abs"><title>Parameters</title>
    <refsect2><title>num</title>
      <para><type>Numeric</type> value whose absolute value is to be
      returned</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_abs"><title>Return Types</title>
    <para>Same as parameter type.</para>
  </refsect1>
  <refsect1 id="examples_abs"><title>Examples</title>
    <example id="ex_abs"><title>Simple example</title>
      <para>Get absolute values of several numeric values</para>
      <screen>
SQL> select cast (abs (-2.343) as numeric),
  cast(abs (0) as numeric),
  cast (abs (3.1415) as numeric);

callret          callret         callret
DECIMAL          DECIMAL         DECIMAL
_________________________________________

2.343            0               3.1415

1 Rows. -- 5 msec.
      </screen>
    </example>
  </refsect1>
</refentry>

