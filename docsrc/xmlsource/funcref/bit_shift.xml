<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_bit_shift">
  <refmeta>
    <refentrytitle>bit_shift</refentrytitle>
    <refmiscinfo>number</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>bit_shift</refname>
    <refpurpose>Returns the result of bitwise shift operation over two 32-bit integers.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_bit_shift">
      <funcprototype id="fproto_bit_shift">
        <funcdef><function>bit_shift</function></funcdef>
	<paramdef>in <parameter>value</parameter> integer</paramdef>
	<paramdef>in <parameter>distance</parameter> integer</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_bit_shift">
    <title>Description</title>
    <para>The function returns bitwise shift of two given integers.
    Depending on the arguments, the shift may be 	left or right.  
	For right-shift, leftmost bits of the result are filled by the value 
    of the 31-st bit.
</para>
    <para>On 64-bit platforms, both arguments are intentionally truncated to 32 bits 
    and the shift is restricted to 32 bits to maintain compatibility.</para>
  </refsect1>
  <refsect1 id="params_bit_shift">
    <title>Parameters</title>
    <refsect2><title>value</title>
      <para>The value to be shifted.</para>
    </refsect2>
    <refsect2><title>distance</title>
      <para>The sign of the parameter specifies the direction of the shift:
      positive values indicate shift to the left, negative values indicate
      shift to the right. The absolute value of the parameter specifies
      the number of bits to shift. The value of zero means that the
      result is equal to the value of the first argument.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_bit_shift"><title>Return Types</title>
    <para>Integer.</para>
  </refsect1>
<!--   <refsect1 id="errors_bit_shift">
    <title>Errors</title>

In case of non-function-specific errors, i.e. only common
     parameter errors are signalled, comment out the table below 
     otherwise add the unique error values as individual errorcodes

    <para>This function can generate the following errors:</para>
    <errorcode></errorcode>
  </refsect1>
 -->
  <refsect1 id="examples_bit_shift">
    <title>Examples</title>
    <example id="ex_bit_shift"><title>Bitwise-shifting</title>
      <screen><![CDATA[
select bit_shift (18, 6);
1152

select bit_shift (-18, 6);
-1152

select bit_shift (1152, -6);
18

select bit_shift (-1152, -6);
-18
]]>
</screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_bit_shift">
    <title>See Also</title>
    <para><link linkend="fn_bit_and"><function>bit_and</function></link></para>
    <para><link linkend="fn_bit_or"><function>bit_or</function></link></para>
    <para><link linkend="fn_bit_not"><function>bit_not</function></link></para>
    <para><link linkend="fn_bit_xor"><function>bit_xor</function></link></para>
  </refsect1>
</refentry>
