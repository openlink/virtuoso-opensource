<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_xenc_key_serialize">
  <refmeta>
    <refentrytitle>xenc_key_serialize</refentrytitle>
    <refmiscinfo>hash</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>xenc_key_serialize</refname>
    <refpurpose>Extracts a key from user's repository</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_xenc_key_serialize">
      <funcprototype id="fproto_xenc_key_serialize">
        <funcdef>varchar <function>xenc_key_serialize</function></funcdef>
	<paramdef>in <parameter>name</parameter> varchar</paramdef>
	<paramdef>in <parameter>public</parameter> int</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_xenc_key_serialize">
    <title>Description</title>
    <para>
	The function returns a string containing base64 encoded binary 
	key data. It is used to extract symmetric or asymmetric keys.
	So if key is asymmetric (RSA or DSA) the second parameter 
	designate which part to extract private or public.
    </para>
  </refsect1>
  <refsect1 id="params_xenc_key_serialize">
    <title>Parameters</title>
    <refsect2><title>name</title>
      <para>The key name.</para>
    </refsect2>
    <refsect2><title>public</title>
      <para>1 - export public part, 0 - export private key if exists.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_xenc_key_serialize"><title>Return Types</title>
      <para>The function returns serialized key material.</para>
  </refsect1>
  <refsect1 id="examples_xenc_key_serialize">
    <title>Examples</title>
    <example id="ex_xenc_key_serialize"><title>Exporting a RSA public key.</title>
	<para>
	    The 'ServerPrivate.pfx' is a own RSA key so we exporting public part 
	    to supply to some party to encrypt data for us.
	</para>
	<screen><![CDATA[
SQL> select xenc_key_serialize ('ServerPrivate.pfx', 1);
callret
VARCHAR
_______________________________________________________________________________

MIGJAoGBAMuSqCUCsie6RGUPBdtyM3fPF+yN5ot34i9/IPmjfmlSOlOQ/A9eYClJyvxRVDEHkkNFJWUzPWVRDoIEsUsYgBA6ls8qfai6XdWYoB/2dFB/08tT5uJajNleSF5sjJrjcPvmvn7k1SrVFtCIILioihtGpR2Dpp26MFjfffAnLhiDAgMBAAE=

1 Rows. -- 1 msec.
	    
]]>
</screen>
    </example>
  </refsect1>
</refentry>
