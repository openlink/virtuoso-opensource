<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<refentry id="fn_st_y">
  <refmeta>
    <refentrytitle>st_y</refentrytitle>
    <refmiscinfo>geo</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>st_y</refname>
    <refpurpose>Retrieves the y coordinate of a geometry.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_st_y">
      <funcprototype id="fproto_st_y">
        <funcdef><function>st_y</function></funcdef>
	<paramdef>in <parameter>g</parameter> any</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_st_y">
    <title>Description</title>
    <para>Retrieves the y coordinate of a geometry.</para>
  </refsect1>
  <refsect1 id="params_st_y">
    <title>Parameters</title>
    <refsect2><title>g</title>
      <para>Geometry</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_st_y"><title>Return Types</title>
    <para>Returns double precision.</para>
  </refsect1>
  <refsect1 id="examples_st_y">
    <title>Examples</title>
    <example id="ex_st_y"><title>Simple Use</title>
<programlisting><![CDATA[
SQL>SELECT st_y( st_point (10, 20));
callret
VARCHAR
_______________________________
 20
No. of rows in result: 1

SQL>SPARQL
SELECT DISTINCT (bif:st_y(?geo ))
WHERE
   {
     ?m geo:geometry ?geo .
   }
LIMIT 10;

callret-0
ANY
_______________________________
 -90
 -86.96666717529297
 -85.41666412353516
 -85.11666870117188
 -85.05999755859375
 -85.04779815673828
 -85.03780364990234
 -85.03070068359375
 -84.99210357666016
 -84.98509979248047
No. of rows in result: 10
]]></programlisting>
    </example>
  </refsect1>
  <refsect1 id="seealso_st_y">
    <title>See Also</title>
    <para><link linkend="fn_st_point"><function>st_point</function></link></para>
    <para><link linkend="fn_st_x"><function>st_x</function></link></para>
    <para><link linkend="fn_st_distance"><function>st_distance</function></link></para>
    <para><link linkend="fn_ST_SRID"><function>st_srid</function></link></para>
    <para><link linkend="fn_ST_SetSRID"><function>st_setsrid</function></link></para>
    <para><link linkend="fn_st_astext"><function>st_astext</function></link></para>
    <para><link linkend="fn_st_geomfromtext"><function>st_geomfromtext</function></link></para>
    <para><link linkend="fn_st_intersects"><function>st_intersects</function></link></para>
    <para><link linkend="fn_st_contains"><function>st_contains</function></link></para>
    <para><link linkend="fn_st_within"><function>st_within</function></link></para>
    <para><link linkend="fn_isgeometry"><function>isgeometry</function></link></para>
    <para><link linkend="fn_geo_insert"><function>geo_insert</function></link></para>
    <para><link linkend="fn_geo_delete"><function>geo_delete</function></link></para>
    <para><link linkend="fn_rdf_geo_add"><function>DB.DBA.RDF_GEO_ADD</function></link></para>
    <para><link linkend="fn_rdf_geo_fill"><function>DB.DBA.RDF_GEO_FILL</function></link></para>
  </refsect1>
</refentry>
