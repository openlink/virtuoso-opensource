<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_XMLType.setSchemaValidated">
  <refmeta>
    <refentrytitle>XMLType.setSchemaValidated</refentrytitle>
    <refmiscinfo>xml</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>XMLType.setSchemaValidated</refname>
    <refpurpose>Changes the internal &quot;is validated&quot; flag of the given XMLType instance.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_XMLType.setSchemaValidated">
      <funcprototype id="fproto_XMLType.setSchemaValidated">
        <funcdef><function>XMLType.setSchemaValidated</function></funcdef>
	<paramdef><optional>in <parameter>flag</parameter> integer default 1</optional></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_XMLType.setSchemaValidated">
    <title>Description</title>
    <para>Every XMLType instance has a special internal &quot;is validated&quot; flag;
The first successful call of the member function <function>XMLType.schemaValidate()</function>
will set this flag to 1 indicating that next such calls are redundant and should do nothing.
If a given XMLType instance is made by a procedure that guarantees the match of the result to
an expected schema then one can set this flag without running actual validation.
It is also possible to reset this flag to 0 in order to force the next call of <function>XMLType.schemaValidate()</function>
to perform a validation.
</para>
  </refsect1>
  <refsect1 id="params_XMLType.setSchemaValidated">
    <title>Parameters</title>
    <refsect2><title>flag</title>
      <para>An integer that becomes a new value of the flag.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_XMLType.setSchemaValidated"><title>Return Types</title>
    <para>The function returns a new value of the flag.</para>
  </refsect1>
  <refsect1 id="examples_XMLType.setSchemaValidated">
    <title>Examples</title>
    <example id="ex_XMLType.setSchemaValidated"><title>Default use</title>
      <para>This call prevents the value of myXMLinstance from being validated in the future.</para>
      <screen><![CDATA[
myXMLinstance.setSchemaValidated();
]]>
</screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_XMLType.setSchemaValidated">
    <title>See Also</title>
    <para><link linkend="fn_XMLType.isSchemaValidated"><function>XMLType.isSchemaValidated</function></link></para>
    <para><link linkend="fn_XMLType.schemaValidate"><function>XMLType.schemaValidate</function></link></para>
  </refsect1>
</refentry>
