<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_file_to_string_output">
  <refmeta>
    <refentrytitle>file_to_string_output</refentrytitle>
    <refmiscinfo>file</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>file_to_string_output</refname>
    <refpurpose>get contents of a file as a string output stream</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_file_to_string_output">
      <funcprototype id="fproto_file_to_string_output">
        <funcdef><function>file_to_string_output</function></funcdef>
        <paramdef>in <parameter>file</parameter> varchar</paramdef>
        <paramdef>in <parameter>from</parameter> integer</paramdef>
        <paramdef>in <parameter>to</parameter> integer</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_file_to_string_output"><title>Description</title>
    <para>This function requires dba privileges.</para>
    <para>This function returns a   string output stream
    initialized to contain the text of the file or its segment, on local file system path
    relative to the server's working directory.</para>
    <para><function>file_to_string_output</function> can handle longer
    files than
    <link linkend="fn_file_to_string"><function>file_to_string</function></link>
    and the resulting string output, if too long to be converted into
    a varchar, can be stored inside a blob.</para>
    <para>Access controls in the server configuration file apply. An attempt
    to access a file in a directory where access is not explicitly allowed will signal an error.</para>
  </refsect1>
  <refsect1 id="params_file_to_string_output"><title>Parameters</title>
    <refsect2><title>file</title>
      <para>a <type>varchar</type> path relative to server's working directory.</para>
    </refsect2>
    <refsect2><title>from</title>
      <para>an optional <type>integer</type> byte offset of the start of the segment to
      extract. Defaults to 0.</para>
    </refsect2>
    <refsect2><title>to</title>
      <para>an optional <type>integer</type> byte offset of the end of the requested segment.
      Defaults to file length.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="examples_file_to_string_output"><title>Examples</title>
    <example id="ex_file_to_string_output"><title>Insert file contents into a table</title>
      <para>This example shows how to insert file contents into
      a table <computeroutput>file_table</computeroutput> with
      two columns.</para>
      <screen>
create table
file_table (
  ft_name varchar,
  ft_cont long varbinary,
  primary key (ft_name));

create procedure
insert_files (in fname varchar)
{
  declare strout_handle any;

  strout_handle := file_to_string_output (fname);
  insert into file_table (ft_name, ft_cont)
    values (fname, strout_handle);

  strout_handle := file_to_string_output (fname, 10);
  insert into file_table (concat (ft_name, '_1'), ft_cont)
    values (fname, strout_handle);

  strout_handle := file_to_string_output (fname, 10, 20);
  insert into file_table (concat (ft_name, '_2'), ft_cont)
    values (fname, strout_handle);
};

insert_file ('foo.dat');
      </screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_file_to_string_output"><title>See Also</title>
    <para><link linkend="fn_file_to_string"><function>file_to_string</function>
    </link>,
    <link linkend="fn_string_to_file"><function>string_to_file</function>
    </link>,
    <link linkend="fn_string_output"><function>string_output</function></link></para>
  </refsect1>
</refentry>


