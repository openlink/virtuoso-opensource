<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  
  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
  project.
  
  Copyright (C) 1998-2019 OpenLink Software
  
  This project is free software; you can redistribute it and/or modify it
  under the terms of the GNU General Public License as published by the
  Free Software Foundation; only version 2 of the License, dated June 1991.
  
  This program is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  General Public License for more details.
  
  You should have received a copy of the GNU General Public License along
  with this program; if not, write to the Free Software Foundation, Inc.,
  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA

  : template.sh,v 1.5 2006/04/18 21:59:13 ivan Exp $
-->
<refentry id="fn_xenc_pkcs12_export">
  <refmeta>
    <refentrytitle>xenc_pkcs12_export</refentrytitle>
    <refmiscinfo>hash</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>xenc_pkcs12_export</refname>
    <refpurpose>Generates a secure Public-Key Cryptography Standards (PKCS#12) file from a PEM (base64 encoded DER) file comprised of an X.509 certificate and an associated Private Key.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_xenc_pkcs12_export">
      <funcprototype id="fproto_xenc_pkcs12_export">
        <funcdef><function>xenc_pkcs12_export</function></funcdef>
	<paramdef>in <parameter>key_name</parameter> varchar</paramdef>
	<paramdef>in <parameter>name</parameter> varchar</paramdef>
	<paramdef>in <parameter>pass</parameter> varchar</paramdef>
	<paramdef><optional>in <parameter>export_chain</parameter> integer := 0 </optional></paramdef>
	<paramdef><optional>in <parameter>additional_certs</parameter> varchar</optional></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_xenc_pkcs12_export">
    <title>Description</title>
    <para>Generates a secure Public-Key Cryptography Standards (PKCS#12) file from a PEM (base64 encoded DER) file comprised of an X.509 certificate and an associated Private Key.</para>
  </refsect1>
  <refsect1 id="params_xenc_pkcs12_export">
    <title>Parameters</title>
    <refsect2><title>key_name</title>
      <para>Name that identifies private key associated with X.509 certificate.</para>
    </refsect2>
    <refsect2>
    	<title>name</title>
      <para>Name to used to identify each  pkcs#12 object bundle.</para>
    </refsect2>
    <refsect2><title>pass</title>
      <para>A password or pass phrase used to encrypt the pkcs#12 file</para>
    </refsect2>
    <refsect2><title>export_chain</title>
      <para>1/0 - to export the certificate chain if there is a such</para>
    </refsect2>
    <refsect2><title>additional_certs</title>
      <para>Certificates in PEM format to be added to the bundle even if they are not in the certificate chain stored in
      	the memory object of the certificate</para>
    </refsect2>
  </refsect1>
  <refsect1 id="examples_xenc_pkcs12_export">
    <title>Examples</title>
    <example id="ex_xenc_pkcs12_export"><title>Persisting a key &amp; certificate</title>
      <para>The example below persists a key named 'id_rsa' and certificate created for it into user's key space.
      Thus after server restart the key will be available again.</para>
<programlisting><![CDATA[
       USER_KEY_STORE (user, 'id_rsa', 'X.509', 2, '', xenc_pkcs12_export ('id_rsa', 'CA Certificate', ''));
]]></programlisting>
    </example>
  </refsect1>
  <refsect1 id="seealso_xenc_pkcs12_export">
    <title>See Also</title>
    <para><link linkend="fn_user_key_store"><function>user_key_store()</function></link></para>
    <para><link linkend="fn_xenc_x509_generate"><function>xenc_x509_generate()</function></link></para>
    <para><link linkend="fn_xenc_x509_ss_generate"><function>xenc_x509_ss_generate()</function></link></para>
  </refsect1>
</refentry>
