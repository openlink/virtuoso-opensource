<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_charset_define">
  <refmeta>
    <refentrytitle>charset_define</refentrytitle>
    <refmiscinfo>localization</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>charset_define</refname>
    <refpurpose>Define a character set.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
  <funcsynopsis id="fsyn_charset_define">
    <funcprototype id="fproto_charset_define">
      <funcdef><function>charset_define</function></funcdef>
	<paramdef>in <parameter>name</parameter> varchar</paramdef>
	<paramdef>in <parameter>charset_string</parameter> any</paramdef>
	<paramdef>in <parameter>aliases</parameter> any</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_charset_define">
    <title>Description</title>
    <para>This function creates a new narrow
    language-specific character set, or redefines an existing one.</para>
  </refsect1>
  <refsect1 id="params_charset_define"><title>Parameters</title>
    <refsect2><title>name</title>
      <para>The name of the character set to define.  This becomes the &quot;preferred&quot; name of the character set.</para>
    </refsect2>
    <refsect2><title>charset_string</title>
      <para>Wide string with the character codes for each given character
from 1 to 255.  That is, a 255-byte long NCHAR defining the Unicode
codes for narrow chars 1-255.</para>
    </refsect2>
    <refsect2><title>aliases</title>
      <para>Vector of character set names that are to be aliases of the character set being defined. Use NULL if there are to be no aliases.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_charset_define"><title>Return Types</title><para>None</para>
  </refsect1>
  <refsect1 id="errors_charset_define"><title>Errors</title>
    <table><title>Errors signalled by</title>
      <tgroup cols="3">
	<thead>
	  <row>
	    <entry>sqlstate</entry><entry>error code</entry><entry>error text</entry>
	  </row>
        </thead>
        <tbody>
	  <row>
	    <entry><errorcode>2C000</errorcode></entry>
	    <entry><errorcode>IN001</errorcode></entry>
	    <entry><errorname>The UTF-8 is not a redefinable charset</errorname></entry>
	  </row>
	  <row>
	    <entry><errorcode>2C000</errorcode></entry>
	    <entry><errorcode>IN002</errorcode></entry>
	    <entry><errorname>charset_define : Charset table not a wide string</errorname></entry>
	  </row>
	  <row>
	    <entry><errorcode>2C000</errorcode></entry>
	    <entry><errorcode>IN003</errorcode></entry>
	    <entry><errorname>charset_define : 0 not allowed as a charset definition</errorname></entry>
	  </row>
	  <row>
	    <entry><errorcode>2C000</errorcode></entry>
	    <entry><errorcode>IN004</errorcode></entry>
	    <entry><errorname>charset &lt;name&gt; already defined. Drop it first</errorname></entry>
	  </row>
	  <row>
	    <entry><errorcode>2C000</errorcode></entry>
	    <entry><errorcode>IN005</errorcode></entry>
	    <entry><errorname>Alias &lt;position&gt; is not of type STRING</errorname></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </refsect1>
  <refsect1 id="examples_charset_define"><title>Examples</title>
    <example id="ex_charset_define"><title>New 4th character, and aliases</title>
      <para>To setup the 4th character to be Unicode 0xffce, and give the
      character set 2 aliases, you would make a call like this:</para>
      <programlisting>charset_define ('NEW-CHARSET',
      N'\x1\x2\x3\xffce\x5....' , vector ('SOME-CHARSET', 'ANOTHER-CHARSET'));</programlisting>
      <para>The character string should contain 255 wide characters that are arbitrary unicode values.</para>
    </example>
  </refsect1>
  <refsect1 id="seealso_charset_define"><title>See Also</title>
    <para><link linkend="fn_charsets_list"><function>charsets_list()</function></link></para>
  </refsect1>
</refentry>
