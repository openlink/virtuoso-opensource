<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<refentry id="fn_VECTOR_OF_NONNULLS_AGG">
  <refmeta>
    <refentrytitle>DB.DBA.VECTOR_OF_NONNULLS_AGG</refentrytitle>
    <refmiscinfo>aggr</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>DB.DBA.VECTOR_OF_NONNULLS_AGG</refname>
    <refpurpose>Returns a vector of passed values ingoring NULL arguments.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_VECTOR_OF_NONNULLS_AGG">
      <funcprototype id="fproto_VECTOR_OF_NONNULLS_AGG">
        <funcdef>vector <function>DB.DBA.VECTOR_OF_NONNULLS_AGG</function></funcdef>
        <paramdef><parameter>value_expression</parameter> any</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_VECTOR_OF_NONNULLS_AGG"><title>Description</title>
    <para><function>DB.DBA.VECTOR_OF_NONNULLS_AGG</function> returns a vector of passed values.
    Similar to <link linkend="fn_VECTOR_AGG()"><function>DB.DBA.VECTOR_AGG()</function></link> but ignores NULL arguments.</para>
    <para>The order of items in the vector repeats the order of passing individual values to the aggregate.</para>
  </refsect1>
  <refsect1 id="params_VECTOR_OF_NONNULLS_AGG"><title>Parameters</title>
    <refsect2><title>value_expression</title>
    <para>Value of item for aggregation.
    </para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_VECTOR_OF_NONNULLS_AGG"><title>Return Types</title>
    <para>Any
    </para>
  </refsect1>
  <refsect1 id="examples_VECTOR_OF_NONNULLS_AGG"><title>Examples</title>
    <example id="ex_VECTOR_OF_NONNULLS_AGG_1"><title>Simple Use</title>
    <para>As the order of items in the vector repeats the order of passing individual values to the aggregate,
    it is possible to write, for instance:
    </para>
<programlisting><![CDATA[
-- Get an ordered vector of X-es
SELECT DB.DBA.VECTOR_OF_NONNULLS_AGG (subquery.X)
FROM (SELECT X FROM ... ORDER BY X) as subquery
]]></programlisting>
    <para>or</para>
<programlisting><![CDATA[
SELECT DB.DBA.VECTOR_OF_NONNULLS_AGG (subquery.Y)
FROM (SELECT Y FROM ... ORDER BY X) as subquery
]]></programlisting>
    <para>and get vector of Y-s that are ordered by matching values of X-es.</para>
    </example>
  </refsect1>
  <refsect1 id="seealso_VECTOR_OF_NONNULLS_AGG"><title>See Also</title>
    <para><link linkend="fn_VECTOR_AGG"><function>DB.DBA.VECTOR_AGG()</function></link></para>
    <para><link linkend="fn_VECTOR_OR_NULL_AGG"><function>DB.DBA.VECTOR_OR_NULL_AGG()</function></link></para>
    <para><link linkend="fn_VECTOR_OF_NONNULLS_OR_NULL_AGG"><function>DB.DBA.VECTOR_OF_NONNULLS_OR_NULL_AGG()</function></link></para>
    <para><link linkend="fn_VECTOR_CONCAT_AGG"><function>DB.DBA.VECTOR_CONCAT_AGG()</function></link></para>
    <para><link linkend="fn_BAG_AGG"><function>DB.DBA.BAG_AGG()</function></link></para>
    <para><link linkend="fn_BAG_OF_NONNULLS_AGG"><function>DB.DBA.BAG_OF_NONNULLS_AGG()</function></link></para>
    <para><link linkend="fn_BAG_OR_NULL_AGG"><function>DB.DBA.BAG_OR_NULL_AGG()</function></link></para>
    <para><link linkend="fn_BAG_OF_NONNULLS_OR_NULL_AGG"><function>DB.DBA.BAG_OF_NONNULLS_OR_NULL_AGG()</function></link></para>
    <para><link linkend="fn_BAG_CONCAT_AGG"><function>DB.DBA.BAG_CONCAT_AGG()</function></link></para>
    <para><link linkend="fn_GROUP_CONCAT"><function>DB.DBA.GROUP_CONCAT()</function></link></para>
    <para><link linkend="fn_GROUP_CONCAT_DISTINCT"><function>DB.DBA.GROUP_CONCAT_DISTINCT()</function></link></para>
    <para><link linkend="fn_GROUP_DIGEST"><function>DB.DBA.GROUP_DIGEST()</function></link></para>
    <para><link linkend="fn_SAMPLE"><function>DB.DBA.SAMPLE()</function></link></para>
  </refsect1>
</refentry>

