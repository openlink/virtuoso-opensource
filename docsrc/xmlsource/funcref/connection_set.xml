<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_connection_set">
  <refmeta>
    <refentrytitle>connection_set</refentrytitle>
    <refmiscinfo>ws</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>connection_set</refname>
    <refpurpose>Associates a value to the name in the context of the present connection</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_connection_set">
      <funcprototype id="fproto_connection_set">
        <funcdef><function>connection_set</function></funcdef>
	<paramdef>in <parameter>name</parameter> varchar</paramdef>
	<paramdef>in <parameter>value</parameter> any</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_connection_set"><title>Description</title>
    <para>This associates a value to the name in the context of present
    connection. The name should be a string and the value can be any
    data type except blob, open cursor or an XML entity.
    If the value is an array it may not contain the restricted types.</para>
    <para>Connection variable setting is not logged and information
    stored will be lost when the connection is closed.
    The value can be retrieved by any future statement executing within
    the same connection. Connection variables can
    be used as a global variable mechanism for stored procedures, the
    scope being the client connection.</para>
    <para>In the case of VSP or SOAP this mechanism cannot be used to
    pass information between requests by the same client. It will however,
    be useful for having 'global variables' between procedures called
    within the same HTTP request.
Note that this mechanism is used to provide persistent HTTP session variables in some cases but this works through special before and after code which stores the values set with this function into an external session structure.  In this sense this function itself has nothing to do with web session management although it can be used as a component for such.
</para>
  </refsect1>
  <refsect1 id="params_connection_set"><title>Parameters</title>
    <refsect2><title>name</title>
      <para><type>VARCHAR</type> name to associate the value with.</para>
    </refsect2>
    <refsect2><title>value</title>
      <para><parameter>value</parameter> to be stored. May be any data type
      except <type>LOB</type>, open cursor or XML entity.  If the value is an
      <type>array</type>, it may not contain the restricted types.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_connection_set"><title>Return Values</title>
    <para>None</para>
  </refsect1>
  <refsect1 id="errors_connection_set"><title>Errors</title>
    <table><title>Errors signalled by connection_set</title>
      <tgroup cols="4">
       <thead><row><entry>SQLState</entry><entry>Error Code</entry><entry>Error Text</entry><entry>Description</entry></row></thead>
	<tbody>
	  <row>
	    <entry><errorcode>22023</errorcode></entry>
	    <entry><errorcode>SR049</errorcode></entry>
	    <entry><errorname>Data type is not suitable for storage into a global variable (connection_set)</errorname></entry>
	    <entry></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </refsect1>
  <refsect1><title>Examples</title>
    <example id="ex_connection_set"><title>Setting and Retrieving Connection Variables</title>
<para>
From SQL
</para>
<screen>
SQL> select connection_get('var_demo');
callret
VARCHAR
__________________________________________________________________

NULL

SQL> connection_set('var_demo', 'some arb data');

SQL> select connection_get('var_demo');
callret
VARCHAR
__________________________________________________________________

some arb data
</screen>
<para>From a VSP page</para>
<screen>
  &lt;?vsp
    declare id integer;
    id := 12;
    connection_set ('ID', id);
    connection_set ('saved_request' , lines);
  ?&gt;
</screen>
    </example></refsect1>
  <refsect1 id="seealso_connection_set"><title>See Also</title>
    <para><link linkend="fn_connection_get">connection_get</link></para>
    <para><link linkend="fn_connection_is_dirty">connection_is_dirty</link></para>
    <para><link linkend="fn_connection_vars_set">connection_vars_set</link></para>
  </refsect1>
</refentry>

