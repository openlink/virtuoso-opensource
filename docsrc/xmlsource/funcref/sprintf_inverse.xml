<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<refentry id="fn_sprintf_inverse">
  <refmeta>
    <refentrytitle>sprintf_inverse</refentrytitle>
    <refmiscinfo>string</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>sprintf_inverse</refname>
    <refpurpose>returns vector on a specified pattern.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_sprintf_inverse">
      <funcprototype id="fproto_sprintf_inverse">
        <funcdef><function>sprintf_inverse</function></funcdef>
        <paramdef><parameter>strg</parameter> string</paramdef>
        <paramdef><parameter>format</parameter> string</paramdef>
        <paramdef><parameter>err</parameter> integer</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc"><title>Description</title>
    <para>sprintf_inverse gets a string to parse, a format string and an integer (0,1 or 2)
that indicates error recovery method. If the first argument matches the format string then it
returns vector of the pattern values.
</para>
</refsect1>
<refsect1 id="params_sprintf_inverse">
    <title>Parameters</title>
    <refsect2><title>strg</title>
      <para>a string to parse</para>
    </refsect2>
    <refsect2><title>format</title>
      <para>a format string</para>
    </refsect2>
    <refsect2><title>err</title>
      <para>indicates the error recovery method in case the string does not match to the format:
0 - to return NULL,
1 - to return shorter vector that consists of all values extracted before the mismatch has been detected,
2 - to return vector of expected length with NULLs instead of values that were not found due to mismatch
</para>
    </refsect2>
  </refsect1>
 <refsect1 id="examples_sprintf_inverse">
   <title>Examples</title>
    <example id="ex_sprintf_inverse"><title>Example 1</title>
      <screen><![CDATA[
SQL> select sprintf_inverse ('qwe123asd456zxcABRACADABRA', 'qwe%dasd%dzxc%s', 2);
callret
VARCHAR
_______________________________________________________________________________

vector(123,456,0x00adfae8)

1 Rows. -- 0 msec.
SQL>
]]></screen>
    </example>
    <example id="ex_sprintf_inverse"><title>Example 2</title>
      <screen><![CDATA[
SQL> select sprintf_inverse ('---123', '%-R', 2);
callret
VARCHAR
_______________________________________________________________________________

vector(0x00b070e8)

1 Rows. -- 0 msec.
SQL>
]]></screen>
    </example>
  </refsect1>
</refentry>



