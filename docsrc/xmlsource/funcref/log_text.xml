<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_log_text">
  <refmeta>
    <refentrytitle>log_text</refentrytitle>
    <refmiscinfo>admin</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>log_text</refname>
    <refpurpose>inserts statements into the roll forward log</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_log_text">
      <funcprototype id="fproto_log_text">
        <funcdef><function>log_text</function></funcdef>
        <paramdef>in <parameter>text</parameter> varchar</paramdef>
        <paramdef>in <optional><parameter>arg_1</parameter> any</optional></paramdef>
        <paramdef><optional><parameter>...</parameter></optional></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_log_text"><title>Description</title>
    <para>The log_text function can be used to insert a SQL statement
    into the roll forward log.</para>
    <para>The log_text function causes the SQL text given as first argument to
    be executed at roll forward time with the following arguments as parameters,
    bound from left to right to the parameter markers in the statement ('?').
    There can be a maximum of 8 parameters but these can be arrays.</para>
  </refsect1>
  <refsect1 id="params_log_text"><title>Parameters</title>
    <refsect2><title>text</title>
      <para><type>VARCHAR</type>SQL statement to be added in the
      transaction log.</para>
    </refsect2>
    <refsect2><title>arg1..arg8</title>
      <para>Parameters to be passed to logged statement.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="examples_log_text"><title>Examples</title>
    <example id="ex_log_text_1"><title>Log a procedure call</title>
    <para>Log a procedure call instead of its effects.</para>
    <screen>
create procedure xx ()
{
  log_text ('xx (?)', arg);
  log_enable (0);
  ... action code
  log_enable (1);
}
</screen>
  </example>
  </refsect1>
  <refsect1 id="seealso_log_text"><title>See Also</title>
    <para><link linkend="fn_log_enable"><function>log_enable</function></link></para>
  </refsect1>
</refentry>


