<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_xenc_x509_csr_generate">
  <refmeta>
    <refentrytitle>xenc_x509_csr_generate</refentrytitle>
    <refmiscinfo>hash</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>xenc_x509_csr_generate</refname>
    <refpurpose>Generate Certificate Signing Request (CSR)</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_xenc_x509_csr_generate">
      <funcprototype id="fproto_xenc_x509_csr_generate">
        <funcdef>varchar <function>xenc_x509_csr_generate</function></funcdef>
	        <paramdef>in <parameter>cli_pk_name</parameter> varchar</paramdef>
          <paramdef>in <parameter>subject</parameter> array</paramdef>
          <paramdef>in <parameter>extensions</parameter> array</paramdef>
     </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_xenc_x509_csr_generate"><title>Description</title>
      <para>This function generates Certificate Signing Request (CSR)</para>
  </refsect1>
  <refsect1 id="params_xenc_x509_csr_generate"><title>Parameters</title>
    <refsect2>
    	<title>cli_pk_name</title>
      <para>The user's private key name.</para>
    </refsect2>
    <refsect2>
      <title>subject</title>
      <para>An array of name/value pairs representing the subject aka name enties, for ex:</para>
<programlisting><![CDATA[
('CN', 'Demo User', 'C', 'US')	
]]></programlisting>      
    </refsect2>
    <refsect2>
    	<title>extensions</title>
  	  <para>An array of name/value pairs to add as X.509v3 extensions to certificate.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_xenc_x509_csr_generate"><title>Return Types</title>
      <para>String</para>
  </refsect1>
  <refsect1 id="errors_xenc_x509_csr_generate"><title>Errors</title>
    <table><title>Errors signalled by <function>xenc_x509_csr_generate</function></title>
      <tgroup cols="4">
        <thead>
          <row>
            <entry>SQLState</entry>
            <entry>Error Code</entry>
            <entry>Error Text</entry>
            <entry>Description</entry>
          </row>
        </thead>
	<tbody>
	  <row>
	    <entry><errorcode>22023</errorcode></entry>
	    <entry><errorcode>XECXX</errorcode></entry>
	    <entry><errorname>Missing key</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>22023</errorcode></entry>
	    <entry><errorcode>XECXX</errorcode></entry>
	    <entry><errorname>Key is not DSA nor RSA</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>22023</errorcode></entry>
	    <entry><errorcode>XECXX</errorcode></entry>
	    <entry><errorname>Missing private key</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>22023</errorcode></entry>
	    <entry><errorcode>XECXX</errorcode></entry>
	    <entry><errorname>Subject array must be name/value pairs</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>22023</errorcode></entry>
	    <entry><errorcode>XECXX</errorcode></entry>
	    <entry><errorname>Extension array must be name/value pairs</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>42000</errorcode></entry>
	    <entry><errorcode>XECXX</errorcode></entry>
	    <entry><errorname>Can not create pkey</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>42000</errorcode></entry>
	    <entry><errorcode>XECXX</errorcode></entry>
	    <entry><errorname>Can not assign primary key</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>42000</errorcode></entry>
	    <entry><errorcode>XECXX</errorcode></entry>
	    <entry><errorname>Can not create pkey</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>42000</errorcode></entry>
	    <entry><errorcode>XECXX</errorcode></entry>
	    <entry><errorname>Can not create x.509 structure</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>42000</errorcode></entry>
	    <entry><errorcode>XECXX</errorcode></entry>
	    <entry><errorname>Can not sign certificate : [the sign error text]</errorname></entry>
	    <entry></entry>
	  </row>	  	  	  	  
	</tbody>
      </tgroup>
    </table>
  </refsect1>
  <refsect1 id="examples_xenc_x509_csr_generate"><title>Examples</title>
    <example id="ex_xenc_x509_csr_generate">
<programlisting><![CDATA[
SQL> create procedure csr_gen_demo()
{
declare kname, cvalue varchar; 
       xenc_key_RSA_create ('myRSAkey', 1024);
       xenc_x509_csr_generate ('myRSAkey',
		vector (
			'CN', 'Demo user',
			'C',  'US',
			'O',  'OpenLink',
			'OU', 'Accounts',
			'emailAddress', 'demo@openlinksw.com'), 
		vector ('subjectAltName', 'URI: http://www.openlinksw.com/dataspace/person/demo#this', 'nsComment', 'Virtuoso Generated Certificate', 
			'authorityKeyIdentifier', 'keyid,issuer:always'));
};

Done. -- 0 msec.
SQL> select csr_gen_demo();
temp
VARCHAR
_______________________________________________________________________________

-----BEGIN CERTIFICATE REQUEST-----
MIICLDCCAZUCADBrMRIwEAYDVQQDEwlEZW1vIHVzZXIxCzAJBgNVBAYTAlVTMREw
DwYDVQQKEwhPcGVuTGluazERMA8GA1UECxMIQWNjb3VudHMxIjAgBgkqhkiG9w0B
CQEWE2RlbW9Ab3Blbmxpbmtzdy5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ
AoGBAM+e21xeQIJX5ySd6Juc3GtCnyT+JvDKgoxkmovFdqkCm1Ks7Pys0x59ksSZ
DZoEATEt/sQsEB7AnRAkH76lWyG0zMtvxdkFH8Cepaaq4bcdqSgmE12DRwViR95a
ZNA8vhonr5UdTbtKkIGD67IrkGH81C8trwF+8LnYKdtf1bMdAgMBAAGggYEwfwYJ
KoZIhvcNAQkOMXIwcDA/BgNVHREEODA2hjRodHRwOi8vd3d3Lm9wZW5saW5rc3cu
Y29tL2RhdGFzcGFjZS9wZXJzb24vZGVtbyN0aGlzMC0GCWCGSAGG+EIBDQQgFh5W
aXJ0dW9zbyBHZW5lcmF0ZWQgQ2VydGlmaWNhdGUwDQYJKoZIhvcNAQEEBQADgYEA
CQ+UeQGWLnHn5X9tKumvgP2p4LgxHsNq0uFZffVBRUAV6w8WRwor5ZKOeNhHrldp
ZvxHc9ESFBTA772W01VmQNfpjkFcpH5yd81dFkSsF3lKemQIHnlz4bORU4av2TMM
T9OIp5FNOec13jXqVesymd+Kl+Vb9sRBaC1Xb1OSryU=
-----END CERTIFICATE REQUEST-----


1 Rows. -- 390 msec.
]]></programlisting>
    </example>
  </refsect1>
  <refsect1 id="seealso_xenc_x509_csr_generate"><title>See Also</title>
    <para><link linkend="fn_get_certificate_info">get_certificate_info()</link></para>
    <para><link linkend="fn_xenc_x509_from_csr">xenc_x509_from_csr()</link></para>
    <para><link linkend="fn_xenc_x509_generate">xenc_x509_generate()</link></para>    
 </refsect1>
</refentry>

