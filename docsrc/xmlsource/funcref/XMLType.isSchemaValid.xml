<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_XMLType.isSchemaValid">
  <refmeta>
    <refentrytitle>XMLType.isSchemaValid</refentrytitle>
    <refmiscinfo>xml</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>XMLType.isSchemaValid</refname>
    <refpurpose>Validates the given XMLType instance against an arbitrary XML schema, returns 1 if successful, 0 if errors are detected.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_XMLType.isSchemaValid">
      <funcprototype id="fproto_XMLType.isSchemaValid">
        <funcdef><function>XMLType.isSchemaValid</function></funcdef>
	<paramdef><optional>in <parameter>schema_url</parameter> varchar</optional></paramdef>
	<paramdef><optional>in <parameter>top_element_name</parameter> varchar</optional></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_XMLType.isSchemaValid">
    <title>Description</title>
    <para>The function validates the given XMLType instance against the XML 
	schema located at <parameter>schema_url</parameter>.  The name of the 
	current node of the XML entity should match <parameter>top_element_name</parameter> 
	if it is specified.</para>  
	<para>The <parameter>schema_url</parameter> is optional for schema based 
	instances: the default value is the URI of the associated schema of the 
	instance.  For non-schema based instances the <parameter>schema_url</parameter>  
	is required, an error is signalled otherwise.</para>
    <para>The function does not use or modify internal &quot;validated&quot; 
	flag that is e.g. used by <function>XMLType.schemaValidate()</function>.
	It is true even if the given <parameter>schema_url</parameter> is equal to the URI 
	of own schema of the instance.</para>
  </refsect1>
  <refsect1 id="params_XMLType.isSchemaValid">
    <title>Parameters</title>
    <refsect2><title>schema_url</title>
      <para>The URI of the schema to apply.</para>
    </refsect2>
    <refsect2><title>top_element_name</title>
      <para>The allowed name of top level element of the instance.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_XMLType.isSchemaValid"><title>Return Types</title>
    <para>The function returns 1 if the validation is passed, 0 if it is failed.</para>
  </refsect1>
<!--
  <refsect1 id="errors_XMLType.isSchemaValid">
    <title>Errors</title>

 In case of non-function-specific errors, i.e. only common
     parameter errors are signalled, comment out the table below 
     otherwise add the unique error values as individual errorcodes

    <para>This function can generate the following errors:</para>
    <errorcode></errorcode>
  </refsect1>
 -->
  <refsect1 id="examples_XMLType.isSchemaValid">
    <title>Examples</title>
    <example id="ex_XMLType.isSchemaValid"><title>Failed schema validation</title>
      <para>The example creates an XMLType instance that is a document with a single element node&quot;bad&quot;
and tries to validate it against XMLschema &quot;file://xmlschema/test0001/clean.xsd&quot; that does not match actual content of the document.
The call of <function>isSchemaValid()</function> returns zero indicating failed validation.
</para>
      <screen><![CDATA[
select XMLType('<bad />', 'file://xmlschema/test0001/clean.xsd').isSchemaValid()
callret
INTEGER
_______________________________________________________________________________

0

1 Rows. -- 00000 msec.
]]>
</screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_XMLType.isSchemaValid">
    <title>See Also</title>
    <para><link linkend="fn_XMLType.isSchemaValidated"><function>XMLType.isSchemaValidated()</function></link></para>
    <para><link linkend="fn_XMLType.setSchemaValidated"><function>XMLType.setSchemaValidated()</function></link></para>
    <para><link linkend="fn_XMLType.schemaValidate"><function>XMLType.schemaValidate()</function></link></para>
  </refsect1>
</refentry>
