<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_USER_KEY_LOAD">
  <refmeta>
    <refentrytitle>USER_KEY_LOAD</refentrytitle>
    <refmiscinfo>ws</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>USER_KEY_LOAD</refname>
    <refpurpose>Register and existing key.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_USER_KEY_LOAD">
      <funcprototype id="fproto_USER_KEY_LOAD">
        <funcdef><function>USER_KEY_LOAD</function></funcdef>
	<paramdef>in <parameter>key_name</parameter> varchar</paramdef>
	<paramdef>in <parameter>key_value</parameter> any</paramdef>
	<paramdef>in <parameter>key_type</parameter> varchar</paramdef>
	<paramdef>in <parameter>key_format</parameter> varchar</paramdef>
	<paramdef>in <parameter>key_passwd</parameter> varchar</paramdef>
	<paramdef><optional>in <parameter>key_pkey</parameter> any</optional></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_USER_KEY_LOAD">
    <title>Description</title>
    <para>This function is used to register and persist an existing 
    key in the Virtuoso server.  This is needs to be made once per 
    key/certificate, and does not need to be repeated after server restart, 
    unless the key is erased and has to be redefined.</para>
  </refsect1>
  <refsect1 id="params_USER_KEY_LOAD">
    <title>Parameters</title>
    <refsect2><title>key_name</title>
      <para>The key reference, as a 'Sample Key' or 'file:keys/srv.pem'</para>
    </refsect2>
    <refsect2><title>key_value</title>
      <para>When the key is an internal reference i.e. non 
      'file:', the content of a key.  The default value is NULL.</para>
    </refsect2>
    <refsect2><title>key_type</title>
      <para>The key algorithm, possible values are "3DES", "RSA", "DSA", 
      "X.509", "AES".</para>
    </refsect2>
    <refsect2><title>key_format</title>
      <para>The format of the key content storage, possible values are 
      "DER", "PEM", "PKCS12".</para>
    </refsect2>
    <refsect2><title>key_passwd</title>
      <para>The password for opening the key if required, this can be NULL 
      to indicate no password required.</para>
    </refsect2>
    <refsect2><title>key_pkey</title>
      <para>When an X.509 certificate is imported, this can be supplied to load 
      the corresponding private key also.  This is optional.  Note that when 
      the PKCS#12 format is used to import an X.509 certificate, the private 
      key is in the 'key_value', hence this parameter in such case must be 
      omitted.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_USER_KEY_LOAD"><title>Return Types</title>
    <para>None.</para>
  </refsect1>
  <!-- 
  <refsect1 id="errors_USER_KEY_LOAD">
    <title>Errors</title>
    <para>This function can generate the following errors:</para>
    <errorcode></errorcode>
  </refsect1>
  -->
  <refsect1 id="examples_USER_KEY_LOAD">
    <title>Example</title>
    <example id="ex_USER_KEY_LOAD"><title>Simple Use</title>
     <para>To load and persist an X.509 certificate contained in the 
     file wss.pfx in the server working directory one can use:</para>
      <screen><![CDATA[
USER_KEY_LOAD ('file:wss.pfx', NULL, 'X.509', 'PKCS12', 'virt');
]]></screen>
     <para>To load and persist a shared secret:</para>
      <screen><![CDATA[
USER_KEY_LOAD ('WSDK Sample Symmetric Key', 'EE/uaFF5N3ZNJWUTR8DYe+OEbwaKQnso', '3DES', 'DER', null);
]]></screen>
     <para>To load a DSA key contained in a file dsa.der:</para>
      <screen><![CDATA[
USER_KEY_LOAD ('file:dsa.der', NULL, 'DSA', 'DER', null);
]]></screen>
    </example>
  </refsect1>
  <!--
  <refsect1 id="seealso_USER_KEY_LOAD">
    <title>See Also</title>
    <para><link linkend="fn"><function></function></link></para>
  </refsect1>
  -->
</refentry>
