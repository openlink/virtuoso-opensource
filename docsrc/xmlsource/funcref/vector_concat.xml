<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- 
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_vector_concat">
  <refmeta>
    <refentrytitle>vector_concat</refentrytitle>
    <refmiscinfo>array</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>vector_concat</refname>
    <refpurpose>concatenate vectors</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_vector_concat"> 
      <funcprototype id="fproto_vector_concat">
        <funcdef>vector <function>vector_concat</function></funcdef>
        <paramdef><parameter>vec1</parameter> vector</paramdef>
	<paramdef><parameter>vec2</parameter> vector</paramdef>
        <paramdef><parameter>...</parameter> </paramdef>
        <paramdef><parameter>vec-n</parameter> vector</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_vector_concat">
    <title>Description</title>
      <para><function>vector_concat</function> takes a variable number of
      vectors (heterogeneous arrays) and constructs a new vector containing
      copies of each (top level) element in the arguments.</para>
  </refsect1>
  <refsect1 id="params_vector_concat"><title>Parameters</title>
    <refsect2><title><parameter>vec1..n</parameter></title>
      <para>
        <type>vector</type>.
      </para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_vector_concat"><title>Return Values</title>
    <para>A vector made of copies of elements contained in vec1..n.</para>
  </refsect1>
  <refsect1 id="examples_vector_concat"><title>Examples</title>
    <example id="ex_vector_concat"><title>Simple Use</title>
      <screen>
dbg_obj_print (vector_concat (vector (now(), 'black', 'crow'), 
	                      vector ('said', 'nevermore')));

dbg_obj_print (vector_concat (vector ('a','b'), 
                              vector (vector ('c', 'd'), 'e')));
</screen>
      <para>Would output something like this on the Virtuoso console:</para>
      <screen>({ts 2001-08-07 16:57:12.000000}  "black" "crow" "said" "nevermore" )
("a" "b" ("c" "d" ) "e" )
</screen>
    </example> 
  </refsect1>
    <refsect1 id="seealso_vector_concat"><title>See Also</title>
    <para>
      <link linkend="fn_aset"><function>aset()</function></link>
      <link linkend="fn_aref"><function>aref()</function></link>
      <link linkend="fn_vector"><function>vector()</function></link>
    </para>
  </refsect1>
</refentry>
