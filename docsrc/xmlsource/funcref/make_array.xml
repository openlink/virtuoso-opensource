<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_make_array">
  <refmeta>
    <refentrytitle>make_array</refentrytitle>
    <refmiscinfo>array</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>make_array</refname>
    <refpurpose>returns a new array</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_make_array">
      <funcprototype id="fproto_make_array">
        <funcdef>array <function>make_array</function></funcdef>
        <paramdef>in <parameter>length</parameter> integer</paramdef>
        <paramdef>in <parameter>content</parameter> varchar</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_make_array"><title>Description</title>
    <para>This returns an array of length elements with the content element
    type. The initial content of the array is undefined.</para>
  </refsect1>
  <refsect1 id="params_make_array"><title>Parameters</title>
    <refsect2>
      <title>length</title>
      <para>Number of elements to be allocated in the resultant array.</para>
    </refsect2>
    <refsect2>
      <title>content</title>
      <para>String that specifies the data type of the array to make.
      Valid strings are 'float', 'double', 'long' or 'any'.
      These correspond respectively to the C types long (32 bit signed),
      float (IEEE 32-bit), double (IEEE 64-bit) and untyped. The untyped array
      may hold a heterogeneous collection of any Virtuoso data types,
      including other arrays. The initial content of the array is undefined.
      </para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_make_array"><title>Return Values</title>
      <para>An array of specified length and data type</para>
  </refsect1>
  <refsect1 id="errors_make_array"><title>Errors</title>
    <para><link linkend="datatypeerror">Parameter data type checking errors</link></para>
    <table><title>Errors signalled by make_array()</title>
      <tgroup cols="3">
	<tbody>
	  <row>
	    <entry>sqlstate</entry><entry>error code</entry><entry>error text</entry>
	  </row>
	  <row>
	    <entry><errorcode>22003</errorcode></entry>
	    <entry><errorcode>SR021</errorcode></entry>
	    <entry><errorname>make_array called with an invalid count &lt;num&gt;</errorname></entry>
	  </row>
	  <row>
	    <entry><errorcode>22023</errorcode></entry>
	    <entry><errorcode>SR022</errorcode></entry>
	    <entry><errorname>Type for make_array must be float, double, long or any</errorname></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </refsect1>
</refentry>


