<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<refentry id="fn_user_key_store">
  <refmeta>
    <refentrytitle>USER_KEY_STORE</refentrytitle>
    <refmiscinfo>admin</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>USER_KEY_STORE</refname>
    <refpurpose>Saves a key in the database and in case the database is restarted, the key will be loaded again.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_user_key_store">
      <funcprototype id="fproto_user_key_store">
        <funcdef><function>USER_KEY_STORE</function></funcdef>
	        <paramdef>in <parameter>username</parameter> varchar</paramdef>
	        <paramdef>in <parameter>key_name</parameter> varchar</paramdef>
	        <paramdef>in <parameter>key_type</parameter> varchar</paramdef>
	        <paramdef>in <parameter>key_format</parameter> varchar</paramdef>
	        <paramdef>in <parameter>key_pwd</parameter> varchar</paramdef>
	        <paramdef><optional>in <parameter>key_value</parameter> varchar := NULL</optional></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_user_key_store">
    <title>Description</title>
    <para>This function saves a key in the database and in case the database is restarted, the key will be loaded again.</para>
  </refsect1>
  <refsect1 id="params_user_key_store">
    <title>Parameters</title>
    <refsect2><title>username</title>
      <para>User name</para>
    </refsect2>
    <refsect2><title>key_name</title>
      <para>Key name</para>
    </refsect2>
    <refsect2><title>key_type</title>
      <para>Key type</para>
    </refsect2>
    <refsect2><title>key_format</title>
      <para>Key format</para>
    </refsect2>
    <refsect2><title>key_pwd</title>
      <para>Key password</para>
    </refsect2>
    <refsect2><title>key_value</title>
      <para>Key value</para>
    </refsect2>
  </refsect1>

  <refsect1 id="examples_user_key_store">
    <title>Examples</title>
    <example id="ex_user_key_store"><title>Persisting a key &amp; certificate</title>
      <para>The example below persists a key named 'id_rsa' and certificate created for it into user's key space.
      Thus after server restart the key will be available again.</para>
<programlisting><![CDATA[
SQL> USER_KEY_STORE (user, 'id_rsa', 'X.509', 2, '', xenc_pkcs12_export ('id_rsa', 'CA Certificate', ''));
]]></programlisting>
    </example>
  </refsect1>

  <refsect1 id="seealso_user_key_store">
    <title>See Also</title>
    <para><link linkend="fn_xenc_pkcs12_export"><function>xenc_pkcs12_export()</function></link></para>
  </refsect1>
</refentry>
