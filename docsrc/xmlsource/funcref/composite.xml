<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_composite">
  <refmeta>
    <refentrytitle>composite</refentrytitle>
    <refmiscinfo>ft</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>composite</refname>
    <refpurpose>create a composite object</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_composite">
      <funcprototype id="fproto_composite">
        <funcdef>composite obj <function>composite</function></funcdef>
        <paramdef>in <parameter>x</parameter> any</paramdef>
        <paramdef> <parameter>...</parameter> </paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_composite">
    <title>Description</title>
      <para>Create a composite object</para>
      <para>Returns a composite object containing the serialization of each argument.
      The total serialized length of the arguments may not exceed 255.</para>
  </refsect1>
  <refsect1 id="params_composite"><title>Parameters</title>
    <refsect2><title><parameter>x</parameter> ...</title>
      <para>The function takes a variable number of parameters of any type.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_composite"><title>Return Values</title>
    <para>A <type>composite</type> object</para>
  </refsect1>
  <refsect1 id="errors_composite"><title>Errors</title>
    <table><title>Errors signalled by composite</title>
      <tgroup cols="4">
       <thead><row><entry>SQLState</entry><entry>Error Code</entry><entry>Error Text</entry><entry>Description</entry></row></thead>
	<tbody>
	  <row>
	    <entry><errorcode>22026</errorcode></entry>
	    <entry><errorcode>FT001</errorcode></entry>
	    <entry><errorname>Length limit of composite exceeded.</errorname></entry>
	    <entry>The sum of length of the components exceeds 255.</entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </refsect1>
  <refsect1 id="examples_composite"><title>Examples</title>
    <example id="ex_composite"><title>Simple example</title>
      <para>Get second component of a composite of two integers. See reference page for <link linkend="fn_composite_ref">composite_ref</link>.</para>
      <screen>SQL> select composite_ref (composite (10,20), 1);
callret
VARCHAR
_______________________________________________________________________________

20

1 Rows. -- 6 msec.
</screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_composite"><title>See Also</title>
    <para><function><link linkend="fn_composite_ref">composite_ref</link></function>. The chapter <link linkend="compositedatatype">Composite Data Type</link>
    for a definition of properties of composite objects. </para>
  </refsect1>
</refentry>

