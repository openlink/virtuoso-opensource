<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_sys_stat_histogram">
  <refmeta>
    <refentrytitle>sys_stat_histogram</refentrytitle>
    <refmiscinfo>sql</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>sys_stat_histogram</refname>
    <refpurpose>Collects a column value histogram for use in SQL optimization </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_sys_stat_histogram">
      <funcprototype id="fproto_sys_stat_histogram">
        <funcdef><function>sys_stat_histogram</function></funcdef>
        <paramdef>in <parameter>table_name</parameter> varchar</paramdef>
        <paramdef>in <parameter>column_name</parameter> varchar</paramdef>
        <paramdef>in <parameter>n_buckets</parameter> integer</paramdef>
        <paramdef><optional>in <parameter>prec</parameter> integer</optional></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc"><title>Description</title>
<para>
This function collects (or updates) values distribution data for a given column.
</para>
	<para>
It splits the sorted column values in n_buckets intervals and collects the last value of each interval.
The values are then inserted into the SYS_COL_HIST table.
</para>
	<para>
If the table in question has not been analyzed, then it calls SYS_STAT_ANALYZE for the table.
</para>
	<para>
The histograms are then used by the Optimized SQL compiler. All the cached compilations are
discarded, because some of them may compile differently in the light of the new data.
</para>
  </refsect1>
  <refsect1 id="params"><title>Parameters</title>
    <refsect2><title>table_name</title>
      <para>The full name of the table exactly as in the KEY_TABLE column of SYS_KEYS.</para></refsect2>
    <refsect2><title>column_name</title>
      <para>The full name of the column exactly as in the COLUMN column in SYS_COLS.</para></refsect2>
    <refsect2><title>n_buckets</title>
      <para>How much intervals to form. If more intervals are available, the estimation
         of column predicates costs is more precise.
      </para></refsect2>
    <refsect2><title>prec</title>
      <para>The density of the rows examined. Defaults to 1 (all the rows)</para></refsect2>
 </refsect1>
 <!--
  <refsect1 id="errors"><title>Errors</title>
    <table><title>Errors signalled by sys_stat_histogram</title>
      <tgroup cols="4">
      <thead>
	  <row><entry>SQL State</entry><entry>Error Code</entry><entry>Error Text</entry><entry>Description</entry></row>
     </thead>
	<tbody>
	  <row>
	    <entry><errorcode></errorcode></entry>
	    <entry><errorcode></errorcode></entry>
	    <entry><errorname></errorname></entry>
	    <entry></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </refsect1>
    -->
  <refsect1 id="seealso"><title>See Also</title>
    <para><link linkend="fn_SYS_DB_STAT"><function>SYS_DB_STAT()</function></link></para>
    <para><link linkend="fn_sys_stat_analyze">sys_stat_analyze</link></para>
  </refsect1>
</refentry>

