<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_java_load_class">
  <refmeta>
    <refentrytitle>java_load_class</refentrytitle>
    <refmiscinfo>jvmpl</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>java_load_class</refname>
    <refpurpose>Declares a Java class to a Java VM</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_java_load_class">
      <funcprototype id="fprot_java_load_class">
        <funcdef><function>java_load_class</function></funcdef>
        <paramdef>in <parameter>java_class_name</parameter> varchar</paramdef>
        <paramdef>in <parameter>java_class_bytecode</parameter> varchar</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_java_load_class">
    <title>Description</title>
    <para>Defines a java class into the running Java VM.  This is useful for 
    loading .class/.jar/.zip files from a BLOB column or from the Virtuoso 
    WebDAV repository.</para>
  </refsect1>
  <refsect1 id="params_java_load_class">
    <title>Parameters</title>
    <refsect2><title>java_class_name</title>
      <para>the name under which the class is to be defined</para>
    </refsect2>
    <refsect2><title>java_class_bytecode</title>
      <para>the contents of the .class file.</para>
    </refsect2>
  </refsect1>
  <!--
  <refsect1 id="ret_java_load_class"><title>Return Types</title>
    <para></para>
  </refsect1>
  -->
  <refsect1 id="examples_java_load_class">
    <title>Examples</title>
    <example id="ex_java_load_class"><title>Loading a Java Class</title>
      <para>Some sample Java code:</para>
      <programlisting><![CDATA[
java_server.java:

  public class java_server {
    public static int property;
  }
]]></programlisting>

      <para>Compiling it makes a java_server.class.  Loading it in Virtuoso 
      is as follows:</para>

<programlisting><![CDATA[
  java_load_class ('java_server', file_to_string ('java_server.class'));
]]></programlisting>
    </example>
  </refsect1>
  <refsect1 id="seealso_java_load_class">
    <title>See Also</title>
    <para><link linkend="fn_java_call_method"><function>java_call_method()</function></link></para>
    <para><link linkend="fn_java_set_property"><function>java_set_property()</function></link></para>
    <para><link linkend="fn_java_get_property"><function>java_get_property()</function></link></para>
    <para><link linkend="fn_java_vm_attach"><function>java_vm_attach()</function></link></para>
    <para><link linkend="fn_java_new_object"><function>java_new_object()</function></link></para>
    <para><link linkend="fn_java_vm_detach"><function>java_vm_detach()</function></link></para>
  </refsect1>
</refentry>
