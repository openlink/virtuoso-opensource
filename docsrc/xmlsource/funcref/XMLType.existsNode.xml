<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_XMLType.existsNode">
  <refmeta>
    <refentrytitle>XMLType.existsNode</refentrytitle>
    <refmiscinfo>xml</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>XMLType.existsNode</refname>
    <refpurpose>Tests node existence having evaluated given XPATH expression.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_XMLType.existsNode">
      <funcprototype id="fproto_XMLType.existsNode">
        <funcdef><function>XMLType.existsNode</function></funcdef>
	<paramdef>in <parameter>xpath_expn</parameter> varchar</paramdef>
	<paramdef><optional>in <parameter>namespace_map</parameter> varchar</optional></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_XMLType.existsNode">
    <title>Description</title>
    <para>The member function calculates the given XPATH expression <parameter>xpath_expn</parameter> using
the XML entity of the instance as a context node. If a <parameter>namespace_map</parameter> parameter
is given then the function adds namespace declarations from this parameter into the beginning of
<parameter>xpath_expn</parameter> before the evaluation.
The function returns 1 if the first result of XPATH evaluation is a node or 0 if there are no results or if the first result is not a node.
</para>
  </refsect1>
  <refsect1 id="params_XMLType.existsNode">
    <title>Parameters</title>
    <refsect2><title>xpath_expn</title>
      <para>A text of XPATH expression to evaluate.</para>
    </refsect2>
    <refsect2><title>namespace_map</title>
      <para>A string that is a list of namespace prefix declarations delimited by whitespace characters.
If the <parameter>xpath_expn</parameter> expression also contains a list of declarations then these two
lists are concatenated.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_XMLType.existsNode"><title>Return Types</title>
    <para>The function returns integer 1 or 0</para>
  </refsect1>
  <refsect1 id="examples_XMLType.existsNode">
    <title>Examples</title>
    <example id="ex_XMLType.existsNode"><title>A table with an XMLType column</title>
      <para>This populates a table with XML data and then reports which rows contain 'empno' element inside 'emp'.</para>
      <screen><![CDATA[
create table TEST_XMLS  (I integer primary key, XMLVAL XMLType);
insert into TEST_XMLS  values (1, XMLType('<emp><empno>221</empno><ename>John</ename></emp>'));
insert into TEST_XMLS  values (2, XMLType('<po><pono>331</pono><poname>PO_1</poname></po>'));
insert into TEST_XMLS  values (3, XMLType('<oil-rig id="14a" water="0.413"/><oil-rig id="14b" water="0.402"/>'));
select e.I, e.XMLVAL.existsNode('/emp/empno')
  from TEST_XMLS  as e
I                 callret
INTEGER NOT NULL  INTEGER
_______________________________________________________________________________

1                 1
2                 0
3                 0

3 Rows. -- 00000 msec.
]]>
</screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_XMLType.existsNode">
    <title>See Also</title>
    <para><link linkend="fn_XMLType.extract"><function>XMLType.extract()</function></link></para>
  </refsect1>
</refentry>
