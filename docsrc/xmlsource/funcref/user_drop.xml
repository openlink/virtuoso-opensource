<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_USER_DROP">
  <refmeta>
    <refentrytitle>USER_DROP</refentrytitle>
    <refmiscinfo>admin</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>USER_DROP</refname>
    <refpurpose>This deletes a user ccount, optionally including schema objects, DAV resources and other possible resources  owned by the user.

</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_USER_DROP">
      <funcprototype id="fproto_USER_DROP">
        <funcdef><function>USER_DROP</function></funcdef>
	<paramdef>in <parameter>name</parameter> varchar</paramdef>
	<paramdef>in <parameter>cascade</parameter> integer</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_USER_DROP">
    <title>Description</title>
    <para>This is used to remove an existing user account from local security schema.</para>
  </refsect1>
  <refsect1 id="params_USER_DROP">
    <title>Parameters</title>
    <refsect2><title>name</title>
      <para>A string containing the name of the user account to be deleted.</para>
    </refsect2>
    <refsect2><title>cascade</title>
	<para>This  flag (0/1) specifies whether  to delete the stored procedures/functions, PL modules, 
tables and user defined types owned by  the user. It cannot drop  assembly definitions (created with
CREATE ASSEMBLY), because CREATE ASSEMBLY is a database wide operation (done by the DBA group) so the
assembly has no owner (since you can not drop DBA). The default value is zero. Sometimes it is not
possible to drop the resources, for example if a table owned by the user is referenced by foreign key
in a table that would not be dropped. The drop user will detect that and will print the appropriate
error message (giving up the operation).
	</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_USER_DROP"><title>Return Types</title>
    <para>None</para>
  </refsect1>
<!--
  <refsect1 id="errors_USER_DROP">
    <title>Errors</title>
    <para>This function can generate the following errors:</para>
    <errorcode></errorcode>
  </refsect1>
  <refsect1 id="examples_USER_DROP">
    <title>Examples</title>
    <example id="ex_USER_DROP"><title></title>
      <para></para>
      <screen><![CDATA[
]]>
</screen>
    </example>
  </refsect1>
-->
  <refsect1 id="seealso_USER_DROP">
    <title>See Also</title>
    <para><link linkend="vumuseroptions">User Options Section</link></para>
    <para><link linkend="fn_USER_CREATE"><function>USER_CREATE()</function></link></para>
    <para><link linkend="fn_USER_ROLE_CREATE"><function>USER_ROLE_CREATE()</function></link></para>
    <para><link linkend="fn_USER_ROLE_DROP"><function>USER_ROLE_DROP()</function></link></para>
    <para><link linkend="fn_USER_CHANGE_PASSWORD"><function>USER_CHANGE_PASSWORD()</function></link></para>
    <para><link linkend="fn_USER_SET_QUALIFIER"><function>USER_SET_QUALIFIER()</function></link></para>
    <para><link linkend="fn_USER_GRANT_ROLE"><function>USER_GRANT_ROLE()</function></link></para>
    <para><link linkend="fn_USER_REVOKE_ROLE"><function>USER_REVOKE_ROLE()</function></link></para>
    <para><link linkend="fn_USER_SET_OPTION"><function>USER_SET_OPTIONS()</function></link></para>
    <para><link linkend="fn_USER_GET_OPTION"><function>USER_GET_OPTIONS()</function></link></para>
    <para><link linkend="yacc"><function>DROP USER [CASCADE]()</function> statement</link></para>
  </refsect1>
</refentry>
