<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_xml_auto_dtd">
  <refmeta>
    <refentrytitle>xml_auto_dtd</refentrytitle>
    <refmiscinfo>xml</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>xml_auto_dtd</refname>
    <refpurpose>returns an XML DTD for the result of a SQL query with a FOR XML clause</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_xml_auto_dtd">
      <funcprototype id="fproto_xml_auto_dtd">
        <funcdef>varchar <function>xml_auto_dtd</function></funcdef>
        <paramdef>in <parameter>query</parameter> varchar</paramdef>
        <paramdef>in <parameter>root_element</parameter> varchar</paramdef>
      </funcprototype>
    </funcsynopsis>
 </refsynopsisdiv>
  <refsect1 id="desc_xml_auto_dtd"><title>Description</title>
<para>This function returns an XML DTD for the results of a SQL query with
a FOR XML clause.  The returned DTD will apply to the output generated
by xml_auto with the query in question after wrapping it into the specified root element.
</para>
  </refsect1>
  <refsect1 id="params_xml_auto_dtd"><title>Parameters</title>
    <refsect2><title>query</title>
      <para>valid SQL query</para></refsect2>
    <refsect2><title>root_element</title>
      <para>name of root element to wrap result into</para></refsect2>
  </refsect1>
  <refsect1 id="ret_xml_auto_dtd"><title>Return Types</title><para>varchar of the resultant DTD</para></refsect1>

  <refsect1 id="errors_xml_auto_dtd"><title>Errors</title>
	    <para>If the <parameter>query</parameter> argument is not a valid SQL statement, i.e. SQL compiler signals an error message, 
                   the function resignals the error.
            </para>
  </refsect1>

  <refsect1 id="examples_xml_auto_dtd"><title>Examples</title>
    <example id="ex_xml_auto_dtd"><title>Simple Use</title>
<programlisting>
SQL&gt; select xml_auto_dtd ('  select &quot;category&quot;.&quot;CategoryID&quot;, &quot;CategoryName&quot;,
    &quot;ProductName&quot;, &quot;ProductID&quot;
    from &quot;Demo&quot;..&quot;Categories&quot; &quot;category&quot;, &quot;Demo&quot;..&quot;Products&quot; as &quot;product&quot;
    where &quot;product&quot;.&quot;CategoryID&quot; = &quot;category&quot;.&quot;CategoryID&quot; for xml auto element', 'root');
callret
VARCHAR
_______________________________________________________________________________

&lt;!-- dtd for output of the following SQL statement:
  select &quot;category&quot;.&quot;CategoryID&quot;, &quot;CategoryName&quot;,
		&quot;ProductName&quot;, &quot;ProductID&quot;
	from &quot;Demo&quot;..&quot;Categories&quot; &quot;category&quot;,

		&quot;Demo&quot;..&quot;Products&quot; as &quot;product&quot;
	where &quot;product&quot;.&quot;CategoryID&quot; = &quot;category&quot;.&quot;CategoryID&quot;
	for xml auto element
--&gt;
&lt;!ELEMENT root (#PCDATA | category)* &gt;
&lt;!ELEMENT category (#PCDATA | CategoryID | CategoryName | product)* &gt;
&lt;!ELEMENT product (#PCDATA | ProductName | ProductID)* &gt;
&lt;!ATTLIST category	&gt;
&lt;!ATTLIST product	&gt;
&lt;!ELEMENT CategoryID (#PCDATA)&gt;
&lt;!ATTRLIST CategoryID	&gt;
&lt;!ELEMENT CategoryName (#PCDATA)&gt;
&lt;!ATTRLIST CategoryName	&gt;
&lt;!ELEMENT ProductName (#PCDATA)&gt;
&lt;!ATTRLIST ProductName	&gt;
&lt;!ELEMENT ProductID (#PCDATA)&gt;
&lt;!ATTRLIST ProductID	&gt;

1 Rows. -- 4 msec.
</programlisting>
    </example>
  </refsect1>
  <refsect1 id="seealso_xml_auto_dtd"><title>See Also</title>
    <para><link linkend="fn_xml_auto"><function>xml_auto()</function></link></para>
    <para><link linkend="fn_xml_auto_schema"><function>xml_auto_schema()</function></link></para>
  </refsect1>
</refentry>

