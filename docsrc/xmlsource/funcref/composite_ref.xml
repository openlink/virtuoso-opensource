<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_composite_ref">
  <refmeta>
    <refentrytitle>composite_ref</refentrytitle>
    <refmiscinfo>ft</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>composite_ref</refname>
    <refpurpose>get member of a composite object</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_composite_ref">
      <funcprototype id="fproto_composite_ref">
        <funcdef>integer <function>composite_ref</function></funcdef>
        <paramdef>in <parameter>c</parameter> any</paramdef>
        <paramdef>in <parameter>nth</parameter> integer</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_composite_ref">
    <title>Description</title>
      <para><function>composite_ref</function> returns the <parameter>nth</parameter>
      element of the composite. The index is 0 based.</para>
  </refsect1>
  <refsect1 id="params_composite_ref"><title>Parameters</title>
    <refsect2><title>nth</title>
      <para><type>integer</type></para></refsect2>
  </refsect1>
  <refsect1 id="rettypes_composite_ref"><title>Return types</title>
    <para>The type returned is the type of the composite member referred to.</para>
  </refsect1>
  <refsect1 id="err_composite_ref"><title>Errors</title>
    <table><title>Errors signalled by <function>composite_ref</function></title>
      <tgroup cols="2">
	<tbody>
	  <row>
	    <entry><errorcode>22023</errorcode></entry>
	    <entry><errorcode>FT002</errorcode></entry>
	    <entry><errorname>composite expected for composite ref</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>22003</errorcode></entry>
	    <entry><errorcode>FT003</errorcode></entry>
	    <entry><errorname>composite index out of range %d for length %d</errorname></entry>
	    <entry></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </refsect1>
  <refsect1 id="examples_composite_ref"><title>Examples</title>
    <example id="ex_composite_ref_1"><title>Simple example</title>
      <para>Get first member of a composite consisting of <type>VARCHAR</type> values.</para>
      <screen>SQL> select composite_ref (composite ('Miles','Herbie','Wayne','Ron','Tony'), 0);
callret
VARCHAR
_______________________________________________________________________________

Miles

1 Rows. -- 4 msec.
</screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_composite_ref"><title>See Also</title>
    <para>The <link linkend="compositedatatype">Composite Data Type</link>
    for a definition of the properties of composite objects.</para>
    <para>The function
    <link linkend="fn_composite"><function>composite</function></link>.</para>
  </refsect1>
</refentry>


