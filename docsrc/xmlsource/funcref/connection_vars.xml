<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_connection_vars">
  <refmeta>
    <refentrytitle>connection_vars</refentrytitle>
    <refmiscinfo>ws</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>connection_vars</refname>
    <refpurpose>Retrieve all connection variables</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_connection_vars">
      <funcprototype id="fproto_connection_vars">
        <funcdef>any <function>connection_vars</function></funcdef>
	<paramdef></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_connection_vars"><title>Description</title>
    <para>
This function returns all stored session variables in an array with
name/value pairs.
</para><para>
Connection variables do not persist across sessions, one
may maintain persistence of variables by storing them in a database table:
see the <link linkend="wssessman">Session Variables</link> Section.
</para>
  </refsect1>
  <refsect1 id="ret_connection_vars"><title>Return Types</title><para>Array of name-value pairs
of all connection variables.
</para></refsect1>
  <refsect1 id="examples_connection_vars"><title>Examples</title>
    <example id="ex_connection_vars"><title>Retrieving Connection Variables</title>
      <programlisting>
  &lt;?vsp
    declare ses_vars any;
    ses_vars := connection_vars ();
    update session set s_vars = serialize (ses_vars) where s_id = get_keyword ('sid', params);
  ?&gt;
</programlisting>
    </example>
  </refsect1>
  <refsect1 id="seealso_connection_vars"><title>See Also</title>
    <para><link linkend="fn_connection_get">connection_get</link></para>
    <para><link linkend="fn_connection_set">connection_set</link></para>
    <para><link linkend="fn_connection_vars_set">connection_vars_set</link></para>
  </refsect1>
</refentry>

