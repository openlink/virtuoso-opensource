<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_msec_time">
  <refmeta>
    <refentrytitle>msec_time</refentrytitle>
    <refmiscinfo>time</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>msec_time</refname>
    <refpurpose>Get number of milliseconds from system epoch</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_msec_time">
      <funcprototype id="fproto_msec_time">
        <funcdef><function>msec_time</function></funcdef>
	<void />
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_msec_time"><title>Description</title>
    <para><function>msec_time</function> returns the number of milliseconds since system epoch. It is useful for benchmarking purposes, timing operations, etc.</para>
  </refsect1>
  <refsect1 id="params_msec_time"><title>Parameters</title>
    <refsect2><title>No parameters</title>
      <para>The function does not take parameters.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_msec_time"><title>Return Values</title>
    <para>A 32-bit <type>integer</type> no. of milliseconds since system epoch.</para>
  </refsect1>
  <refsect1 id="examples_msec_time"><title>Examples</title>
    <example id="ex_msec_time_1"><title>Simple example</title>
      <para>Time a function</para>
      <screen>
create procedure
fib (in n integer)
{
  if (n &lt;= 2) return 1;
  return fib (n - 1) + fib (n - 2);
}
;

create procedure
time_fib (in n integer)
{
  declare t,i integer;
  declare msg varchar;

  result_names (msg);

  t := msec_time();
  i := fib (n);
  result (sprintf ('fib (%d) is %d, got it in %d milliseconds.',
	           n, i, msec_time() - t));
}
;

SQL&gt; time_fib(10);
msg
VARCHAR NOT NULL
_______________________________________________________________________________

fib (10) is 55, got it in 10 milliseconds.

1 Rows. -- 21 msec.

</screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_msec_time"><title>See Also</title>
    <para><link linkend="fn_now"><function>now</function></link></para>
  </refsect1>
</refentry>

