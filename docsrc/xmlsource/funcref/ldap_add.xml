<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_ldap_add">
  <refmeta>
    <refentrytitle>ldap_add</refentrytitle>
    <refmiscinfo>ldap</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>ldap_add</refname>
    <refpurpose>Adds a new entry to an LDAP directory.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_ldap_add">
      <funcprototype id="fproto_ldap_add">
        <funcdef>int <function>ldap_add</function></funcdef>
	<paramdef>in <parameter>server_url </parameter>varchar</paramdef>
	<paramdef>in <parameter>try_tls </parameter>integer</paramdef>
	<paramdef>in <parameter>data </parameter>varchar</paramdef>
	<paramdef>in <parameter>username </parameter>varchar</paramdef>
	<paramdef>in <parameter>password </parameter>varchar</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_ldap_add"><title>Description</title>
    <para>This function adds a new entry to the LDAP directory.</para></refsect1>
  <refsect1 id="params_ldap_add"><title>Parameters</title>
    <refsect2><title>server_url</title>
      <para>The server URL has three parts, &lt;protocol&gt;://&lt;host&gt;:&lt;port&gt;.
      Missing parameters will be defaulted to: <programlisting>&lt;ldap://localhost:389&gt;</programlisting>.</para>
    </refsect2>
    <refsect2><title>try_tls</title>
      <para><parameter>try_tls</parameter> is a flag that tells the client to perform a handshake
      with the LDAP server using a secure connection.  This is only applicable to the ldap:// protocol and not
      ldaps://.  If the secure connection attempt fails, the client will fall back to insecure connect.</para>
    </refsect2>
    <refsect2><title>data</title>
      <para><parameter>data</parameter> is an array with name/value pairs representing the data to be added.</para></refsect2>
    <refsect2><title>username</title>
      <para>username authorization credential</para></refsect2>
    <refsect2><title>password</title>
      <para>password authorization credential</para></refsect2>
  </refsect1>
  <refsect1 id="ret_ldap_add"><title>Return Types</title>
    <para>The error status code is returned. Zero for success.</para>
  </refsect1>

  <refsect1 id="errors_ldap_add"><title>Errors</title>
    <table><title>Errors signalled by <function>ldap_add</function></title>
      <tgroup cols="4">
       <thead><row><entry>SQLState</entry><entry>Error Code</entry><entry>Error Text</entry><entry>Description</entry></row></thead>
	<tbody>
	  <row>
	    <entry><errorcode>2E000</errorcode></entry>
	    <entry><errorcode>LD005</errorcode></entry>
	    <entry><errorname>Failed to initialize LDAP connection: &lt;reason&gt; (&lt;reason code&gt;)</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>2E000</errorcode></entry>
	    <entry><errorcode>LD006</errorcode></entry>
	    <entry><errorname>Failed to set LDAP version option: &lt;reason&gt; (&lt;reason code&gt;)</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>2E000</errorcode></entry>
	    <entry><errorcode>LD016</errorcode></entry>
	    <entry><errorname>Failed to start TLS: &lt;reason&gt; (&lt;reason code&gt;)</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>28000</errorcode></entry>
	    <entry><errorcode>LD007</errorcode></entry>
	    <entry><errorname>Failed to bind synchronous LDAP connection: &lt;reason&gt; (&lt;reason code&gt;)</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>2E000</errorcode></entry>
	    <entry><errorcode>LD004</errorcode></entry>
	    <entry><errorname>The DN must be supplied</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>2E000</errorcode></entry>
	    <entry><errorcode>LD004</errorcode></entry>
	    <entry><errorname>Failed to modify err=&lt;reason code (&lt;reason&gt;)</errorname></entry>
	    <entry></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </refsect1>
  <refsect1 id="examples_ldap_add"><title>Examples</title>
    <example id="ex_ldap_add">
<!-- <title>Using ldap_add</title>
-->
<programlisting>
create procedure
sam_ldap_add (in s1 varchar, in s2 varchar)
{
  declare res, vec any;
  declare _from_add integer;

  vec := vector ('dn', concat ('cn=', s1, ' ', s2, ',o=opl,c=BG'),
         'cn', vector (concat (s1, ' ', s2)),
         'mail', vector('mail@techno-link.com'),
         'sn', vector(s2), 'telephoneNumber', vector('032-947020', '032-633710', '048 850 760'),
         'objectClass', vector('inetorgperson' ));

  _from_add := ldap_add ('ldap://buba:389', 0, vec, NULL);

  return (_from_add);
};
</programlisting>
    </example>
  </refsect1>
  <refsect1 id="seealso_ldap_add"><title>See Also</title> <para><link
    linkend="fn_ldap_delete"><function>ldap_delete()</function></link>,
    <link
    linkend="fn_ldap_modify"><function>ldap_modify()</function></link>,
    <link
    linkend="fn_ldap_search"><function>ldap_search()</function></link></para>
  </refsect1>
</refentry>

