<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_udt_get">
  <refmeta>
    <refentrytitle>udt_get</refentrytitle>
    <refmiscinfo>type</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>udt_get</refname>
    <refpurpose>Retrieves a copy of the requested member from a user defined type instance</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_udt_get">
      <funcprototype id="fproto_udt_get">
        <funcdef>any <function>udt_get</function></funcdef>
	<paramdef>in <parameter>udt_inst</parameter> any</paramdef>
	<paramdef>in <parameter>member_name</parameter> varchar</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_udt_get">
    <title>Description</title>
    <para>This function returns a copy of the member named member_name, if any, 
    for type instance udt_inst.  It is the functional equivalent of member 
    observer.</para>
  </refsect1>
  <refsect1 id="params_udt_get">
    <title>Parameters</title>
    <refsect2><title>udt_inst</title>
      <para>a user defined type instance.</para>
    </refsect2>
    <refsect2><title>member_name</title>
      <para>the name of the requested member.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_udt_get"><title>Return Types</title>
    <para>This function returns a copy of the requested member, if any.</para>
  </refsect1>
  <!--
  <refsect1 id="errors_udt_get">
    <title>Errors</title>
    <para>This function can generate the following errors:</para>
    <errorcode></errorcode>
  </refsect1>
  -->
  <refsect1 id="examples_udt_get">
    <title>Examples</title>
    <example id="ex_udt_get"><title>Observing members</title>
      <para>This example simply fetches a member from a user defined type.</para>
      <screen><![CDATA[
....
declare inst SER_UDT;

inst := new SER_UDT ();
return udt_get (inst, 'A');
....
]]></screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_udt_get">
    <title>See Also</title>
    <para><link linkend="fn_udt_defines_field"><function>udt_defines_field()</function></link></para>
    <para><link linkend="fn_udt_implements_method"><function>udt_implements_method()</function></link></para>
    <para><link linkend="fn_udt_instance_of"><function>udt_instance_of()</function></link></para>
    <para><link linkend="fn_udt_set"><function>udt_set()</function></link></para>
  </refsect1>
</refentry>
