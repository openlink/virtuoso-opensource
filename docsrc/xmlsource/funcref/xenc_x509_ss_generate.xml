<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  
  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
  project.
  
  Copyright (C) 1998-2019 OpenLink Software
  
  This project is free software; you can redistribute it and/or modify it
  under the terms of the GNU General Public License as published by the
  Free Software Foundation; only version 2 of the License, dated June 1991.
  
  This program is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  General Public License for more details.
  
  You should have received a copy of the GNU General Public License along
  with this program; if not, write to the Free Software Foundation, Inc.,
  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA

  : template.sh,v 1.5 2006/04/18 21:59:13 ivan Exp $
-->
<refentry id="fn_xenc_x509_ss_generate">
  <refmeta>
    <refentrytitle>xenc_x509_ss_generate</refentrytitle>
    <refmiscinfo>hash</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>xenc_x509_ss_generate</refname>
    <refpurpose>Creates a self-signed X.509v3 certificate</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_xenc_x509_ss_generate">
      <funcprototype id="fproto_xenc_x509_ss_generate">
        <funcdef><function>xenc_x509_ss_generate</function></funcdef>
	<paramdef>in <parameter>key_name</parameter> varchar</paramdef>
	<paramdef>in <parameter>serial</parameter> integer</paramdef>
	<paramdef>in <parameter>validity</parameter> integer</paramdef>
	<paramdef>in <parameter>subject</parameter> vector</paramdef>
	<paramdef>in <parameter>extensions</parameter> vector</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_xenc_x509_ss_generate">
    <title>Description</title>
    <para>This function is used to create a self-signed X.509 certificate by given private key</para>
  </refsect1>
  <refsect1 id="params_xenc_x509_ss_generate">
    <title>Parameters</title>
    <refsect2><title>key_name</title>
      <para>The name of the key used to create and sign the certificate</para>
    </refsect2>
    <refsect2><title>serial</title>
      <para>The serial number</para>
    </refsect2>
    <refsect2><title>validity</title>
      <para>Certificate's validity in days</para>
    </refsect2>
    <refsect2><title>subject</title>
	<para>An array of name/value pairs representing the subject aka name enties </para>
    </refsect2>
    <refsect2><title>extensions</title>
	<para>An array of name/value pairs to add as X.509v3 extensions to certificate</para>
    </refsect2>
  </refsect1>
  <refsect1 id="examples_xenc_x509_ss_generate">
    <title>Examples</title>
    <example id="ex_xenc_x509_ss_generate"><title>Self-signed certificate generation</title>
      <para>The example below shows how could be created RSA private key, then self-signed certificate and finally to be stored in the user's key store.</para>
      <screen><![CDATA[
       ...	  
       xenc_key_RSA_create ('id_rsa', atoi (get_keyword ('num', params, '1024')));
       xenc_x509_ss_generate ('id_rsa', sequence_next ('ca_id_rsa'), 365, 
		vector ('C', get_keyword ('c', params), 
			'O',  get_keyword ('o', params), 
			'CN',  get_keyword ('name', params), 
			'emailAddress',  get_keyword ('email', params)), 
		vector ('authorityKeyIdentifier', 'keyid,issuer:always'));
       USER_KEY_STORE (user, 'id_rsa', 'X.509', 2, '', xenc_pkcs12_export ('id_rsa', 'CA Certificate', ''));
       ...
]]></screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_xenc_x509_ss_generate">
    <title>See Also</title>
    <para><link linkend="fn_user_key_store"><function>user_key_store()</function></link></para>
    <para><link linkend="fn_xenc_x509_generate"><function>xenc_x509_generate()</function></link></para>
    <para><link linkend="fn_xenc_key_RSA_create"><function>xenc_key_RSA_create()</function></link></para>
    <para><link linkend="fn_xenc_pkcs12_export"><function>xenc_pkcs12_export()</function></link></para>
  </refsect1>
</refentry>
