<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  
  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
  project.
  
  Copyright (C) 1998-2019 OpenLink Software
  
  This project is free software; you can redistribute it and/or modify it
  under the terms of the GNU General Public License as published by the
  Free Software Foundation; only version 2 of the License, dated June 1991.
  
  This program is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  General Public License for more details.
  
  You should have received a copy of the GNU General Public License along
  with this program; if not, write to the Free Software Foundation, Inc.,
  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA

  : template.sh,v 1.4 2006/04/17 22:58:08 ivan Exp $
-->
<refentry id="fn_dict_duplicate">
  <refmeta>
    <refentrytitle>dict_duplicate</refentrytitle>
    <refmiscinfo>dict</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>dict_duplicate</refname>
    <refpurpose>Creates a copy of the given dictionary.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_dict_duplicate">
      <funcprototype id="fproto_dict_duplicate">
        <funcdef>dictionary <function>dict_duplicate</function></funcdef>
	<paramdef>in <parameter>dict</parameter> dictionary</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_dict_duplicate">
    <title>Description</title>
    <para>The function creates a full copy of the given dictionary.</para>
<para>Dictionary objects are always passed by reference, even if dictionary is passed as an 'in' argument of a function.
If value of a variable is a dictionary and it is assigned to other variable then both variables refer to the same internal hash table.
This function returns a really independent dictionary object.</para>
<para>This function duplicates the given dictionary but does not duplicate dictionaries that may be stored in key-value pairs.</para>
  </refsect1>
  <refsect1 id="params_dict_duplicate">
    <title>Parameters</title>
    <refsect2><title>dcit</title>
      <para>The dictionary to be duplicated.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_dict_duplicate"><title>Return Types</title>
    <para>The function returns a new dictionary object.</para>
  </refsect1>
<!--  <refsect1 id="examples_dict_duplicate">
    <title>Examples</title>
    <example id="ex_dict_duplicate"><title></title>
      <para></para>
      <screen><![CDATA[
]]>
</screen>
    </example>
  </refsect1> -->
  <refsect1 id="seealso_dict_duplicate">
    <title>See Also</title>
    <para><link linkend="fn_dict_new"><function>dict_new()</function></link></para>
    <para><link linkend="fn_dict_zap"><function>dict_zap()</function></link></para>
    <para><link linkend="fn_dict_put"><function>dict_put()</function></link></para>
    <para><link linkend="fn_dict_get"><function>dict_get()</function></link></para>
    <para><link linkend="fn_dict_remove"><function>dict_remove()</function></link></para>
    <para><link linkend="fn_dict_inc_or_put"><function>dict_inc_or_put()</function></link></para>
    <para><link linkend="fn_dict_dec_or_remove"><function>dict_dec_or_remove()</function></link></para>
    <para><link linkend="fn_dict_size"><function>dict_size()</function></link></para>
    <para><link linkend="fn_dict_to_vector"><function>dict_to_vector()</function></link></para>
    <para><link linkend="fn_dict_list_keys"><function>dict_list_keys()</function></link></para>
    <para><link linkend="fn_dict_destructive_list_rnd_keys"><function>dict_destructive_list_rnd_keys()</function></link></para>
    <para><link linkend="fn_dict_iter_rewind"><function>dict_iter_rewind()</function></link></para>
    <para><link linkend="fn_dict_iter_next"><function>dict_iter_next()</function></link></para>
  </refsect1>
</refentry>
