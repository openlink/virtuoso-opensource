<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_gz_compress">
  <refmeta>
    <refentrytitle>gz_compress</refentrytitle>
    <refmiscinfo>compression</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>gz_compress</refname>
    <refpurpose>Compress data using gzip algorithm</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_gz_compress">
      <funcprototype id="fproto_gz_compress">
        <funcdef><function>gz_compress</function></funcdef>
        <paramdef>in <parameter>str</parameter> varchar</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_compress"><title>Description</title>
	<para>
The gz_compress returns its argument compressed with the gzip
algorithm. The argument and return values are arbitrary strings,
possibly including any 8 bit characters.
	</para>
  </refsect1>
  <refsect1 id="params_gz_compress">
    <title>Parameters</title>
    <refsect2><title>str</title>
      <para>The string containing data to be compressed.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_gz_compress"><title>Return Types</title>
    <para>A string containing the compressed data.</para>
  </refsect1>
<!--  <refsect1 id="errors_gz_compress">
    <title>Errors</title>
    <table>
      <title>Errors signalled by</title>
      <tgroup cols="4">
       <thead>
         <row>
           <entry>SQLState</entry>
           <entry>Error Code</entry>
           <entry>Error Text</entry>
           <entry>Description</entry></row></thead>
	<tbody>
	  <row>
	    <entry><errorcode></errorcode></entry>
	    <entry><errorcode></errorcode></entry>
	    <entry><errorname></errorname></entry>
	    <entry></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </refsect1> -->
  <refsect1 id="examples_gz_compress">
    <title>Examples</title>
    <example id="ex_gz_compress_1"><title>GZIP test 2</title>
      <para>Just see how it compresses.</para>
      <screen>create procedure
gz_test_2 (in str varchar)
{
  declare res any;
  declare _out varchar;
  declare _len integer;

  result_names (_out, _len);

  res := string_output ();
  result (str, length (str));
  str := gz_compress (str);
  result ('binary', length (str));
  gz_uncompress (str, res);
  result (res, length (res));
}


SQL> gz_test_2 ('f00f f00f m0053 2 w3r h4x0r7 ch002 00000000000000000000000');
_out                      _len
VARCHAR                   INTEGER
_______________________________________________________________________________

f00f f00f m0053 5 w3r h4x0r7 ch002 00000000000000000000000  58
binary                    43
f00f f00f m0053 5 w3r h4x0r7 ch002 00000000000000000000000  58

3 Rows. -- 10 msec.
SQL>

</screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_gz_compress">
    <title>See Also</title>
    <para><link linkend="fn_gz_uncompress"><function>gz_uncompress</function></link>,
    <link linkend="fn_string_output_gz_compress"><function>string_output_gz_compress</function></link>,
    <link linkend="fn_string_output"><function>string_output</function></link>.</para>
  </refsect1>
</refentry>


