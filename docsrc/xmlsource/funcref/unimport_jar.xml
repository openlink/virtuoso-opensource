<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_unimport_jar">
  <refmeta>
    <refentrytitle>unimport_jar</refentrytitle>
    <refmiscinfo>type</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>unimport_jar</refname>
    <refpurpose>Drops SQL wrapper types of selected Java classes</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_unimport_jar">
      <funcprototype id="fproto_unimport_jar">
        <funcdef>void <function>unimport_jar</function></funcdef>
	<paramdef>in <parameter>files</parameter> any</paramdef>
	<paramdef>in <parameter>classes</parameter> any</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_unimport_jar">
    <title>Description</title>
    <para>This function calls the <function>jvm_ref_import()</function> function 
    to produce the XML, then transforms it to a set of DROP TYPE statements 
    and executes them. </para>
  </refsect1>
  <refsect1 id="params_unimport_jar">
    <title>Parameters</title>
    <refsect2><title>files</title>
      <para>Null, string or vector of strings.  This can contain one or many 
      Java .class files, .zip or .jar files to pick classes from.  Null means 
      only the classes specified in the classes argument regardless of their 
      physical location.</para>
    </refsect2>
    <refsect2><title>classes</title>
      <para>Wildcard string or a vector of strings specifying which classes to 
      describe in the resulting XML.</para>
    </refsect2>
  </refsect1>
  <!--
  <refsect1 id="ret_import_jar"><title>Return Types</title>
    <para></para>
  </refsect1>
  <refsect1 id="errors_import_jar">
    <title>Errors</title>
    <para>This function can generate the following errors:</para>
    <errorcode></errorcode>
  </refsect1>
  -->
  <refsect1 id="examples_unimport_jar">
    <title>Examples</title>
    <example id="ex_unimport_jar"><title>Simple Use</title>
      <screen><![CDATA[
SQL> import_jar (null, vector ('java.lang.System'));

Done. -- 126 msec.
SQL> select java_lang_System::getProperty('java.vm.name');
callret
NVARCHAR
_______________________________________________________________________________

Java HotSpot(TM) Client VM
SQL> unimport_jar (null, vector ('java.lang.System'));

Done. -- 54 msec.
SQL> select java_lang_System::getProperty('java.vm.name');

*** Error 37000: [Virtuoso Driver][Virtuoso Server]UD041: No user defined type DB.DBA.java_lang_System
at line 8 of Top-Level:
select java_lang_System::getProperty('java.vm.name')
]]>
</screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_unimport_jar">
    <title>See Also</title>
    <para><link linkend="fn_import_jar"><function>import_jar()</function></link></para>
    <para><link linkend="fn_jvm_ref_import"><function>jvm_ref_import()</function></link></para>
  </refsect1>
</refentry>
