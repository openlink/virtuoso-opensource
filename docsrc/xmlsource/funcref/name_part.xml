<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- 
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_name_part">
  <refmeta> 
    <refentrytitle>name_part</refentrytitle> 
    <refmiscinfo>sql</refmiscinfo>
  </refmeta> 
  <refnamediv> 
    <refname>name_part</refname> 
    <refpurpose>Returns portion of dotted name such as a fully qualified table name.</refpurpose>
  </refnamediv> 
  <refsynopsisdiv> 
    <funcsynopsis id="fsyn_name_part"> 
      <funcprototype id="fproto_name_part">
        <funcdef>varchar <function>name_part</function></funcdef> 
	<paramdef>in <parameter>string</parameter> varchar</paramdef>
	<paramdef>in <parameter>idx</parameter> integer</paramdef>
        <paramdef>in <parameter>dstring</parameter> varchar</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_name_part">
    <title>Description</title>
    <para>The <function>name_part()</function> can be used to dissecting parts of a three part names (string 
    where items are divided by dots ".") such as table names or columns names.  The table 
    name "DB"."DBA"."SYS_USERS" contains three parts which can be extracted individually 
    using this function providing the correct index from a 0 base: 0 would return "DB", 
    1 would return "DBA", 2 would return "SYS_USERS".</para>
  </refsect1>
  <refsect1 id="params_name_part">
    <title>Parameters</title>
    <refsect2><title>string</title>
      <para>The string to be disected.</para></refsect2>
    <refsect2><title>idx</title>
      <para>The part index starting from 0.</para></refsect2>
    <refsect2><title>dstring</title>
      <para>The default value if the found value is null.</para></refsect2>
  </refsect1>
  <refsect1 id="ret_name_part"><title>Return Types</title>
    <para>A string will be returned containing the text from 
    the specified index.</para>
  </refsect1>
  <refsect1 id="errors_name_part">
    <title>Errors</title>
    <table>
      <title>Errors signalled by</title>
      <tgroup cols="4">
       <thead>
         <row>
           <entry>SQLState</entry>
           <entry>Error Code</entry>
           <entry>Error Text</entry>
           <entry>Description</entry></row></thead>
	<tbody>
	  <row>
	    <entry><errorcode>22023</errorcode></entry>
	    <entry><errorcode>SR014</errorcode></entry>
	    <entry><errorname>Function name_part needs a string as argument 1, not an arg of type [type]</errorname></entry>
	    <entry></entry>
	  </row>
	  <row>
	    <entry><errorcode>22023</errorcode></entry>
	    <entry><errorcode>SR008</errorcode></entry>
	    <entry><errorname>Function name_part needs an integer as argument 2, not an arg of type [type]</errorname></entry>
	    <entry></entry>
	  </row>
	</tbody>
      </tgroup>
    </table>
  </refsect1>
  <refsect1 id="examples_name_part">
    <title>Examples</title>
    <example id="ex_name_part"><title>Using the name_part() function</title>
      <para>This simple example shows the 3 parts of a table name being retrieved 
      using the name_part() function from ISQL.</para>
      <screen><![CDATA[
SQL> select name_part('"DB"."DBA"."SYS_TABLES"', 0);
callret
VARCHAR
__________________________________________________________

"DB"

1 Rows. -- 20 msec.
SQL> select name_part('"DB"."DBA"."SYS_TABLES"', 1);
callret
VARCHAR
__________________________________________________________

"DBA"

1 Rows. -- 30 msec.
SQL> select name_part('"DB"."DBA"."SYS_TABLES"', 2);
callret
VARCHAR
__________________________________________________________

SYS_TABLES"

1 Rows. -- 20 msec.
]]></screen>
    </example>
  </refsect1>
  <!-- refsect1 id="seealso_name_part">
    <title>See Also</title>
    <para><link linkend="fn"><function></function></link></para>
  </refsect1 -->
</refentry>
