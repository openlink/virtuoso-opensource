<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<refentry id="fn_st_distance">
  <refmeta>
    <refentrytitle>st_distance</refentrytitle>
    <refmiscinfo>geo</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>st_distance</refname>
    <refpurpose>Returns the shortest distance between two points.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_st_distance">
      <funcprototype id="fproto_st_distance">
        <funcdef><function>st_distance</function></funcdef>
	<paramdef>in <parameter>g1</parameter> any</paramdef>
	<paramdef>in <parameter>g2</parameter> any</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_st_distance">
    <title>Description</title>
    <para>Returns the shortest distance between two points such that the first point is part of g1 and the
second of g2. The srid of g1 and g2 must be the same. If the srid is 4326, the haversine function
is used to compute a great circle distance in kilometers on Earth.
Otherwise the distance is calculated as on a flat Euclidean plane.</para>
  </refsect1>
  <refsect1 id="params_st_distance">
    <title>Parameters</title>
    <refsect2><title>g1</title>
      <para>Geometry.</para>
    </refsect2>
    <refsect2><title>g2</title>
      <para>Geometry.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_st_distance"><title>Return Types</title>
    <para>Returns double precision.</para>
  </refsect1>
  <refsect1 id="examples_st_distance">
    <title>Examples</title>
    <example id="ex_st_distance"><title>Simple Use</title>
<programlisting><![CDATA[
SQL>SELECT st_distance (st_point(0, 52),st_point(0, 70));
callret
VARCHAR
_____________________________
 2000.388915449352
No. of rows in result: 1
]]></programlisting>
    </example>
  </refsect1>
  <refsect1 id="seealso_st_distance">
    <title>See Also</title>
    <para><link linkend="fn_st_point"><function>st_point</function></link></para>
    <para><link linkend="fn_st_x"><function>st_x</function></link></para>
    <para><link linkend="fn_st_y"><function>st_y</function></link></para>
    <para><link linkend="fn_ST_SRID"><function>st_srid</function></link></para>
    <para><link linkend="fn_ST_SetSRID"><function>st_setsrid</function></link></para>
    <para><link linkend="fn_st_astext"><function>st_astext</function></link></para>
    <para><link linkend="fn_st_geomfromtext"><function>st_geomfromtext</function></link></para>
    <para><link linkend="fn_st_intersects"><function>st_intersects</function></link></para>
    <para><link linkend="fn_st_contains"><function>st_contains</function></link></para>
    <para><link linkend="fn_st_within"><function>st_within</function></link></para>
    <para><link linkend="fn_isgeometry"><function>isgeometry</function></link></para>
    <para><link linkend="fn_geo_insert"><function>geo_insert</function></link></para>
    <para><link linkend="fn_geo_delete"><function>geo_delete</function></link></para>
    <para><link linkend="fn_rdf_geo_add"><function>DB.DBA.RDF_GEO_ADD</function></link></para>
    <para><link linkend="fn_rdf_geo_fill"><function>DB.DBA.RDF_GEO_FILL</function></link></para>
  </refsect1>
</refentry>
