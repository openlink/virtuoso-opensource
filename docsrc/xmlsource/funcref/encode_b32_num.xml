<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_encode_b32_num">
  <refmeta>
    <refentrytitle>encode_b32_num</refentrytitle>
    <refmiscinfo>encoding</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>encode_b32_num</refname>
    <refname>decode_b32_num</refname>
    <refpurpose>encode/decode integers in RFC4648 (base32) alphabet</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
  <funcsynopsis id="fsyn_encode_b32_num">
    <funcprototype id="fproto_encode_b32_num">
      <funcdef><function>encode_b32_num</function></funcdef>
      <paramdef>in <parameter>i</parameter> integer</paramdef>
    </funcprototype>
  </funcsynopsis>
  <funcsynopsis id="fsyn_decode_base32">
    <funcprototype id="fproto_decode_base32">
      <funcdef><function>decode_base32</function></funcdef>
      <paramdef>in <parameter>s</parameter> varchar</paramdef>
    </funcprototype>
  </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="params_encode_b32_num">
    <title>Parameters</title>
    <refsect2><title><parameter>s</parameter></title>
      <para>A <type>varchar</type> value in RFC4648 alphabet to be converted to an integer.</para>
    </refsect2>
    <refsect2><title><parameter>i</parameter></title>
      <para>A <type>integer</type> value to be encoded.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_encode_b32_num"><title>Return Values</title>
    <para><function>encode_b32_num</function> returns a <type>varchar</type>
    encoding of its input value. <function>decode_b32_num</function> returns
    an <type>integer</type> value obtained by decoding its input.</para>
  </refsect1>
  <refsect1 id="desc_encode_b32_num"><title>Description</title>
      <para>These functions can be used to shorten IDs or other potentially large numbers for human input/output by converting them to base32 encoding using the RFC4648 base32 alphabet. This alphabet uses only upper case characters A-Z and numbers 2-7 (0 and 1 are eliminated so they won't be confused with the characters O and I, respectively.)</para>
  </refsect1>
  <refsect1 id="examples_encode_b32_num"><title>Examples</title>
    <example id="ex_encode_base32_1"><title>Simple Example</title>
      <para>Shorten an integer</para>
      <screen>SQL> select encode_b32_num (4711666);
callret
VARCHAR
_______________________________________________________________________________

EPZHS

1 Rows. -- 0 msec.
</screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_encode_base32"><title>See Also</title>
    <para>
      <link linkend="fn_serialize"><function>serialize</function></link>
      <link linkend="fn_encode_base64"><function>encode_base64</function></link>
    </para>
  </refsect1>
</refentry>


