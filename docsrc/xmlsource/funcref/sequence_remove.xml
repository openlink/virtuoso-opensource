<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="fn_sequence_remove">
  <refmeta>
    <refentrytitle>sequence_remove</refentrytitle>
    <refmiscinfo>sql</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>sequence_remove</refname>
    <refpurpose>Removes a sequence object</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_sequence_remove">
      <funcprototype id="fproto_sequence_remove">
        <funcdef><function>sequence_remove</function></funcdef>
	<paramdef>in <parameter>name</parameter> varchar</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_sequence_remove">
    <title>Description</title>
    <para>The function removes a sequence object created before by <function>sequence_set</function> or <function>sequence_next</function>.</para>
  </refsect1>
  <refsect1 id="params_sequence_remove">
    <title>Parameters</title>
    <refsect2><title>name</title>
      <para>The name of the sequence object to be deleted.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_sequence_remove"><title>Return Types</title>
    <para>The function returns integer one if the sequence object is removed, zero if there was no object with the specified name.</para>
  </refsect1>
  <refsect1 id="examples_sequence_remove">
    <title>Examples</title>
    <example id="ex_sequence_remove"><title>Creation and Removal of a Sequence Object</title>
      <para>This sequence of operations demonstrates how <function>sequence_remove</function> reverts the effect of <function>sequence_next</function>.</para>
      <screen><![CDATA[
> select sequence_next ('my_sequence');
0

> select sequence_next ('my_sequence');
1

> select sequence_next ('my_sequence');
2

> select sequence_remove ('my_sequence');
1

> select sequence_next ('my_sequence');
0
]]>
</screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_sequence_remove">
    <title>See Also</title>
    <para><link linkend="sequenceobjects">Sequence Objects</link></para>
    <para><link linkend="fn_sequence_get"><function>sequence_get</function></link></para>
    <para><link linkend="fn_sequence_get_all"><function>sequence_get_all</function></link></para>
    <para><link linkend="fn_sequence_next"><function>sequence_next</function></link></para>
    <para><link linkend="fn_registry_get"><function>registry_get</function></link></para>
    <para><link linkend="fn_registry_get_all"><function>registry_get_all</function></link></para>
    <para><link linkend="fn_registry_set"><function>registry_set</function></link></para>
    <para><link linkend="fn_registry_name_is_protected"><function>registry_name_is_protected</function></link></para>
    <para><link linkend="fn_registry_remove"><function>registry_remove</function></link></para>
  </refsect1>
</refentry>
