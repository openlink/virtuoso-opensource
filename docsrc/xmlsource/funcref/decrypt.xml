<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<refentry id="fn_decrypt">
  <refmeta>
    <refentrytitle>decrypt</refentrytitle>
    <refmiscinfo>hash</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>decrypt</refname>
    <refpurpose>Encrypt content in base64 encoding</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis id="fsyn_decrypt">
      <funcprototype id="fproto_decrypt">
        <funcdef>varchar <function>decrypt</function></funcdef>
     	    <paramdef>in <parameter>base64_string_session</parameter>  any</paramdef>
     	    <paramdef>in <parameter>key_name</parameter>  varchar</paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>
  <refsect1 id="desc_decrypt">
    <title>Description</title>
    <para>Returns decrypted content as a string_session. The algorithm to encrypt depends of the key, so if the
    key is AES the AES will be used, if it is 3DES it is 3DES etc. The AES key can be created with
    xenc_key_AES_rand_create (key_name, 256). Alternatively 3DES key can be generated with
    xenc_key_3DES_rand_create ().</para>
  </refsect1>
  <refsect1 id="params_decrypt">
    <title>Parameters</title>
    <refsect2><title>base64_string_session</title>
      <para>A base64 string content to be decrypted.</para>
    </refsect2>
    <refsect2><title>key_name</title>
	    <para>The key name keeping secret.</para>
    </refsect2>
  </refsect1>
  <refsect1 id="ret_decrypt"><title>Return Types</title>
      <para>On success the function will return decrypted content as a string_session.</para>
  </refsect1>
  <refsect1 id="examples_decrypt">
    <title>Examples</title>
    <example id="ex_decrypt"><title>Simple Use</title>
      <screen><![CDATA[
-- The 'ses' is a function which print the string into a string session:
xenc_key_AES_rand_create ('kaes', 256).
decrypt (encrypt (ses ('data to encrypt'), 'kaes'), 'kaes');
]]>
</screen>
    </example>
  </refsect1>
  <refsect1 id="seealso_decrypt">
    <title>See Also</title>
    <para><link linkend="fn_encrypt"><function>encrypt()</function></link></para>
    <para><link linkend="fn_xenc_encrypt"><function>xenc_encrypt()</function></link></para>
    <para><link linkend="fn_dsig_template_ext"><function>dsig_template_ext()</function></link></para>
    <para><link linkend="fn_xenc_key_inst_create"><function>xenc_key_inst_create()</function></link></para>
  </refsect1>
</refentry>
