<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="sparql_create_page"
        decor="yacutia_decor.vspx"
        style="yacutia_style.xsl"
        vm:owner="yacutia_sparql_page"
        doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
        fast-render="1"
        xmlns:v="http://www.openlinksw.com/vspx/"
        xmlns:vm="http://www.openlinksw.com/vspx/macro">
  <vm:pagetitle>Configuration</vm:pagetitle>
  <vm:pagewrapper>
    <vm:variables>
      <v:variable name="del" default="null" type="int" persist="temp" param-name="del" />
      <v:variable name="vhost" default="null" type="varchar" persist="temp" param-name="vhost" />
      <v:variable name="lhost" default="null" type="varchar" persist="temp" param-name="lhost" />
      <v:variable name="sponger_async_threshold" default="null" type="varchar" persist="temp" param-name="sponger_async_threshold" />
      <v:variable name="cartridge_acl_mode" type="varchar" default="''" persist="0" />
    </vm:variables>
    <vm:menu>
      <vm:menuitem value="Configuration"/>
    </vm:menu>
    <vm:header caption="Configuration"/>
    <vm:pagebody>
      <table border="0" width="100%" height="100%" cellpadding="0" cellspacing="0">
        <tr valign='top'>
          <td>
            <!-- tab -->
            <table cellpadding='10' cellspacing='0' border='0' width='100%'>
              <tr>
                <td>
                  <table cellpadding="0" cellspacing="0" border="0">
                    <colgroup>
                      <col/>
                      <col/>
                      <col/>
                      <col/>
                      <col/>
                    </colgroup>
                    <tr>
                      <td class="page_tab" align="center" nowrap="1">
                        <v:url name="url1" value="Extractor Cartridges" format="%s" url="rdf_filters.vspx" xhtml_class="uddi"/>
                      </td>
                      <td class="page_tab" align="center" nowrap="1">
                        <v:url name="url2" value="Meta Cartridges" format="%s" url="rdf_filters_pp.vspx" xhtml_class="uddi"/>
                      </td>
                      <td class="page_tab" align="center" nowrap="1">
                        <v:url name="url1" value="Stylesheets" format="%s" url="sparql_filters.vspx" xhtml_class="uddi"/>
                      </td>
		      <td class="page_tab" align="center" nowrap="1">
                        <v:url name="url1" value="Entity URIs" format="%s" url="entity_uri_patterns.vspx" xhtml_class="uddi"/>
                      </td>
                      <td class="page_tab" align="center" nowrap="1">
                        <v:url name="url3" value="Console" format="%s" url="rdf_console.vspx" xhtml_class="uddi"/>
                      </td>
                      <td class="page_tab_selected" align="center" nowrap="1">
                        Configuration
                      </td>
                      <td class="page_tab_empty" align="center" width="100%">
                        <table cellpadding="0" cellspacing="0">
                          <tr>
                            <td width="100%" >
                            </td>
                          </tr>
                        </table>
                      </td>
                    </tr>
                  </table>
                  <v:on-init>
                    <![CDATA[
                      if (self.del)
                      {
                        DB.DBA.VHOST_REMOVE ( lhost=>self.lhost, vhost=>self.vhost, lpath=>'/rdfdesc');
                        DB.DBA.VHOST_REMOVE ( lhost=>self.lhost, vhost=>self.vhost, lpath=>'/about/id');
                        DB.DBA.VHOST_REMOVE ( lhost=>self.lhost, vhost=>self.vhost, lpath=>'/about/id/entity');
                        DB.DBA.VHOST_REMOVE ( lhost=>self.lhost, vhost=>self.vhost, lpath=>'/about/data');
                        DB.DBA.VHOST_REMOVE ( lhost=>self.lhost, vhost=>self.vhost, lpath=>'/about/data/entity');
                      }

		      self.cartridge_acl_mode := registry_get ('__sponger_cartridge_acl_mode__');
		      if (self.cartridge_acl_mode = 0) -- Registry entry is not set
		      {
			if (__proc_exists ('DB.DBA.RM_CARTRIDGE_ACL_MODE_REG_KEY_INIT') is not null)
			{
			  DB.DBA.RM_CARTRIDGE_ACL_MODE_REG_KEY_INIT ();
			  self.cartridge_acl_mode := registry_get ('__sponger_cartridge_acl_mode__');
			}
			else
			  self.cartridge_acl_mode := 'none';
		      }
                    ]]>
                  </v:on-init>
                  <table class="tab_page">
                    <tr>
                      <td valign="top">
                      <!-- tab -->
	                      <fieldset>
                          <legend>Settings</legend>
                          <v:form name="frm1" type="simple" method="POST">
                            <label>
			      Asynchronous transformation mode - content length threshold (Minimum 8192 bytes): <!-- See {LDGEN|LDENR}.DBA.Extractor_isLongRunning() -->
			      <v:text name="sponger_async_mode_threshold" value="--self.sponger_async_threshold"  xhtml_size="20" xhtml_id="spngr_async_thrshld">
                                <v:before-data-bind>
                                  <![CDATA[
				    declare llrt integer;
				    llrt := atoi(cast(registry_get('__ldgen_long_running_threshold') as varchar));
				    if (llrt <= 8192)
				    {
				      -- Bad registry setting
				      registry_remove ('__ldgen_long_running_threshold');
				      llrt := 8192;
				    }
                                    self.sponger_async_threshold := sprintf('%d', llrt); 
                                    control.vc_data_bound := 1;
                                  ]]>
                                </v:before-data-bind>
                              </v:text>
                            </label>
			    <span style="padding-left: 10px"><a href="#" title=
				"Content being transformed through the /ext Sponger endpoint will be transformed asynchronously if the content length exceeds this threshold."
				><img src="images/icons/help_16.png" alt="Async transformation mode threshold - Help" border="0"/></a></span>
			    <br/>
                            <label>
                              <v:check-box name="rdf_use" value="1" xhtml_id="rdf_use">
                                <v:before-data-bind>
                                  <![CDATA[
                                    control.ufl_selected := case when registry_get ('__rdf_mappers_use_VAL') = '1' then 1 else 0 end;
                                    control.vc_data_bound := 1;
                                  ]]>
                                </v:before-data-bind>
                              </v:check-box> Sponger OAuth Binding - Use VAL OAuth
                            </label>
			    <span style="padding-left: 10px"><a href="#" title=
				"Check to use VAL&apos;s OAuth support for OAuth-using cartridges (recommended) or leave unchecked to use the pre-VAL OAuth support."
				><img src="images/icons/help_16.png" alt="Sponger OAuth Binding - Help" border="0"/></a></span>
			    <br />
			    <div>
			      <label>
			      Cartridge ACL mode: 
			      </label>

			      <v:radio-button name="rb_cartridge_acl_mode_abac" value="abac" group-name="choice_cartridge_acl_mode" 
				xhtml_id="choice_cartridge_acl_mode_abac"
				xhtml_disabled="--case when 0 = 0 then 'disabled' else '@@hidden@@' end"
			      >
				<v:before-data-bind>
				  <![CDATA[
				  control.ufl_selected := case when (self.cartridge_acl_mode = 'abac') then 1 else 0 end;
				  control.vc_data_bound := 1;
				  ]]>
				</v:before-data-bind>
			      </v:radio-button>
			      <label for="choice_cartridge_acl_mode_abac">ABAC</label>

			      <v:radio-button name="rb_cartridge_acl_mode_rbac" value="rbac" group-name="choice_cartridge_acl_mode" 
				xhtml_id="choice_cartridge_acl_mode_rbac"
			      >
				<v:before-data-bind>
				  <![CDATA[
				  control.ufl_selected := case when (self.cartridge_acl_mode = 'rbac') then 1 else 0 end;
				  control.vc_data_bound := 1;
				  ]]>
				</v:before-data-bind>
			      </v:radio-button>
			      <label for="choice_cartridge_acl_mode_rbac">RBAC</label>

			      <v:radio-button name="rb_cartridge_acl_mode_none" value="none" group-name="choice_cartridge_acl_mode" 
				xhtml_id="choice_cartridge_acl_mode_none"
			      >
				<v:before-data-bind>
				  <![CDATA[
				  control.ufl_selected := case when (self.cartridge_acl_mode = 'none') then 1 else 0 end;
				  control.vc_data_bound := 1;
				  ]]>
				</v:before-data-bind>
			      </v:radio-button>
			      <label for="choice_cartridge_acl_mode_none">None</label>
			      <span style="padding-left: 10px"><a href="#" title=
				"ABAC: Use VAL-based cartridge ACLs. RBAC: Use SQL-role-based cartridge ACLs. None: Disable cartridge ACLs. "
				><img src="images/icons/help_16.png" alt="Cartridge ACL Mode - Help" border="0"/></a></span>
			    </div>
                            <br /><br />
                            <v:button action="simple" name="save1" value="Save Settings">
                              <v:on-post>
                                <![CDATA[
                                  if (atoi (get_keyword ('rdf_use', control.vc_page.vc_event.ve_params)) = 1)
                                  {
                                    registry_set ('__rdf_mappers_use_VAL', '1');
                                  }
                                  else
                                  {
                                    registry_set ('__rdf_mappers_use_VAL', '0');
                                  }

				  declare llrt integer;
				  llrt := __max(8192, atoi(get_keyword('sponger_async_mode_threshold', control.vc_page.vc_event.ve_params)));
				  if (llrt <> 8192)
                                  {
                                    registry_set ('__ldgen_long_running_threshold', sprintf ('%d', llrt));
                                  }
                                  else
                                  {
				    -- Remove registry setting to fallback to default of 8192 bytes
                                    registry_remove ('__ldgen_long_running_threshold');
                                  }

				  declare cartridge_acl_mode varchar;
				  cartridge_acl_mode := get_keyword ('choice_cartridge_acl_mode', control.vc_page.vc_event.ve_params);
				  self.cartridge_acl_mode := cartridge_acl_mode;
                                  registry_set ('__sponger_cartridge_acl_mode__', cartridge_acl_mode);

                                  self.vc_data_bind (self.vc_page.vc_event);
                                ]]>
                              </v:on-post>
                            </v:button>
                          </v:form>
                        </fieldset>
                        <fieldset>
                          <legend>Endpoints</legend>
                          <table class="listing">
                            <thead>
                              <tr class="listing_header_row">
                                <th>Endpoint</th>
                                <th width="1%">Action</th>
                              </tr>
                            </thead>
                            <?vsp
                              for select distinct hp_host, hp_listen_host from http_path where hp_security = 'SSL' and HP_LPATH = '/about/id/entity' do
                              {
                            ?>
                            <tr>
                              <td>
                                <?V hp_host ?>(<?V hp_listen_host ?>)
                              </td>
                              <td nowrap="nowrap">
                                <v:url name="ur1" url="--sprintf ('rdf_conf.vspx?del=1&vhost=%U&lhost=%U', hp_host, hp_listen_host)" render-only="1" value="Delete Sponger Endpoints"/>
                              </td>
                            </tr>
                            <?vsp
                              }
                            ?>
                          </table>
                          <br />
                          <?vsp
                            if (not exists (select 1 from DB.DBA.HTTP_PATH where HP_HOST not like '%ini%' and HP_SECURITY = 'SSL'))
                            {
                              http ('No HTTPS listeners defined');
                            }
                            else
                            {
                          ?>
                          <v:form name="frm2" type="simple" method="POST">
                            Virtual Host:
                            <select name="l_domains" xhtml_id="l_domains">
                              <?vsp
                                for select distinct HP_HOST, HP_LISTEN_HOST from DB.DBA.HTTP_PATH where HP_HOST not like '%ini%' and HP_SECURITY = 'SSL' do
                                {
                                  http(sprintf ('<option value=\"%s=%s\">%s (%s)</option>', HP_HOST, HP_LISTEN_HOST, HP_HOST, HP_LISTEN_HOST));
                                }
                              ?>
                            </select>
                            <v:button action="simple" name="save2" value="Create Secure Endpoints">
                              <v:on-post>
                                <![CDATA[
                                  declare vhost, lhost, arr, domain any;
                                  domain := get_keyword('l_domains', self.vc_event.ve_params);
                                  domain := trim(domain, '/.\\ ');
                                  arr := split_and_decode(domain);
                                  vhost := arr[0];
                                  lhost := arr[1];
                                  RDF_CARTRIDGES_SECURE_VD (vhost, lhost);
                                ]]>
                              </v:on-post>
                            </v:button>
                          </v:form>
                          <?vsp
                            }
                          ?>
                        </fieldset>
                      <!-- end tab  -->
                      </td>
                    </tr>
                  </table>
                </td>
              </tr>
            </table>
          <!-- end tab -->
          </td>
        </tr>
      </table>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
