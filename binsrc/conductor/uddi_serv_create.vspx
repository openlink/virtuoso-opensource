<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<v:page name="uddi_create_page"
        decor="yacutia_decor.vspx"
        style="yacutia_style.xsl"
        vm:owner="yacutia_uddi_page"
        doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
        fast-render="1" xmlns:v="http://www.openlinksw.com/vspx/" xmlns:vm="http://www.openlinksw.com/vspx/macro">
 <v:on-init>
  <v:script>
   <![CDATA[
      self.params := e.ve_params;
      ]]>
  </v:script>
 </v:on-init>
 <!--
    if (get_keyword('business_key', params)  is not null)
     self.uuid_value := get_keyword('business_key', params);
    if (get_keyword('tmodel_key', params)  is not null)
     self.uuid_value := get_keyword('tmodel_key', params);

    if (get_keyword('contact_key', params)  is not null)
     self.contact_value := get_keyword('contact_key', params);

    if (get_keyword('page_back', params)  is not null)
     self.page_return:= get_keyword('page_back', params);

    if (get_keyword('owner', params)  is not null)
     self.data_owner:= get_keyword('owner', params);
  -->


 <vm:pagetitle>UDDI</vm:pagetitle>
 <vm:pagewrapper>
  <vm:variables>
   <v:variable name="params" default="null" type="any" persist="0"/>
   <v:variable name="uuid_value" default="null" type="varchar" persist="1"/>
   <v:variable name="contact_value" default="null" type="varchar" persist="1"/>
   <v:variable name="page_return" default="null" type="varchar" persist="1"/>
   <v:variable name="data_owner" default="null" type="varchar" persist="1"/>
   <v:variable name="binding_service_owner" default="null" type="varchar" persist="1"/>
  </vm:variables>


  <vm:menu>
   <vm:menuitem value="UDDI Service Services"/>
   <vm:menuitem name="roles_url" value="UDDI Service Browse"/>
   <vm:menuitem name="caps_url" value="UDDI Service Find"/> <!--  url="uddi_serv_find.vspx"-->
  </vm:menu>
  <vm:rawheader caption="Business Entity Create">
   <td>
    <?vsp
      if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='entity' )
        http('Specify the Business parameters');
      if (  get_keyword('page', control.vc_page.vc_event.ve_params) ='service')
        http('Specify the Service parameters');
      if (  get_keyword('page', control.vc_page.vc_event.ve_params) ='tmodel')
        http('Specify the Technical Model parameters');
      if (  get_keyword('page', control.vc_page.vc_event.ve_params) ='contact')
        http('Specify the Contacts parameters');
      if (  get_keyword('page', control.vc_page.vc_event.ve_params) ='email')
        http('Specify the E-Mail parameters');
      if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='phone' )
        http('Specify the Phone parameters');
      if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='address' )
        http('Specify the Address parameters');
      if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='description' ) {
        http('Specify the Description parameters');
        if ( get_keyword('owner', params) = 'businessEntity' )
          http(' for business');
        else if (get_keyword('owner', params) = 'businessService')
          http(' for service');
        else if (get_keyword('owner', params) = 'contacts')
          http(' for contact');
      }

      if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='discovery' )
        http('Specify the Discovery URL parameters');
      if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='identify' )
        http('Specify the Identification parameters');
      if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='category' ) {
        http('Specify the Category parameters');
        if ( get_keyword('owner', params) = 'businessEntity' )
          http(' for business');
        else if (get_keyword('owner', params) = 'businessService')
          http(' for service');
      }
     ?>
   </td>
  </vm:rawheader>
  <vm:pagebody>
   <v:template name="initTemplate0" type="simple" enabled="1">
    <v:before-data-bind>
     <v:script><![CDATA[

                   if (get_keyword('binding_service_key', self.vc_event.ve_params) is not null) {
                    self.binding_service_owner := get_keyword('binding_service_key', self.vc_event.ve_params);
                  }
                   ]]></v:script>
    </v:before-data-bind>
   </v:template>


   <v:template name="business_create_template" type="simple" enabled="--case  when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='entity' ) then 1 else 0 end">
    <table border="0"   width="100%" cellpadding='10' cellspacing='0' >
     <tr>
      <td>
       <img src="images/business.gif" width="16" height="16" border="0" />
      </td>
      <td class="SubInfo" width="100%">
       <?vsp
            if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='entity' )
                    {   declare  owner_name varchar;

                      if ( get_keyword('mode', self.vc_page.vc_event.ve_params) = 'edit' ) {
                        select BE_NAME  into owner_name from UDDI..BUSINESS_ENTITY where  BE_BUSINESS_KEY  = get_keyword('business_key', self.vc_page.vc_event.ve_params);
                        http(sprintf('Parameters of <b>%s</b>', owner_name));
                      } else {
                        http('Parameters of new business');
                      }
                    }
        ?>


      </td>
     </tr>
    </table>



    <vm:form name="business_entity_form" type="simple" method="POST" action="">
     <input type="hidden" name="business_key" value="<?= get_keyword('business_key', self.params) ?>"/>
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.params) ?>"/>
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  declare uuid_value, stmt   varchar;
                  if (get_keyword('ent_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('business_key', params) is not null) {
                      uuid_value := get_keyword('business_key', params);
                      update UDDI..BUSINESS_ENTITY set  BE_AUTHORIZED_NAME=get_keyword('a_name', params),
                        BE_OPERATOR =get_keyword('p_name', params),
                        BE_NAME =get_keyword('e_name', params),
                        BE_OWNER =get_keyword('entity_owner', params)
                        where  BE_BUSINESS_KEY =uuid_value;
                    } else if ( get_keyword('mode', params) ='create' ) {
                      uuid_value := uuid();
                    insert into   UDDI..BUSINESS_ENTITY (BE_BUSINESS_KEY, BE_AUTHORIZED_NAME, BE_OPERATOR, BE_NAME, BE_OWNER,  BE_CREATED,  BE_CHANGED  )
                    values (
                    uuid_value, get_keyword('a_name', params), get_keyword('p_name', params),  get_keyword('e_name', params), get_keyword('entity_owner', params),
                     now(), now() );
                     }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv.vspx?page=1&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                  return;
                }
                ]]></script>
      </v:on-post>
     </vm:events>
     <vm:row>
      <vm:raw>
       <td class="SubInfo">Entity Owner</td>
       <td>
        <v:select-list name="entity_owner" xhtml_style="width:200">
         <v:before-data-bind>
          <v:script><![CDATA[
              if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='entity' ) {
                  declare indx, user_ident integer;
                  declare user_name varchar;
                  user_ident := -1;
                  indx :=0;
                  (control as vspx_select_list).vsl_items:= vector();
                  (control as vspx_select_list).vsl_item_values:= vector();
                  (control as vspx_select_list).vsl_selected_inx :=0;
                  if (get_keyword('mode', params) ='edit' and get_keyword('business_key', params) is not null) {
                    select BE_OWNER into user_ident from UDDI..BUSINESS_ENTITY where BE_BUSINESS_KEY = get_keyword('business_key', params);
                  }
                  for select  U_ID, U_NAME, U_FULL_NAME  from SYS_USERS where U_IS_ROLE=0  and  U_DAV_ENABLE =1 do {
                      if (U_FULL_NAME  is not null )
                        user_name:= U_FULL_NAME;
                      else
                        user_name:= U_NAME;
                      if  (user_ident >=0 and user_ident = U_ID)
                       (control as vspx_select_list).vsl_selected_inx :=indx;
                    (control as vspx_select_list).vsl_items := vector_concat ((control as vspx_select_list).vsl_items, vector(user_name));
                    (control as vspx_select_list).vsl_item_values := vector_concat ((control as vspx_select_list).vsl_item_values, vector(sprintf('%d',U_ID)));
                    indx := indx +1;
                  }
              }
              ]]></v:script>
         </v:before-data-bind>
        </v:select-list>
       </td>
      </vm:raw>
      <vm:control name="a_name" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Authorized Name" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
            if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='entity' ) {
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit'  and get_keyword('business_key', params) is not null ) {
                    select BE_AUTHORIZED_NAME  into value  from UDDI..BUSINESS_ENTITY where BE_BUSINESS_KEY = get_keyword('business_key', params);
                    control.ufl_value := value;
                  }
            }
            ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>


     </vm:row>
     <vm:row>
      <vm:control name="p_name" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Provider" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
            if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='entity' ) {
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit' and get_keyword('business_key', params) is not null) {
                    select BE_OPERATOR into value  from UDDI..BUSINESS_ENTITY where BE_BUSINESS_KEY = get_keyword('business_key', params);
                    control.ufl_value := value;
                  }
             }
          ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>
      <vm:control name="e_name" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Entity Name" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
            if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='entity' ) {
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit' and get_keyword('business_key', params) is not null) {
                    select BE_NAME into value  from UDDI..BUSINESS_ENTITY where BE_BUSINESS_KEY = get_keyword('business_key', params);
                    control.ufl_value := value;
                  }
            }
            ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>


     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="ent_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="ent_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>
   <v:template name="service_create_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='service' ) then 1 else 0 end">
    <table border="0"   width="100%" cellpadding='10' cellspacing='0' >
     <tr>
      <td>
       <img src="images/service.gif" width="16" height="16"/>
      </td>
      <td class="SubInfo" width="100%">
       <?vsp
         if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='service' )
                    {   declare  owner_name, business_name  varchar;

                      if ( get_keyword('mode', self.vc_page.vc_event.ve_params) = 'edit' ) {
                        select BS_NAME, BE_NAME   into owner_name,   business_name  from UDDI..BUSINESS_SERVICE  join UDDI..BUSINESS_ENTITY on BS_BUSINESS_KEY = BE_BUSINESS_KEY  where  BS_SERVICE_KEY  = get_keyword('service_key', self.vc_page.vc_event.ve_params);
                        http(sprintf('Parameters of <b>%s</b> service for business <b>%s</b> ', owner_name, business_name));
                      } else {
                        select BE_NAME   into   business_name  from UDDI..BUSINESS_ENTITY where  BE_BUSINESS_KEY   = get_keyword('business_key', self.vc_page.vc_event.ve_params);
                        http(sprintf('Parameters of new service for business <b>%s</b>', business_name));
                      }
                    }
                  ?>


      </td>
     </tr>
    </table>



    <vm:form name="service_create_form" type="simple" method="POST" action="">
     <input type="hidden" name="business_key" value="<?= get_keyword('business_key', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.params) ?>"/>
     <input type="hidden" name="service_key" value="<?= get_keyword('service_key', self.params) ?>"/>
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                 declare uuid_value, stmt   varchar;
                  get_keyword('business_key', params),
                  get_keyword('service_name', params),
                  get_keyword('service_owner', params)
                  );
                  if (get_keyword('service_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('service_key', params) is not null) {
                      uuid_value := get_keyword('service_key', params);
                      update UDDI..BUSINESS_SERVICE set
                      BS_NAME = get_keyword('service_name', params),
                      BS_OWNER =get_keyword('service_owner', params)
                      where  BS_SERVICE_KEY = uuid_value;
                    } else  if ( get_keyword('mode', params) ='create' ) {
                      uuid_value := uuid();
                      insert into  UDDI..BUSINESS_SERVICE ( BS_BUSINESS_KEY, BS_SERVICE_KEY, BS_NAME,  BS_OWNER ,  BS_CREATED,  BS_CHANGED)
                      values (
                      get_keyword('business_key', params), uuid_value, get_keyword('service_name', params), get_keyword('service_owner', params),
                       now(), now() );
                    }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv_browse.vspx?page=2&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                ]]></script>
      </v:on-post>
     </vm:events>
     <vm:row>
      <vm:raw>
       <td class="SubInfo">Entity Owner</td>
       <td>
        <v:select-list name="service_owner" xhtml_style="width:200">
         <v:before-data-bind>
          <v:script><![CDATA[
            if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='service' )  {
                  declare indx, user_ident  integer;
                  declare user_name varchar;
                  indx :=0;
                  user_ident := -1;
                  (control as vspx_select_list).vsl_items:= vector();
                  (control as vspx_select_list).vsl_item_values:= vector();
                  (control as vspx_select_list).vsl_selected_inx :=0;
                  if (get_keyword('mode', params) ='edit' and get_keyword('service_key', params) is not null) {
                    select BS_OWNER into user_ident from UDDI..BUSINESS_SERVICE  where BS_SERVICE_KEY = get_keyword('service_key', params);
                  }

                for select  U_ID, U_NAME, U_FULL_NAME  from SYS_USERS where U_IS_ROLE=0  and  U_DAV_ENABLE =1 do {
                      if (U_FULL_NAME  is not null )
                        user_name:= U_FULL_NAME;
                      else
                        user_name:= U_NAME;
                      if  (user_ident >=0 and user_ident = U_ID)
                       (control as vspx_select_list).vsl_selected_inx :=indx;
                    (control as vspx_select_list).vsl_items := vector_concat ((control as vspx_select_list).vsl_items, vector(user_name));
                    (control as vspx_select_list).vsl_item_values := vector_concat ((control as vspx_select_list).vsl_item_values, vector(sprintf('%d',U_ID)));
                    indx := indx +1;
                }
            }
            ]]></v:script>
         </v:before-data-bind>
        </v:select-list>
       </td>
      </vm:raw>
      <vm:control name="service_name" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Service Name" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
          if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='service' )  {
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit' and get_keyword('service_key', params) is not null) {
                    select BS_NAME  into value  from UDDI..BUSINESS_SERVICE  where BS_SERVICE_KEY = get_keyword('service_key', params);
                    control.ufl_value := value;
                  }
          }
          ]]></v:script>
        </v:before-data-bind>
       </vm:events>


      </vm:control>


     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="service_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="service_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>
   <!--  Model Create/Modify-->
   <v:template name="model_create_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='tmodel' ) then 1 else 0 end">

    <vm:form name="tmodel_form" type="simple" method="POST" action="">
     <input type="hidden" name="tmodel_key" value="<?= get_keyword('tmodel_key', self.params) ?>"/>
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.params) ?>"/>
     <!--ches
   <v:text type="hidden" name="tmodel_key" value="--get_keyword('tmodel_key', params)"/>
   <v:text type="hidden" name="mode" value="--get_keyword('mode', params)"/>
   -->
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  declare uuid_value, stmt   varchar;
                  if (get_keyword('tmodel_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('tmodel_key', params)  is not null ) {
                      uuid_value := get_keyword('tmodel_key', params);
                      update UDDI..TMODEL  set
                        TM_AUTHORIZED_NAME=get_keyword( 'tmodel_a_name', params),
                        TM_OPERATOR =get_keyword('tmodel_p_name', params),
                        TM_NAME =get_keyword('tmodel_name', params),
                        TM_OWNER =get_keyword('tmodel_owner', params)
                        where  TM_TMODEL_KEY =uuid_value;
                    } else if (get_keyword('mode', params) ='create') {
                      uuid_value := uuid();
                      insert into  UDDI..TMODEL  ( TM_TMODEL_KEY, TM_AUTHORIZED_NAME,  TM_OPERATOR,  TM_NAME,  TM_OWNER,  TM_CREATED,  TM_CHANGED  )
                      values (
                      uuid_value, get_keyword('tmodel_a_name', params), get_keyword('tmodel_p_name', params),  get_keyword('tmodel_name', params), get_keyword('tmodel_owner', params),
                       now(), now() );
                    }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv.vspx?page=3&sid=%s&realm=%s\r\n', self.sid ,self.realm));

                }
                ]]></script>
      </v:on-post>
     </vm:events>
     <vm:row>
      <vm:raw>
       <td class="SubInfo">Technical Model Owner</td>
       <td>
        <v:select-list name="tmodel_owner" xhtml_style="width:200">
         <v:before-data-bind>
          <v:script><![CDATA[
          if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='tmodel' ) {
                  declare indx, user_ident  integer;
                  declare user_name varchar;
                  indx :=0;
                  user_ident  := -1;
                  (control as vspx_select_list).vsl_items:= vector();
                  (control as vspx_select_list).vsl_item_values:= vector();
                  (control as vspx_select_list).vsl_selected_inx :=0;
                  if (get_keyword('mode', params) = 'edit' and get_keyword('tmodel_key', params) is not null) {
                    select TM_OWNER into user_ident from UDDI..TMODEL  where TM_TMODEL_KEY = get_keyword('tmodel_key', params);
                  }
                    for select  U_ID, U_NAME, U_FULL_NAME  from SYS_USERS where U_IS_ROLE=0  and  U_DAV_ENABLE =1 do {
                      if (U_FULL_NAME  is not null )
                        user_name:= U_FULL_NAME;
                      else
                        user_name:= U_NAME;
                      if  (user_ident >=0 and user_ident = U_ID)
                       (control as vspx_select_list).vsl_selected_inx :=indx;
                    (control as vspx_select_list).vsl_items := vector_concat ((control as vspx_select_list).vsl_items, vector(user_name));
                    (control as vspx_select_list).vsl_item_values := vector_concat ((control as vspx_select_list).vsl_item_values, vector(sprintf('%d',U_ID)));
                    indx := indx +1;
                      }
          }
          ]]></v:script>
         </v:before-data-bind>
        </v:select-list>
       </td>
      </vm:raw>
      <vm:control name="tmodel_a_name" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Authorized Name" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
            if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='tmodel' ) {
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit' and get_keyword('tmodel_key', params) is not null ) {
                    select TM_AUTHORIZED_NAME  into value  from UDDI..TMODEL  where TM_TMODEL_KEY = get_keyword('tmodel_key', params);
                    control.ufl_value := value;
                  }
            }
            ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>


     </vm:row>
     <vm:row>
      <vm:control name="tmodel_p_name" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Provider" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
            if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='tmodel' ) {
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit' and get_keyword('tmodel_key', params) is not null) {
                    select TM_OPERATOR  into value  from UDDI..TMODEL  where TM_TMODEL_KEY = get_keyword('tmodel_key', params);
                    control.ufl_value := value;
                  }
            }
            ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>
      <vm:control name="tmodel_name" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Technical Model Name" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
          if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='tmodel' ) {
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit' and get_keyword('tmodel_key', params) is not null) {
                    select TM_NAME  into value  from UDDI..TMODEL  where TM_TMODEL_KEY = get_keyword('tmodel_key', params);
                    control.ufl_value := value;
                  }

          }
          ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>


     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="tmodel_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="tmodel_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>
   <!-- Contact Create/Modify-->
   <v:template name="contact_create_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='contact') then 1 else 0 end">
    <table border="0"  width="100%" cellpadding='10' cellspacing='0' >
     <tr>
      <td>
       <img src="images/contact.gif" width="16" height="16"/>
      </td>
      <td class="SubInfo" width="100%">
       <?vsp
       if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='contact')
                    {   declare  owner_name, business_name  varchar;

                      if ( get_keyword('mode', self.vc_page.vc_event.ve_params) = 'edit' ) {
                        select CO_PERSONAL_NAME, BE_NAME   into owner_name,   business_name  from UDDI..CONTACTS  join UDDI..BUSINESS_ENTITY on CO_BUSINESS_ID = BE_BUSINESS_KEY  where  CO_CONTACT_KEY  = get_keyword('contact_key', self.vc_page.vc_event.ve_params);
                        http(sprintf('Parameters of <b>%s</b> contact for business <b>%s</b> ', owner_name, business_name));
                      } else {
                        select BE_NAME   into   business_name  from UDDI..BUSINESS_ENTITY where  BE_BUSINESS_KEY   = get_keyword('business_key', self.vc_page.vc_event.ve_params);
                        http(sprintf('Parameters of new contact for business <b>%s</b>', business_name));
                      }
                    }
                  ?>


      </td>
     </tr>
    </table>

    <vm:form name="contact_entry_form" type="simple" method="POST" action="">
     <input type="hidden" name="business_key" value="<?= get_keyword('business_key', self.params) ?>"/>
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.params) ?>"/>
     <input type="hidden" name="contact_key" value="<?= get_keyword('contact_key', self.params) ?>"/>
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  declare uuid_value   varchar;
                  if (get_keyword('contact_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('contact_key', params)  is not null ) {
                      uuid_value := get_keyword('contact_key', params);
                      update UDDI..CONTACTS  set
                        CO_USE_TYPE=get_keyword('contact_use_type', params),
                        CO_PERSONAL_NAME = get_keyword('contact_name', params)
                        where  CO_CONTACT_KEY = uuid_value;
                    } else if (get_keyword('mode', params) ='create') {
                      uuid_value := uuid();
                      insert into   UDDI..CONTACTS (CO_CONTACT_KEY,  CO_BUSINESS_ID , CO_USE_TYPE, CO_PERSONAL_NAME )
                      values (
                      uuid_value, get_keyword('business_key', params)  , get_keyword('contact_use_type', params),  get_keyword('contact_name', params) );
                    }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv_browse.vspx?page=3&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                }
                ]]></script>
      </v:on-post>
     </vm:events>
     <vm:row>
      <vm:control name="contact_name" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Contact person name" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
          if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='contact') {
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit' and get_keyword('page', params) ='contact' and get_keyword('contact_key', params) is not null) {
                    select CO_PERSONAL_NAME  into value  from UDDI..CONTACTS  where CO_CONTACT_KEY = get_keyword('contact_key', params);
                    control.ufl_value := value;
                  }

          }         ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>
      <vm:control name="contact_use_type" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Type of the contact" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
          if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='contact') {
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit' and get_keyword('page', params) ='contact' and get_keyword('contact_key', params) is not null) {
                    select CO_USE_TYPE  into value  from UDDI..CONTACTS  where CO_CONTACT_KEY = get_keyword('contact_key', params);
                    control.ufl_value := value;
                  }

          }         ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>


     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="contact_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="contact_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>

   <!-- E-Mail Create/Modify  -->
   <v:template name="email_create_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='email' ) then 1 else 0 end">
    <table border="0"  width="100%" cellpadding='10' cellspacing='0' >
     <tr>
      <td class="SubInfo">
                  Specify the E-mail address of  the person or automated service and its type ( human readable or automated mail service).
      </td>
     </tr>
    </table>

    <vm:form name="email_entry_form" type="simple" method="POST" action="">
     <input type="hidden" name="contact_key" value="<?= get_keyword('contact_key', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.params) ?>"/>
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  if (get_keyword('email_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('contact_key', params)  is not null ) {
                      update UDDI..EMAIL  set
                      EM_USE_TYPE =get_keyword('email_use_type', params),
                      EM_ADDR = get_keyword('email_address', params)
                      where EM_EMAIL_KEY = get_keyword('contact_key', params);
                    } else if (get_keyword('mode', params) ='create') {
                      declare uuid_value varchar;
                      uuid_value := uuid();
                      insert into   UDDI..EMAIL  (EM_EMAIL_KEY, EM_CONTACT_KEY, EM_USE_TYPE ,  EM_ADDR)
                      values (
                      uuid_value, get_keyword('contact_key',params) , get_keyword('email_use_type', params),  get_keyword('email_address', params) );
                    }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv_browse.vspx?page=12&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                }
                ]]></script>
      </v:on-post>
     </vm:events>
     <vm:row>
      <vm:control name="email_address" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="E-Mail address" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
         if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='email' ) {
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit' and get_keyword('page', params) ='email' and get_keyword('contact_key', params) is not null) {
                    select EM_ADDR  into value  from UDDI..EMAIL  where EM_EMAIL_KEY = get_keyword('contact_key', params);
                    control.ufl_value := value;
                  }
         }          ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>
      <vm:control name="email_use_type" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Type of use" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
            if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='email' ) {
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit' and get_keyword('page', params) ='email' and get_keyword('contact_key', params) is not null) {
                    select EM_USE_TYPE  into value  from UDDI..EMAIL  where EM_EMAIL_KEY = get_keyword('contact_key', params);
                    control.ufl_value := value;
                  }
            }       ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>


     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="email_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="email_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>

   <!-- Phone Create/Modify-->
   <v:template name="phone_create_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='phone' ) then 1 else 0 end">
    <table border="0"  width="100%" cellpadding='10' cellspacing='0' >
     <tr>
      <td class="SubInfo">
                  Specify the Phone of  the person or automated service and its type ( human or automated phone service).
      </td>
     </tr>
    </table>

    <vm:form name="phone_entry_form" type="simple" method="POST" action="">
     <input type="hidden" name="contact_key" value="<?= get_keyword('contact_key', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.params) ?>"/>
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  if (get_keyword('phone_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('contact_key', params)  is not null ) {
                      update UDDI..PHONE  set
                      PH_USE_TYPE = get_keyword('phone_use_type', params),
                      PH_PHONE = get_keyword('phone_value', params)
                      where PH_PHONE_KEY = get_keyword('contact_key',params);
                    } else if (get_keyword('mode', params) ='create') {
                      declare uuid_value varchar;
                      uuid_value := uuid();
                      insert into   UDDI..PHONE  (PH_PHONE_KEY, PH_CONTACT_KEY, PH_USE_TYPE ,  PH_PHONE)
                      values (
                      uuid_value, get_keyword('contact_key',params) , get_keyword('phone_use_type', params),  get_keyword('phone_value', params) );
                    }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv_browse.vspx?page=13&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                }
                ]]></script>
      </v:on-post>
     </vm:events>
     <vm:row>
      <vm:control name="phone_value" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Phone" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit' and get_keyword('page', params) ='phone'  and get_keyword('contact_key', params) is not null) {
                    select PH_PHONE  into value  from UDDI..PHONE where PH_PHONE_KEY = get_keyword('contact_key', params);
                    control.ufl_value := value;
                  }
                  ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>
      <vm:control name="phone_use_type" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Type of the phone device" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit' and get_keyword('page', params) ='phone' and get_keyword('contact_key', params) is not null) {
                    select PH_USE_TYPE  into value  from UDDI..PHONE  where PH_PHONE_KEY = get_keyword('contact_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>


     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="phone_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="phone_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>

   <!-- Address Line Create/Modify-->
   <v:template name="address_create_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='address' ) then 1 else 0 end">
    <table border="0"  width="100%" cellpadding='10' cellspacing='0' >
     <tr>
      <td class="SubInfo">
                  Specify the Address of the person or technical resource ( for example store ) and its type.
       <br/>
                  Address may consist from few lines. You should indicate the type of each address line - building, street, city, country etc.
      </td>
     </tr>
    </table>

    <vm:form name="address_entry_form" type="simple" method="POST" action="">
     <input type="hidden" name="contact_key" value="<?= get_keyword('contact_key', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.vc_page.vc_event.ve_params) ?>"/>
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  if (get_keyword('address_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('contact_key', params)  is not null ) {
                      update UDDI..ADDRESS_LINE set
                      AL_USE_TYPE =get_keyword('address_use_type', params),
                      AL_LINE = get_keyword('address_value', params)
                      where AL_ADDRESS_KEY = get_keyword('contact_key', params);
                    } else if (get_keyword('mode', params) ='create') {
                      declare uuid_value varchar;
                      uuid_value := uuid();
                      insert into   UDDI..ADDRESS_LINE  (AL_ADDRESS_KEY, AL_PARENT_ID, AL_PARENT_TYPE, AL_USE_TYPE ,  AL_LINE, AL_SORT_CODE )
                      values (
                      uuid_value, get_keyword('contact_key',params) ,'contacts', get_keyword('address_use_type', params),  get_keyword('address_value', params),'asc' );
                    }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv_browse.vspx?page=14&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                }
                ]]></script>
      </v:on-post>
     </vm:events>
     <vm:row>
      <vm:control name="address_value" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Address line" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit' and get_keyword('page', params) ='address'  and get_keyword('contact_key', params) is not null) {
                    select AL_LINE  into value  from UDDI..ADDRESS_LINE  where AL_ADDRESS_KEY = get_keyword('contact_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>
      <vm:control name="address_use_type" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Type of the address line" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;
                  if (get_keyword('mode', params) ='edit'  and get_keyword('page', params) ='address'  and get_keyword('contact_key', params) is not null) {
                    select AL_USE_TYPE  into value  from UDDI..ADDRESS_LINE  where AL_ADDRESS_KEY = get_keyword('contact_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>


     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="address_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="address_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>
   <!-- Description  Create-->
   <v:template name="description_create_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='description' ) then 1 else 0 end">
    <table border="0"  width="100%" cellpadding='10' cellspacing='0' >
     <tr>
      <td class="SubInfo">
       <?vsp
       if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='description' )
                    {   declare parent_key, owner_name, binding_value varchar;

                      if ( get_keyword('mode', self.vc_page.vc_event.ve_params) = 'edit' ) {
                        select UD_PARENT_ID into parent_key from UDDI..DESCRIPTION where UD_DESCRIPTION_KEY  = get_keyword('uuid_key', self.vc_page.vc_event.ve_params);
                      } else {
                        parent_key := get_keyword('uuid_key', self.vc_page.vc_event.ve_params);
                      }
                      if ( get_keyword('owner', self.vc_page.vc_event.ve_params ) = 'businessEntity' ) {
                        select BE_NAME  into owner_name from UDDI..BUSINESS_ENTITY where  BE_BUSINESS_KEY =parent_key;
                      } else if (get_keyword('owner', self.vc_page.vc_event.ve_params) = 'businessService') {
                        select BS_NAME into owner_name  from  UDDI..BUSINESS_SERVICE  where  BS_SERVICE_KEY = parent_key;
                      } else if (get_keyword('owner', self.vc_page.vc_event.ve_params) = 'contacts') {
                        select CO_PERSONAL_NAME into  owner_name from  UDDI..CONTACTS   where  CO_CONTACT_KEY = parent_key;
                      } else if (get_keyword('owner', self.vc_page.vc_event.ve_params) = 'bindingTemplate') {
                        select BS_NAME into owner_name  from  UDDI..BUSINESS_SERVICE  join UDDI..BINDING_TEMPLATE on BS_SERVICE_KEY = BT_SERVICE_KEY where   BT_BINDING_KEY = parent_key;
                      }
                      if (get_keyword('owner', self.vc_page.vc_event.ve_params) = 'bindingTemplate') {
                        declare  access_point, redirector varchar;
                        select BT_ACCESS_POINT ,  BT_HOSTING_REDIRECTOR  into access_point, redirector  from UDDI..BINDING_TEMPLATE where   BT_BINDING_KEY = parent_key;
                        if (redirector is not null) {
                          select BS_NAME into binding_value  from  UDDI..BUSINESS_SERVICE   where BS_SERVICE_KEY = redirector;
                          http(sprintf('Description for binding of <b>%s</b> to service <b>%s</b>', owner_name, binding_value));
                        } else if (access_point is not null) {
                          http(sprintf('Description for binding of <b>%s</b> to access point <b>%s</b>', owner_name, access_point));
                        }
                      } else
                          http(sprintf('Description for <b>%s</b>', owner_name));
                    }
                  ?>


      </td>
     </tr>
    </table>

    <vm:form name="description_entry_form" type="simple" method="POST" action="">
     <input type="hidden" name="uuid_key" value="<?= get_keyword('uuid_key', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.params) ?>"/>
     <input type="hidden" name="owner" value="<?= get_keyword('owner', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="page_back" value="<?= get_keyword('page_back', self.vc_page.vc_event.ve_params) ?>"/>
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  if (get_keyword('description_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null ) {
                      update UDDI..DESCRIPTION set
                      UD_DESC = get_keyword('description_value', params)
                      where UD_DESCRIPTION_KEY  = get_keyword('uuid_key', params);
                    } else if (get_keyword('mode', params) ='create') {
                      declare uuid_value varchar;
                      uuid_value := uuid();
        get_keyword('uuid_key', params) ,
        get_keyword('owner', params)
                      );
                      insert into   UDDI..DESCRIPTION (UD_DESCRIPTION_KEY,  UD_PARENT_ID ,UD_TYPE, UD_LANG ,   UD_DESC )
                      values (
                      uuid_value, get_keyword('uuid_key', params) ,get_keyword('owner', params),  get_keyword('lang_value', params), get_keyword('description_value', params) );
                    }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv_browse.vspx?page=%s&sid=%s&realm=%s\r\n',get_keyword('page_back', params), self.sid ,self.realm));
                }
                ]]></script>
      </v:on-post>
     </vm:events>
     <vm:row>
      <vm:space width="50%"/>

      <vm:control name="lang_value" type="edit">
       <vm:attrs xhtml_style="width:400"/>
       <vm:caption value="Language" pos="top" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;
                  if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null  and get_keyword('page', params) ='description') {
                    select UD_LANG into value  from UDDI..DESCRIPTION  where UD_DESCRIPTION_KEY  = get_keyword('uuid_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>

      <vm:space width="50%"/>
     </vm:row>


     <vm:row>
      <vm:space width="50%"/>
      <vm:control name="description_value" type="textarea" align="center">
       <vm:attrs xhtml_style="width:400;height:200" />
       <vm:caption value="Description" pos="top" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;

                  if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null  and get_keyword('page', params) ='description') {
                    select UD_DESC into value  from UDDI..DESCRIPTION  where UD_DESCRIPTION_KEY  = get_keyword('uuid_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>
      <vm:space width="50%"/>
     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="description_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="description_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>
   <!-- Discovery URL Create-->
   <v:template name="discovery_create_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='discovery' ) then 1 else 0 end">
    <table border="0"   width="100%" cellpadding='10' cellspacing='0' >
     <tr>
      <td>
       <img src="images/service.gif" width="16" height="16"/>
      </td>
      <td class="SubInfo" align="left">
       <nobr>
        <?vsp
          if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='discovery' )
                    {   declare  owner_name, business_name  varchar;

                      if ( get_keyword('mode', self.vc_page.vc_event.ve_params) = 'edit' ) {
                        select BE_NAME   into  business_name  from UDDI..DISCOVERY_URL join UDDI..BUSINESS_ENTITY on DU_PARENT_ID = BE_BUSINESS_KEY  where  DU_DISCOVERY_KEY  = get_keyword('uuid_key', self.vc_page.vc_event.ve_params);
                        http(sprintf('Parameters  for business <b>%s</b> ',  business_name));
                      } else {
                        select BE_NAME   into   business_name  from UDDI..BUSINESS_ENTITY where  BE_BUSINESS_KEY   = get_keyword('uuid_key', self.vc_page.vc_event.ve_params);
                        http(sprintf('Parameters of new service for business <b>%s</b>', business_name));
                      }
                    }
                  ?>
       </nobr>
      </td>
     </tr>
    </table>

    <vm:form name="discovery_entry_form" type="simple" method="POST" action="">
     <input type="hidden" name="uuid_key" value="<?= get_keyword('uuid_key', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="owner" value="<?= get_keyword('owner', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.vc_page.vc_event.ve_params) ?>"/>
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  if (get_keyword('discovery_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null ) {
                      update UDDI..DISCOVERY_URL  set
                      DU_URL =get_keyword('url_value', params),
                      DU_USE_TYPE = get_keyword('url_use_type', params)
                      where DU_DISCOVERY_KEY = get_keyword('uuid_key',params);
                    } else if (get_keyword('mode', params) ='create') {
                      declare uuid_value varchar;
                      uuid_value := uuid();
                      insert into  UDDI..DISCOVERY_URL  (DU_DISCOVERY_KEY, DU_PARENT_ID, DU_PARENT_TYPE , DU_URL, DU_USE_TYPE )
                      values (uuid_value,
                      get_keyword('uuid_key',params) , get_keyword('owner', params),  get_keyword('url_value', params),get_keyword('url_use_type', params));
                    }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv_browse.vspx?page=6&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                }
                ]]></script>
      </v:on-post>
     </vm:events>
     <vm:row>
      <vm:control name="url_value" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="URL" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;
                  if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null and get_keyword('page', params)='discovery') {
                    select DU_URL into value  from UDDI..DISCOVERY_URL  where DU_DISCOVERY_KEY  = get_keyword('uuid_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>
      <vm:control name="url_use_type" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Use type" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;
                  if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null and get_keyword('page', params)='discovery') {
                    select DU_USE_TYPE into value  from UDDI..DISCOVERY_URL  where DU_DISCOVERY_KEY  = get_keyword('uuid_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>


     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="discovery_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="discovery_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>
   <!--Identify Create -->
   <v:template name="identify_create_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='identify' ) then 1 else 0 end">
    <vm:form name="identify_create_form" type="simple" method="POST" action="">
     <input type="hidden" name="uuid_key" value="<?= get_keyword('uuid_key', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="owner" value="<?= get_keyword('owner', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.vc_page.vc_event.ve_params) ?>"/>
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  declare uuid_value, stmt   varchar;
                  if (get_keyword('identify_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null ) {
                      update UDDI..IDENTIFIER_BAG set
                      IB_TMODEL_KEY_ID = get_keyword('tmodel', params),
                      IB_KEY_NAME =get_keyword('key_name', params),
                      IB_KEY_VALUE =get_keyword('key_value', params)
                      where IB_IDENTIFIER_KEY = get_keyword('uuid_key', params);
                    } else if (get_keyword('mode', params) ='create') {
                      declare uuid_value varchar;
                      uuid_value := uuid();
                      insert into UDDI..IDENTIFIER_BAG (IB_IDENTIFIER_KEY,  IB_PARENT_ID, IB_PARENT_TYPE,  IB_TMODEL_KEY_ID, IB_KEY_NAME, IB_KEY_VALUE )
                      values ( uuid_value, get_keyword('uuid_key', params), get_keyword('owner', params), get_keyword('tmodel', params), get_keyword('key_name', params),  get_keyword('key_value', params) );
                    }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv_browse.vspx?page=4&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                }
                ]]></script>
      </v:on-post>
     </vm:events>
     <vm:row>
      <vm:raw>
       <td class="SubInfo">Technical Model</td>
       <td>
        <v:select-list name="tmodel" xhtml_style="width:200">
         <v:before-data-bind>
          <v:script><![CDATA[
          if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='identify' ) {
                  declare indx integer;
                  declare tm_key varchar;
                  tm_key := null;
                  indx :=0;
                  (control as vspx_select_list).vsl_items:= vector();
                  (control as vspx_select_list).vsl_item_values:= vector();
                  (control as vspx_select_list).vsl_selected_inx :=0;
                  if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null and get_keyword('page', params) ='identify') {
                    select IB_TMODEL_KEY_ID  into tm_key  from UDDI..IDENTIFIER_BAG where IB_IDENTIFIER_KEY  = get_keyword('uuid_key', params);
                  }

                    for select TM_NAME, TM_TMODEL_KEY    from UDDI..TMODEL  do {
                      if (tm_key is not null and tm_key = TM_TMODEL_KEY)
                       (control as vspx_select_list).vsl_selected_inx :=indx;
                    (control as vspx_select_list).vsl_items := vector_concat ((control as vspx_select_list).vsl_items, vector(TM_NAME));
                    (control as vspx_select_list).vsl_item_values := vector_concat ((control as vspx_select_list).vsl_item_values, vector(TM_TMODEL_KEY));
                    indx := indx +1;
                      }
            }    ]]></v:script>
         </v:before-data-bind>
        </v:select-list>
       </td>
      </vm:raw>
      <vm:space colspan="2"/>


     </vm:row>
     <vm:row>
      <vm:control name="key_name" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Key Name" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;
                  if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null and get_keyword('page', params) ='identify') {
                    select IB_KEY_NAME  into value  from UDDI..IDENTIFIER_BAG  where IB_IDENTIFIER_KEY  = get_keyword('uuid_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>
      <vm:control name="key_value" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Key Value" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;
                  if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null and get_keyword('page', params) ='identify') {
                    select IB_KEY_VALUE  into value  from UDDI..IDENTIFIER_BAG where IB_IDENTIFIER_KEY  = get_keyword('uuid_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>


     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="identify_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="identify_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>
   <!--Category Create -->
   <v:template name="category_create_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='category'  ) then 1 else 0 end">
    <vm:form name="category_create_form" type="simple" method="POST" action="">
     <input type="hidden" name="uuid_key" value="<?= get_keyword('uuid_key', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="owner" value="<?= get_keyword('owner', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="page_back" value="<?= get_keyword('page_back', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.vc_page.vc_event.ve_params) ?>"/>
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  declare uuid_value, stmt   varchar;
                  if (get_keyword('category_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null ) {
                      update UDDI..CATEGORY_BAG set
                      CB_TMODEL_KEY_ID =get_keyword('category_tmodel', params),
                      CB_KEY_NAME=get_keyword('category_key_name', params),
                      CB_KEY_VALUE= get_keyword('category_key_value', params)
                      where CB_CATEGORY_KEY = get_keyword('uuid_key', params);
                    } else if (get_keyword('mode', params) ='create') {
                      declare uuid_value varchar;
                      uuid_value := uuid();
                        insert into UDDI..CATEGORY_BAG (CB_CATEGORY_KEY,  CB_PARENT_ID, CB_PARENT_TYPE,  CB_TMODEL_KEY_ID, CB_KEY_NAME, CB_KEY_VALUE )
                        values ( uuid_value, get_keyword('uuid_key', params), get_keyword('owner', params), get_keyword('category_tmodel', params), get_keyword('category_key_name', params),  get_keyword('category_key_value', params) );

                    }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv_browse.vspx?page=%s&sid=%s&realm=%s\r\n', get_keyword('page_back', params), self.sid ,self.realm));
                }
                ]]></script>
      </v:on-post>
     </vm:events>
     <vm:row>
      <vm:raw>
       <td class="SubInfo">Technical Model</td>
       <td>
        <v:select-list name="category_tmodel" xhtml_style="width:200">
         <v:before-data-bind>
          <v:script><![CDATA[
          if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='category'  ) {
                  declare indx integer;
                  declare tm_key varchar;
                  indx :=0;
                  tm_key := null;
                  (control as vspx_select_list).vsl_items:= vector();
                  (control as vspx_select_list).vsl_item_values:= vector();
                  (control as vspx_select_list).vsl_selected_inx :=0;
                  if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null and get_keyword('page', params) ='category') {
                    select CB_TMODEL_KEY_ID  into tm_key  from UDDI..CATEGORY_BAG  where CB_CATEGORY_KEY  = get_keyword('uuid_key', params);
                  }
                    for select TM_NAME, TM_TMODEL_KEY    from UDDI..TMODEL  do {
                      if (tm_key is not null and tm_key = TM_TMODEL_KEY)
                       (control as vspx_select_list).vsl_selected_inx :=indx;
                    (control as vspx_select_list).vsl_items := vector_concat ((control as vspx_select_list).vsl_items, vector(TM_NAME));
                    (control as vspx_select_list).vsl_item_values := vector_concat ((control as vspx_select_list).vsl_item_values, vector(TM_TMODEL_KEY));
                    indx := indx +1;
                      }
          }
          ]]></v:script>
         </v:before-data-bind>
        </v:select-list>
       </td>
      </vm:raw>
      <vm:space colspan="2"/>


     </vm:row>
     <vm:row>
      <vm:control name="category_key_name" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Key Name" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;
                  if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null and get_keyword('page', params) ='category') {
                    select CB_KEY_NAME  into value  from UDDI..CATEGORY_BAG  where CB_CATEGORY_KEY  = get_keyword('uuid_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>
      <vm:control name="category_key_value" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Key Value" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;
                  if ( get_keyword('mode', params) ='edit'  and get_keyword('uuid_key', params)  is not null and get_keyword('page', params) ='category') {
                    select CB_KEY_VALUE  into value  from UDDI..CATEGORY_BAG where CB_CATEGORY_KEY  = get_keyword('uuid_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>


     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="category_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="category_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>
   <!-- Binding create/modify-->
   <v:template name="binding_type_select_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='binding' ) then 1 else 0 end">
    <v:before-data-bind>
     <v:script><![CDATA[
             if (get_keyword('mode', params) ='edit' and get_keyword('page', control.vc_page.vc_event.ve_params) ='binding')  {
                  declare  binding_id , access_point,  redirector  varchar;
                  binding_id := get_keyword('binding_key', params);
                  select BT_ACCESS_POINT,  BT_HOSTING_REDIRECTOR  into access_point,  redirector  from UDDI..BINDING_TEMPLATE where  BT_BINDING_KEY =binding_id;
                    if (access_point is not null) {
                              http_request_status ('HTTP/1.1 302 Found');
                      http_header (sprintf('Location: uddi_serv_create.vspx?page=binding_url&mode=edit&binding_key=%s&sid=%s&realm=%s\r\n', binding_id, self.sid ,self.realm));
                    } else if (redirector is not null) {
                              http_request_status ('HTTP/1.1 302 Found');
                      http_header (sprintf('Location: uddi_serv_create.vspx?page=binding_redirect_business&binding_key=%s&mode=edit&sid=%s&realm=%s\r\n',  binding_id, self.sid ,self.realm));
                    }
                    return;
             }

             ]]></v:script>
    </v:before-data-bind>


    <table border="0"  width="100%" cellpadding='10' cellspacing='0' >
     <tr>
      <td class="SubInfo">


      </td>
     </tr>
    </table>

    <vm:form name="binding_type_select_form" type="simple" method="POST" action="">
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  if (get_keyword('binding_select', params) is not null) {
                    declare  b_type varchar;
                    b_type := get_keyword('binding_type',params);
                    if (b_type ='0') {
                              http_request_status ('HTTP/1.1 302 Found');
                      http_header (sprintf('Location: uddi_serv_create.vspx?page=binding_url&mode=create&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                    } else {
                              http_request_status ('HTTP/1.1 302 Found');
                      http_header (sprintf('Location: uddi_serv_create.vspx?page=binding_redirect_business&mode=create&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                    }
                  } else {
                            http_request_status ('HTTP/1.1 302 Found');
                    http_header (sprintf('Location: uddi_serv_browse.vspx?page=22&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                  }
                  return;
                }
                ]]></script>
      </v:on-post>
     </vm:events>
     <vm:row>
      <vm:space width="30%"/>
      <vm:control name="binding_type" type="radiobox" dir="vert">
       <vm:attrs width="100%" align="center" border="2" bordercolor="#000000"/>
       <vm:caption value="Kind of binding" pos="top" class="SubInfo"/>
       <vm:items left-margin="12" right-margin="12" class="SubInfo">
        <vm:group>
         <vm:item value="1" label="UDDI Service"/>
         <vm:item value="0" label="URL on Internet resource" initial-checked="1"/>
        </vm:group>
       </vm:items>
      </vm:control>
      <vm:space width="30%"/>
     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="binding_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="binding_select" value="Next>>" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>
   <!-- Binding step2-->
   <v:template name="binding_URL_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='binding_url' ) then 1 else 0 end">
    <table border="0"  width="100%" cellpadding='10' cellspacing='0' >
     <tr>
      <td class="SubInfo">


      </td>
     </tr>
    </table>

    <vm:form name="binding_url_define_form" type="simple" method="POST" action="">
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.vc_page.vc_event.ve_params) ?>"/>
     <!--input type="hidden" name="uuid_key" value="<?= get_keyword('uuid_key', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="page_back" value="<?= get_keyword('page_back', self.vc_page.vc_event.ve_params) ?>"/-->
     <input type="hidden" name="business_key" value="<?= get_keyword('business_key', self.vc_page.vc_event.ve_params) ?>"/>
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  if (get_keyword('binding_url_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('binding_key', params) is not null) {
                      update  UDDI..BINDING_TEMPLATE  set
                      BT_ACCESS_POINT=get_keyword('binding_url_value', params),
                      BT_URL_TYPE = get_keyword('binding_url_use_type', params),
                      BT_OWNER = ''
                      where BT_BINDING_KEY = get_keyword('binding_key', params);
                    } else if (get_keyword('mode', params) ='create' ) {
                      declare uuid_value varchar;
                      uuid_value := uuid();
                      insert into UDDI..BINDING_TEMPLATE  (BT_BINDING_KEY,    BT_SERVICE_KEY, BT_ACCESS_POINT, BT_URL_TYPE, BT_OWNER,  BT_CREATED,  BT_CHANGED )
                        values ( uuid_value, self.binding_service_owner , get_keyword('binding_url_value', params), get_keyword('binding_url_use_type', params),'',now(), now());
                    }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv_browse.vspx?page=22&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                }
                ]]></script>
      </v:on-post>
     </vm:events>


     <vm:row>
      <vm:raw>
       <td class="SubInfo">Binding Owner</td>
       <td>
        <v:select-list name="binding_url_owner" xhtml_style="width:200">
         <v:before-data-bind>
          <v:script><![CDATA[
          if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='binding_url' ) {
                  declare indx, user_ident integer;
                  declare user_name varchar;
                  user_ident := -1;
                  indx :=0;
                  (control as vspx_select_list).vsl_items:= vector();
                  (control as vspx_select_list).vsl_item_values:= vector();
                  (control as vspx_select_list).vsl_selected_inx :=0;
                  if (get_keyword('mode', params) ='edit' and get_keyword('binding_key', params) is not null and get_keyword('page', params) ='binding_url') {
                    select BT_OWNER into user_ident from UDDI..BINDING_TEMPLATE  where BT_BINDING_KEY = get_keyword('binding_key', params);
                  }
                    for select  U_ID, U_NAME, U_FULL_NAME  from SYS_USERS where U_IS_ROLE=0  and  U_DAV_ENABLE =1 do {
                      if (U_FULL_NAME  is not null )
                        user_name:= U_FULL_NAME;
                      else
                        user_name:= U_NAME;
                      if  (user_ident >=0 and user_ident = U_ID)
                       (control as vspx_select_list).vsl_selected_inx :=indx;
                    (control as vspx_select_list).vsl_items := vector_concat ((control as vspx_select_list).vsl_items, vector(user_name));
                    (control as vspx_select_list).vsl_item_values := vector_concat ((control as vspx_select_list).vsl_item_values, vector(sprintf('%d',U_ID)));
                    indx := indx +1;
                      }
          }
          ]]></v:script>
         </v:before-data-bind>
        </v:select-list>
       </td>
      </vm:raw>
      <vm:space colspan="2"/>
     </vm:row>


     <vm:row>
      <vm:control name="binding_url_value" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="URL" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;
                  if ( get_keyword('mode', params) ='edit'  and get_keyword('binding_key', params)  is not null and get_keyword('page', params)='binding_url') {
                    select BT_ACCESS_POINT into value from UDDI..BINDING_TEMPLATE where  BT_BINDING_KEY =get_keyword('binding_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>
      <vm:control name="binding_url_use_type" type="edit">
       <vm:attrs xhtml_style="width:200"/>
       <vm:caption value="Use type" pos="left" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;
                  if ( get_keyword('mode', params) ='edit'  and get_keyword('binding_key', params)  is not null and get_keyword('page', params)='binding_url') {
                    select BT_URL_TYPE  into value   from UDDI..BINDING_TEMPLATE where  BT_BINDING_KEY =get_keyword('binding_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>


     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="binding_url_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="binding_url_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>
   <v:template name="binding_redirect_business_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='binding_redirect_business' ) then 1 else 0 end">
    <table border="0"  width="100%" cellpadding='10' cellspacing='0' >
     <tr>
      <td class="SubInfo">
      </td>
     </tr>
    </table>

    <vm:form name="binding_redirect_business_form" type="simple" method="POST" action="">
     <!--input type="hidden" name="uuid_key" value="<?= get_keyword('uuid_key', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="owner" value="<?= get_keyword('owner', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="page_back" value="<?= get_keyword('page_back', self.vc_page.vc_event.ve_params) ?>"/-->
     <input type="hidden" name="binding_key" value="<?= get_keyword('binding_key', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.vc_page.vc_event.ve_params) ?>"/>
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  if (get_keyword('binding_redirect_business_next', params) is not null) {
                            http_request_status ('HTTP/1.1 302 Found');
                    http_header (sprintf('Location: uddi_serv_create.vspx?page=binding_redirect_service&business_key=%s&mode=%s&binding_key=%s&sid=%s&realm=%s\r\n', get_keyword('binding_redirect_business', params), get_keyword('mode', params), get_keyword('binding_key', params), self.sid ,self.realm));
                    return;
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv_browse.vspx?page=22&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                }
                ]]></script>
      </v:on-post>
     </vm:events>
     <vm:row>
      <vm:space width="50%"/>
      <vm:raw>


       <td>
        <table border="0">
         <tr>
          <td class="SubInfo">Business list</td>
         </tr>
         <tr>
          <td>
           <v:select-list name="binding_redirect_business" xhtml_style="width:400" xhtml_size="10">
            <v:before-data-bind>
             <v:script><![CDATA[
             if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='binding_redirect_business' ) {
                  declare indx, user_ident integer;
                  declare own_business_key varchar;
                  user_ident := -1;
                  indx :=0;
                  (control as vspx_select_list).vsl_items:= vector();
                  (control as vspx_select_list).vsl_item_values:= vector();
                  (control as vspx_select_list).vsl_selected_inx :=0;
                  if (get_keyword('page', control.vc_page.vc_event.ve_params) ='binding_redirect_business') {
                    if (get_keyword('mode', params) ='edit' and get_keyword('binding_key', params) is not null) {
                      select BE_BUSINESS_KEY  into own_business_key  from UDDI..BUSINESS_ENTITY join UDDI..BUSINESS_SERVICE on BS_BUSINESS_KEY = BE_BUSINESS_KEY   join UDDI..BINDING_TEMPLATE on BS_SERVICE_KEY   =  BT_SERVICE_KEY  where  BT_BINDING_KEY =get_keyword('binding_key', params);
                    }

                    select BS_BUSINESS_KEY  into own_business_key from UDDI..BUSINESS_SERVICE where  BS_SERVICE_KEY   = self.binding_service_owner ;
                      for select  BE_NAME as user_name, BE_BUSINESS_KEY   from UDDI..BUSINESS_ENTITY  do {
                          if (own_business_key <> BE_BUSINESS_KEY )  {
                        if  (user_ident >=0 and user_ident = BE_BUSINESS_KEY )
                         (control as vspx_select_list).vsl_selected_inx :=indx;
                      (control as vspx_select_list).vsl_items := vector_concat ((control as vspx_select_list).vsl_items, vector(user_name));
                      (control as vspx_select_list).vsl_item_values := vector_concat ((control as vspx_select_list).vsl_item_values, vector(BE_BUSINESS_KEY));
                      indx := indx +1;
                       }
                        }
                    }
             }      ]]></v:script>
            </v:before-data-bind>
           </v:select-list>
          </td>
         </tr>
        </table>
       </td>
      </vm:raw>
      <vm:space width="50%"/>
     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="binding_redirect_business_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="binding_redirect_business_next" value="Next>>" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>

   <v:template name="binding_redirect_service_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='binding_redirect_service' ) then 1 else 0 end">
    <table border="0"  width="100%" cellpadding='10' cellspacing='0' >
     <tr>
      <td class="SubInfo">
      </td>
     </tr>
    </table>

    <vm:form name="binding_redirect_service_form" type="simple" method="POST" action="">
     <input type="hidden" name="business_key" value="<?= get_keyword('business_key', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="binding_key" value="<?= get_keyword('binding_key', self.params) ?>"/>


     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  if (get_keyword('binding_redirect_service_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('business_key', params) is not null) {
                      update  UDDI..BINDING_TEMPLATE  set
                      BT_HOSTING_REDIRECTOR = get_keyword('binding_redirect_service', params),
                      BT_OWNER = ''
                      where BT_BINDING_KEY = get_keyword('binding_key', params);
                    } else if (get_keyword('mode', params) ='create' ) {
                      declare uuid_value varchar;
                      uuid_value := uuid();
                      insert into UDDI..BINDING_TEMPLATE  (BT_BINDING_KEY,    BT_SERVICE_KEY, BT_HOSTING_REDIRECTOR, BT_OWNER,  BT_CREATED,  BT_CHANGED )
                        values ( uuid_value, self.binding_service_owner , get_keyword('binding_redirect_service', params),'',now(), now());
                    }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv_browse.vspx?page=22&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                }
                ]]></script>
      </v:on-post>
     </vm:events>



     <vm:row>
      <vm:space width="50%"/>
      <vm:raw>
       <td>
        <table>
         <tr>
          <td class="SubInfo">Binding Owner</td>
         </tr>
         <tr>
          <td>
           <v:select-list name="binding_redirect_owner" xhtml_style="width:400">
            <v:before-data-bind>
             <v:script><![CDATA[
               if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='binding_redirect_service' ) {
                  declare indx, user_ident integer;
                  declare user_name varchar;
                  user_ident := -1;
                  indx :=0;
                  (control as vspx_select_list).vsl_items:= vector();
                  (control as vspx_select_list).vsl_item_values:= vector();
                  (control as vspx_select_list).vsl_selected_inx :=0;
                  if (get_keyword('mode', params) ='edit' and get_keyword('binding_key', params) is not null and get_keyword('page', params) ='binding_redirect_service') {
                    select BT_OWNER into user_ident from UDDI..BINDING_TEMPLATE  where BT_BINDING_KEY = get_keyword('binding_key', params);
                  }
                    for select  U_ID, U_NAME, U_FULL_NAME  from SYS_USERS where U_IS_ROLE=0  and  U_DAV_ENABLE =1 do {
                      if (U_FULL_NAME  is not null )
                        user_name:= U_FULL_NAME;
                      else
                        user_name:= U_NAME;
                      if  (user_ident >=0 and user_ident = U_ID)
                       (control as vspx_select_list).vsl_selected_inx :=indx;
                    (control as vspx_select_list).vsl_items := vector_concat ((control as vspx_select_list).vsl_items, vector(user_name));
                    (control as vspx_select_list).vsl_item_values := vector_concat ((control as vspx_select_list).vsl_item_values, vector(sprintf('%d',U_ID)));
                    indx := indx +1;
                      }
               }    ]]></v:script>
            </v:before-data-bind>
           </v:select-list>
          </td>
         </tr>
        </table>
       </td>
      </vm:raw>
      <vm:space width="50%"/>
     </vm:row>


     <vm:row>
      <vm:space width="50%"/>
      <vm:raw>
       <td>
        <table border="0">
         <tr>
          <td class="SubInfo">Services list</td>
         </tr>
         <tr>
          <td>
           <v:select-list name="binding_redirect_service" xhtml_style="width:400" xhtml_size="10">
            <v:before-data-bind>
             <v:script><![CDATA[
              if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='binding_redirect_service' ) {
                  declare indx, user_ident integer;
                  user_ident := -1;
                  indx :=0;
                  (control as vspx_select_list).vsl_items:= vector();
                  (control as vspx_select_list).vsl_item_values:= vector();
                  (control as vspx_select_list).vsl_selected_inx :=0;
                  if (get_keyword('mode', params) ='edit' and get_keyword('business_key', params) is not null and get_keyword('page', params) ='binding_redirect_service') {
                    select BT_SERVICE_KEY into  user_ident from UDDI..BINDING_TEMPLATE where  BT_BINDING_KEY =get_keyword('binding_key', params);
                  }
                    for select  BS_NAME as user_name ,  BS_SERVICE_KEY   from UDDI..BUSINESS_SERVICE where BS_BUSINESS_KEY =get_keyword('business_key', params)   do {
                      if  (user_ident >=0 and user_ident = BS_SERVICE_KEY )
                       (control as vspx_select_list).vsl_selected_inx :=indx;
                    (control as vspx_select_list).vsl_items := vector_concat ((control as vspx_select_list).vsl_items, vector(user_name));
                    (control as vspx_select_list).vsl_item_values := vector_concat ((control as vspx_select_list).vsl_item_values, vector( BS_SERVICE_KEY ));
                    indx := indx +1;
                      }
              }     ]]></v:script>
            </v:before-data-bind>
           </v:select-list>
          </td>
         </tr>
        </table>
       </td>
      </vm:raw>
      <vm:space width="50%"/>
     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="binding_redirect_service_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="binding_redirect_service_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>

   <v:template name="binding_instance_template" type="simple" enabled="--case when ( get_keyword('page', control.vc_page.vc_event.ve_params) ='instance_info' ) then 1 else 0 end">
    <table border="0"  width="100%" cellpadding='10' cellspacing='0' >
     <tr>
      <td class="SubInfo">
      </td>
     </tr>
    </table>

    <vm:form name="binding_instance_info_form" type="simple" method="POST" action="">
     <input type="hidden" name="mode" value="<?= get_keyword('mode', self.vc_page.vc_event.ve_params) ?>"/>
     <input type="hidden" name="instance_key" value="<?= get_keyword('instance_key', self.params) ?>"/>
     <input type="hidden" name="binding_key" value="<?= get_keyword('binding_key', self.params) ?>"/>
     <vm:attrs border="0" width="100%" cellspacing="0" cellpadding="5" align="center"/>
     <vm:events>
      <v:on-post>
       <script><![CDATA[
                {
                  if (get_keyword('binding_instance_info_save', params) is not null) {
                    if ( get_keyword('mode', params) ='edit'  and get_keyword('instance_key', params) is not null) {
                      update  UDDI..INSTANCE_DETAIL  set
                      ID_TMODEL_KEY =get_keyword('binding_instance_model', params),
                      ID_PARMS = get_keyword('binding_instance_info_value', params)
                      where ID_KEY = get_keyword('instance_key', params);
                    } else if (get_keyword('mode', params) ='create' ) {
                      declare uuid_value varchar;
                      uuid_value := uuid();
                      insert into UDDI..INSTANCE_DETAIL   (ID_KEY, ID_BINDING_KEY, ID_TMODEL_KEY,  ID_PARMS )
                        values ( uuid_value, get_keyword('binding_key', params)  , get_keyword('binding_instance_model', params),  get_keyword('binding_instance_info_value', params));
                    }
                  }
                          http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: uddi_serv_browse.vspx?page=32&sid=%s&realm=%s\r\n', self.sid ,self.realm));
                }
                ]]></script>
      </v:on-post>
     </vm:events>



     <vm:row>
      <vm:space width="50%"/>
      <vm:raw>
       <td>
        <table>
         <tr>
          <td class="SubInfo">tModel</td>
         </tr>
         <tr>
          <td>
           <v:select-list name="binding_instance_model" xhtml_style="width:400">
            <v:before-data-bind>
             <v:script><![CDATA[
             if ( get_keyword('page', control.vc_page.vc_event.ve_params) ='instance_info' ) {
                  declare indx integer;
                  declare tm_key varchar;
                  tm_key := null;
                  indx :=0;
                  (control as vspx_select_list).vsl_items:= vector();
                  (control as vspx_select_list).vsl_item_values:= vector();
                  (control as vspx_select_list).vsl_selected_inx :=0;
                  if ( get_keyword('mode', params) ='edit'  and get_keyword('instance_key', params)  is not null and get_keyword('page', params) ='instance_info') {
                    select ID_TMODEL_KEY  into tm_key  from UDDI..INSTANCE_DETAIL  where ID_KEY = get_keyword('instance_key', params);
                  }
                    for select TM_NAME, TM_TMODEL_KEY    from UDDI..TMODEL  do {
                      if (tm_key is not null and tm_key = TM_TMODEL_KEY)
                       (control as vspx_select_list).vsl_selected_inx :=indx;
                    (control as vspx_select_list).vsl_items := vector_concat ((control as vspx_select_list).vsl_items, vector(TM_NAME));
                    (control as vspx_select_list).vsl_item_values := vector_concat ((control as vspx_select_list).vsl_item_values, vector(TM_TMODEL_KEY));
                    indx := indx +1;
                      }
              }     ]]></v:script>
            </v:before-data-bind>
           </v:select-list>
          </td>
         </tr>
        </table>
       </td>
      </vm:raw>
      <vm:space width="50%"/>
     </vm:row>


     <vm:row>
      <vm:space width="50%"/>
      <vm:control name="binding_instance_info_value" type="textarea" align="center">
       <vm:attrs xhtml_style="width:400;height:200" />
       <vm:caption value="Description" pos="top" class="SubInfo"/>
       <vm:events>
        <v:before-data-bind>
         <v:script><![CDATA[
                  declare value varchar;

                  if ( get_keyword('mode', params) ='edit'  and get_keyword('instance_key', params)  is not null  and get_keyword('page', params) ='instance_info') {
                    select ID_PARMS  into value  from UDDI..INSTANCE_DETAIL  where ID_KEY  = get_keyword('instance_key', params);
                    control.ufl_value := value;
                  }
                   ]]></v:script>
        </v:before-data-bind>
       </vm:events>
      </vm:control>

      <vm:space width="50%"/>
     </vm:row>
     <vm:row>
      <vm:bgroup colspan="4" align="center">
       <v:button action="submit" name="binding_instance_info_cancel" value="Cancel" xtml_width="32"/>
       <v:button action="submit" name="binding_instance_info_save" value="Save" xtml_width="32"/>
      </vm:bgroup>
     </vm:row>
    </vm:form>
   </v:template>
  </vm:pagebody>
 </vm:pagewrapper>
</v:page>

<!--

-->
