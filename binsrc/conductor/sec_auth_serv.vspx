<?xml version="1.0"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="auth_serv"
        decor="yacutia_decor.vspx"
        style="yacutia_style.xsl"
        doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
        fast-render="1"
        xmlns:v="http://www.openlinksw.com/vspx/"
        xmlns:vm="http://www.openlinksw.com/vspx/macro">
  <vm:pagetitle>Virtuoso Access Control Lists</vm:pagetitle>
  <vm:pagewrapper>
    <vm:variables>
      <v:variable persist="0" name="acl_name" type="varchar" default="'HTTP'" param-name="acl"/>
      <v:variable persist="0" name="acl_list" type="any" default="null" />
      <v:variable persist="0" name="acl_list_mta" type="any" default="null" />
      <v:variable persist="0" name="edit" type="int" default="0" />
      <v:variable persist="0" name="ch" type="int" default="0" />

      <v:variable persist="0" name="filt" type="any" default="null" />
      <v:variable persist="0" name="acc" type="any" default="null" />
      <v:variable persist="0" name="dest" type="any" default="null" />
      <v:variable persist="0" name="mod" type="any" default="null" />
      <v:variable persist="0" name="rat" type="any" default="null" />
      <v:variable persist="0" name="lim" type="any" default="null" />
      <v:variable persist="0" name="obj" type="any" default="null" />
      <v:variable persist="0" name="idx" type="any" default="null" />
    </vm:variables>
    <vm:menu>
      <vm:menuitem name="HTTP" value="Access Control Lists"/>
    </vm:menu>
    <vm:header caption="Access Control Lists">
      <vm:help id="sec_auth_serv" sect=""/>
    </vm:header>
    <vm:pagebody>
      <v:method name="astyle" arglist="in cmp varchar">
        <![CDATA[
          if ((self.acl_name = cmp))
            return 'page_tab_selected';

          return 'page_tab';
        ]]>
      </v:method>

      <v:method name="fmt_acl" arglist="in i any">
        if (not i)
          return 'Allow';

        return 'Deny';
      </v:method>

      <v:method name="fmt_dest" arglist="in i any">
        --if (self.acl_name = 'HTTP')
        --  return 'N/A';
        return i;
      </v:method>

      <v:method name="fmt_obj" arglist="in i any">
        if (self.acl_name in ('HTTP', 'PROXY'))
          return 'N/A';

        if (self.acl_name = 'NEWS')
          return coalesce ((select NG_NAME from DB.DBA.NEWS_GROUPS where NG_GROUP = i), 'invalid group');

        return i;
      </v:method>

      <v:method name="fmt_mode" arglist="in i any">
        if (self.acl_name in ('HTTP', 'PROXY'))
          return 'N/A';

        else if (self.acl_name = 'NEWS')
        {
          if (i)
            return 'Post';

          return 'Read';
        }
        return i;
      </v:method>

      <v:method name="fmt_rate" arglist="in i any">
        --if (self.acl_name in ('HTTP', 'PROXY'))
        --  return 'N/A';
        return i;
      </v:method>

      <v:on-init>
        <!-- XXX: do not make change to columns or their number w/o having same in array
        manipulation bellow
        -->
        if (self.acl_list is null)
        {
          declare dta, mta any;

          exec ('select HA_ORDER, HA_OBJECT, HA_CLIENT_IP, HA_FLAG, HA_RW, HA_DEST_IP, HA_RATE, HA_LIMIT
          from HTTP_ACL where HA_LIST = ? order by HA_ORDER',
          null, null, vector (self.acl_name), 0, mta, dta);
          self.acl_list := dta;
          self.acl_list_mta := mta;
        }
      </v:on-init>
      <v:form name="page_form" type="simple" method="POST">
        <!-- top of security layout -->
        <table border="0" width="100%" height="100%" cellpadding="0" cellspacing="0">
          <tr valign='top'>
            <td>
              <table cellpadding='10' cellspacing='0' border='0' width='100%'>
                <tr>
                  <td>
                    <table cellpadding="0" cellspacing="0" border="0">
                      <tr>
                        <td class="page_tab" align="center">
                          <v:url xhtml_style="page_tab" url="sec_pki_1.vspx" value="Public Key Infrastructure" render-only="1"/>
                        </td>
                        <td class="page_tab" align="center">
                          <v:url xhtml_style="page_tab" url="sec_ca.vspx" value="CA Root Certificates" render-only="1"/>
                        </td>
                        <td class="page_tab_selected" align="center">
                          Access Control
                        </td>
                        <td class="page_tab_empty" align="right" width="100%">
                        </td>
                      </tr>
                    </table>
                    <table class="tab_page">
                      <tr>
                        <td valign="top">
                        <!-- end of top security layout -->
                          <table border="0" width="100%" height="100%" cellpadding="0" cellspacing="0">
                            <tr valign='top'>
                              <td>
                                <table cellpadding='10' cellspacing='0' border='0' width='100%'>
                                  <tr>
                                    <td>
                                      <table cellpadding="0" cellspacing="0" border="0">
                                        <tr>
          <td class="<?V self.astyle ('HTTP') ?>" align="center">
      <v:url xhtml_style="page_tab" url="sec_auth_serv.vspx?acl=HTTP" value="HTTP" render-only="1"/>
          </td>
          <td class="<?V self.astyle ('NEWS') ?>" align="center">
      <v:url xhtml_style="page_tab" url="sec_auth_serv.vspx?acl=NEWS" value="NEWS" render-only="1"/>
          </td>
          <td class="<?V self.astyle ('PROXY') ?>" align="center">
      <v:url xhtml_style="page_tab" url="sec_auth_serv.vspx?acl=PROXY" value="PROXY" render-only="1"/>
          </td>
          <?vsp
            if (vad_check_version ('pubsubhub') is not null)
        {
          ?>
          <td class="<?V self.astyle ('PSH') ?>" align="center">
      <v:url xhtml_style="page_tab" url="sec_auth_serv.vspx?acl=PSH" value="PSH" render-only="1"/>
          </td>
          <td class="<?V self.astyle ('PSH-SSL') ?>" align="center">
      <v:url xhtml_style="page_tab" url="sec_auth_serv.vspx?acl=PSH-SSL" value="PSH-SSL" render-only="1"/>
          </td>
                      <?vsp
              }
                        declare i, fnd integer;
                        i := 0; fnd := 0;
      for select distinct HA_LIST from HTTP_ACL where HA_LIST not in ('HTTP','NEWS','PROXY', 'Sponger','PSH','PSH-SSL') do
                        {
        if (self.acl_name not in ('HTTP','NEWS','PROXY','PSH','PSH-SSL') and HA_LIST = self.acl_name)
          fnd := 1;
        ?>
        <td class="<?V self.astyle (HA_LIST) ?>" align="center">
          <v:url xhtml_style="page_tab" url="--sprintf ('sec_auth_serv.vspx?acl=%V', HA_LIST)"
            value="--HA_LIST" render-only="1"/>
        </td>
        <?vsp
                          i := i + 1;
                        }

      if (not fnd and self.acl_name not in ('HTTP','NEWS','PROXY', 'Sponger','PSH','PSH-SSL'))
        {
        ?>
        <td class="<?V self.astyle (self.acl_name) ?>" align="center">
          <v:url xhtml_style="page_tab" url="--sprintf ('sec_auth_serv.vspx?acl=%V', self.acl_name)"
            value="--self.acl_name" render-only="1"/>
        </td>
        <?vsp
        }
                      ?>
          <!--?vsp if (DB.DBA.VAD_CHECK_VERSION ('Framework') is not null) { ?-->
          <!--td class="<?V self.astyle ('NetID ACLs') ?>" align="center">
      <v:url xhtml_style="page_tab" url="sparql_acl.vspx" value="NetID ACLs" render-only="1"/>
          </td-->
          <!--?vsp } ?-->
                        <!--td class="page_tab_empty" align="center" width="100%">
                          <table cellpadding="0" cellspacing="0">
                            <tr>
            <td width="100%" align="right">
                              </td>
                            </tr>
                          </table>
                        </td-->
      <td class="page_tab_empty" align="right" width="100%">
                        </td>
                    </tr>
                  </table>
                  <table class="tab_page">
                    <tr>
          <td valign="top">
      <!-- MAIN -->
      <table class="listing">
        <tr class="listing_header_row">
          <th>Filter</th>
          <th>Access</th>
          <th>Destination</th>
          <th>Object</th>
          <th>Mode</th>
          <th>Rate</th>
          <th>Action</th>
        </tr>
        <v:data-set name="ds" data="--self.acl_list" meta="--self.acl_list_mta"
          nrows="-1" scrollable="0">
          <v:template name="ds_rpt" type="repeat">
      <v:template name="ds_br" type="browse">
        <tr class="<?V case when mod (control.te_ctr, 2) = 0 then 'listing_row_even' else 'listing_row_odd' end ?>">
        <td><v:label value="--(control.vc_parent as vspx_row_template).te_rowset[2]"/></td>
        <td><v:label value="--self.fmt_acl((control.vc_parent as vspx_row_template).te_rowset[3])"/></td>
        <td><v:label value="--self.fmt_dest((control.vc_parent as vspx_row_template).te_rowset[5])"/></td>
        <td><v:label value="--self.fmt_obj((control.vc_parent as vspx_row_template).te_rowset[1])"/></td>
        <td><v:label value="--self.fmt_mode((control.vc_parent as vspx_row_template).te_rowset[4])"/></td>
        <td><v:label value="--self.fmt_rate((control.vc_parent as vspx_row_template).te_rowset[6])"/></td>
        <td  class="listing_col_action">
          <v:button name="edit_row" action="simple" value="images/icons/edit_16.png"
            style="image" xhtml_alt="Edit" xhtml_title="Edit" text="&nbsp;Edit">
          <v:on-post>
            self.edit := 1;
            self.apply_changes.vc_enabled := 0;
            self.filt := (control.vc_parent as vspx_row_template).te_rowset[2];
            self.acc := (control.vc_parent as vspx_row_template).te_rowset[3];
            self.dest := (control.vc_parent as vspx_row_template).te_rowset[5];
            self.obj := (control.vc_parent as vspx_row_template).te_rowset[1];
            self.mod := (control.vc_parent as vspx_row_template).te_rowset[4];
            self.rat := (control.vc_parent as vspx_row_template).te_rowset[6];
            self.lim := (control.vc_parent as vspx_row_template).te_rowset[7];
            self.idx := (control.vc_parent as vspx_row_template).te_ctr;
            self.edit_acl.vc_data_bind (e);
          </v:on-post>
          </v:button>
          <v:button name="del_row" action="simple" value="images/icons/trash_16.png" style="image"
            xhtml_alt="Delete" xhtml_title="Delete" text="&nbsp;Delete">
            <v:on-post><![CDATA[
        declare arr, new_arr, to_del any;
        declare l, i int;

        arr := self.acl_list;
        to_del := (control.vc_parent as vspx_row_template).te_rowset[0];
        l := length (arr);
        new_arr := make_array (l-1, 'any');
        i := 0;
        foreach (any elm in arr) do
          {
            if (elm[0] <> to_del)
              {
                new_arr [i] := elm;
          i := i + 1;
              }
          }
        self.acl_list := new_arr;
        self.ch := 1;
        self.edit := 0;
        self.edit_acl.vc_enabled := 0;
        self.ds.vc_data_bind (e);
        self.apply_changes.vc_data_bind (e);
        ]]></v:on-post>
          </v:button>
          <v:button name="up_row" action="simple" value="images/icons/previous_16.png" style="image"
            xhtml_alt="Up" xhtml_title="Up">
            <v:on-post><![CDATA[
        declare arr, new_arr, to_move any;
        declare tmp any;
        declare inx, i int;
        tmp := null;

        to_move := (control.vc_parent as vspx_row_template).te_rowset[0];
        arr := self.acl_list;

        foreach (any elm in arr) do
          {
            if (elm[0] = to_move)
              {
                goto swap_it;
              }
            tmp := elm;
            i := i + 1;
          }
        swap_it:
        if (tmp is not null)
          {
            arr[i-1] := (control.vc_parent as vspx_row_template).te_rowset;
            arr[i] := tmp;
          }

        self.acl_list := arr;
        self.ch := 1;
        self.edit := 0;
        self.edit_acl.vc_enabled := 0;
        self.ds.vc_data_bind (e);
        self.apply_changes.vc_data_bind (e);
        ]]></v:on-post>
          </v:button>
          <v:button name="down_row" action="simple" value="images/icons/next_16.png" style="image"
            xhtml_alt="Down" xhtml_title="Down">
            <v:on-post><![CDATA[
        declare arr, new_arr, to_move any;
        declare tmp any;
        declare inx, i int;
        tmp := null;

        to_move := (control.vc_parent as vspx_row_template).te_rowset[0];
        arr := self.acl_list;

        foreach (any elm in arr) do
          {
            if (elm[0] = to_move)
              {
                tmp := elm;
                inx := i;
              }
            else if (tmp is not null)
              {
                arr[inx] := elm;
          arr[i] := tmp;
          goto swap_it;
              }
            i := i + 1;
          }
        swap_it:
        self.acl_list := arr;
        self.ch := 1;
        self.edit := 0;
        self.edit_acl.vc_enabled := 0;
        self.ds.vc_data_bind (e);
        self.apply_changes.vc_data_bind (e);
        ]]></v:on-post>
          </v:button>
          <v:button name="first_row" action="simple" value="images/icons/first_16.png" style="image"
            xhtml_alt="First" xhtml_title="First">
            <v:on-post><![CDATA[
        declare arr, new_arr, to_move, new_arr any;
        declare tmp any;
        declare inx, i, l int;
        tmp := null;

        to_move := (control.vc_parent as vspx_row_template).te_rowset[0];
        arr := self.acl_list;
        l := length (arr);
        i := 1;
        new_arr := make_array (l, 'any');

        foreach (any elm in arr) do
          {
            if (elm[0] = to_move)
              {
                new_arr[0] := elm;
              }
            else
              {
                new_arr[i] := elm;
                i := i + 1;
              }
          }
        self.acl_list := new_arr;
        self.ch := 1;
        self.edit := 0;
        self.edit_acl.vc_enabled := 0;
        self.ds.vc_data_bind (e);
        self.apply_changes.vc_data_bind (e);
        ]]></v:on-post>
          </v:button>
          <v:button name="last_row" action="simple" value="images/icons/last_16.png" style="image"
            xhtml_alt="Last" xhtml_title="Last">
            <v:on-post><![CDATA[
        declare arr, new_arr, to_move, new_arr any;
        declare tmp any;
        declare inx, i, l int;
        tmp := null;

        to_move := (control.vc_parent as vspx_row_template).te_rowset[0];
        arr := self.acl_list;
        l := length (arr);
        i := 0;
        new_arr := make_array (l, 'any');

        foreach (any elm in arr) do
          {
            if (elm[0] = to_move)
              {
                new_arr[l-1] := elm;
              }
            else
              {
                new_arr[i] := elm;
                i := i + 1;
              }
          }
        self.acl_list := new_arr;
        self.ch := 1;
        self.edit := 0;
        self.edit_acl.vc_enabled := 0;
        self.ds.vc_data_bind (e);
        self.apply_changes.vc_data_bind (e);
        ]]></v:on-post>
          </v:button>
        </td>
      </tr>
      </v:template>
          </v:template>
        </v:data-set>
        <v:template type="simple" name="add_rec" enabled="--equ (self.edit, 0)">
          <tr>
            <td colspan="1">
        <v:button name="add_new_rec" value="Add New Rule" action="simple">
          <v:on-post>
            self.edit := 1;
            self.add_rec.vc_enabled := 0;
            self.edit_acl.vc_data_bind (e);
          </v:on-post>
        </v:button>
            </td>
            <td colspan="6">
        <v:form name="add_acl_list_f" method="POST" type="simple">
        <v:text name="n_acl_nam" value="" xhtml_size="10" error-glyph="*">
          <v:validator test="length" min="1" max="255" message="Enter a valid ACL name"/>
        </v:text>
        <v:button action="simple" name="add_new_acl" value="Add New ACL">
          <v:on-post>
            if (self.vc_is_valid)
              {
                self.vc_redirect (sprintf ('sec_auth_serv.vspx?acl=%U',
                  self.n_acl_nam.ufl_value));
              }
          </v:on-post>
        </v:button>
              </v:form>
            </td>
          </tr>
      </v:template>
      </table>
      <v:form name="edit_acl" method="POST" type="simple" enabled="--self.edit">
        <table>
          <tr>
            <td>Filter</td><td><v:text name="filt1" value="--self.filt" error-glyph="*">
          <v:validator test="regexp" regexp="^[^ \t\n\r]+$" message="Filter value is mandatory"/>
        </v:text>
            </td>
          </tr>
          <tr>
            <td>Access</td><td>
        <v:select-list name="acc1" value="--self.acc">
          <v:item name="Allow" value="0"/>
          <v:item name="Deny" value="1"/>
        </v:select-list>
            </td>
          </tr>
          <?vsp if (self.acl_name <> 'NEWS') { ?>
          <tr>
            <td>Destination</td><td><v:text name="dest1" value="--self.dest"/></td>
          </tr>
          <?vsp }

               if (self.acl_name not in ('HTTP', 'PROXY')) {
          ?>
          <tr>
            <td><?V case when self.acl_name = 'NEWS' then 'Group' else 'Object' end ?></td><td>
        <?vsp if (self.acl_name = 'NEWS') { ?>
        <v:data-list name="obj2" value="--self.obj"
          sql="select NG_NAME, NG_GROUP from DB.DBA.NEWS_GROUPS"
          key-column="NG_GROUP" value-column="NG_NAME" />
        <?vsp } else { ?>
        <v:text name="obj1" value="--self.obj"
          enabled="--case when self.acl_name not in ('HTTP', 'PROXY', 'NEWS') then 1 else 0 end" error-glyph="*">
          <v:validator test="regexp" regexp="^[\-+]?[0-9]+$" message="Number is expected"
            runat='server'/>
        </v:text>
        <?vsp }?>
            </td>
          </tr>
          <tr>
            <td><?V case when self.acl_name = 'NEWS' then 'Activity' else 'Mode' end ?></td><td>
        <?vsp if (self.acl_name = 'NEWS') { ?>
        <v:select-list name="mod2" value="--self.mod">
          <v:item name="post" value="1"/>
          <v:item name="read" value="0"/>
        </v:select-list>
        <?vsp } else { ?>
        <v:text name="mod1" value="--self.mod" enabled="--case when self.acl_name not in ('HTTP', 'PROXY', 'NEWS') then 1 else 0 end" error-glyph="*">
          <v:validator test="regexp" regexp="^[\-+]?[0-9]+$" message="Number is expected"
            runat='server'/>
        </v:text>
        <?vsp }?>
            </td>
          </tr>
          <?vsp } ?>
          <tr>
            <td>Rate</td><td>
        <v:text name="rat1" value="--self.rat" default_value="0" error-glyph="*">
          <v:validator test="regexp" regexp="^[\-+]?[0-9]+(\.[0-9]+)?$" message="Decimal number is expected"
            runat='server'/>
        </v:text>
            </td>
          </tr>
          <tr>
            <td>Limit</td><td>
        <v:text name="lim1" value="--self.lim" default_value="0" error-glyph="*">
          <v:validator test="regexp" regexp="^[\-+]?[0-9]+(\.[0-9]+)?$" message="Decimal number is expected"
            runat='server'/>
        </v:text>
            </td>
          </tr>
          <tr>
            <td colspan="2">
        <v:button name="cancel1" value="Cancel" action="simple">
          <v:on-post>
            self.edit := 0;
            self.edit_acl.vc_enabled := 0;
            self.vc_is_valid := 1;
            self.add_rec.vc_data_bind (e);
          </v:on-post>
        </v:button>
        <v:button name="update1" value="--case when self.idx is not null then 'Update' else 'Add' end" action="simple">
          <v:on-post><![CDATA[
            declare arr, elm any;
            declare l, idx int;
            declare obj, filt, acc, mod, dest, rat, lim any;

            if (not self.vc_is_valid)
              return;

            filt := self.filt1.ufl_value;
            acc := atoi(self.acc1.ufl_value);

            dest := '*';
            obj := -1;
                                    mod := -1;
                                    rat := 0;
                                    lim := 0;

            --if (self.acl_name <> 'HTTP')
            dest := self.dest1.ufl_value;

            if (self.acl_name not in ('HTTP', 'PROXY'))
              {
                if (self.acl_name = 'NEWS')
                  {
              obj := atoi(self.obj2.ufl_value);
                    mod := atoi(self.mod2.ufl_value);
            }
          else
            {
              obj := atoi(self.obj1.ufl_value);
                    mod := atoi(self.mod1.ufl_value);
            }
              }
            rat := atod (self.rat1.ufl_value);
            lim := atod (self.lim1.ufl_value);

            self.ch := 1;
            self.edit := 0;
            self.edit_acl.vc_enabled := 0;
            self.apply_changes.vc_data_bind (e);

            arr := self.acl_list;
            l := length (arr);

            if (self.idx is null)
              {
                self.idx := l;
                arr := vector_concat (arr, vector (vector ()));
                    }

            arr[self.idx] := vector (self.idx, obj, filt, acc, mod, dest, rat, lim);
                                    self.acl_list := arr;

            self.idx := null;
            self.add_rec.vc_data_bind (e);
            self.ds.vc_data_bind (e);
            ]]></v:on-post>
        </v:button>
            </td>
          </tr>
        </table>
      </v:form>
      <div>
        <v:form name="apply_changes" method="POST" type="simple"
          enabled="--case when self.edit = 0 and self.ch = 1 then 1 else 0 end">
          <v:button name="cancel" value="Cancel" action="simple">
            <v:on-post>
        self.vc_redirect (sprintf ('sec_auth_serv.vspx?acl=%U', self.acl_name));
            </v:on-post>
          </v:button>
          <v:button name="apply" value="Apply" action="simple">
            <v:on-post>
        declare i, arr any;

                                declare exit handler for sqlstate '*'
        {
          rollback work;
          self.vc_is_valid := 0;
          self.vc_error_message := __SQL_MESSAGE;
          return;
        };

        delete from HTTP_ACL where HA_LIST = self.acl_name;
        i := 1;
        arr := self.acl_list;
        foreach (any elm in arr) do
          {
            insert into HTTP_ACL (HA_LIST, HA_ORDER, HA_OBJECT, HA_CLIENT_IP, HA_FLAG, HA_RW, HA_DEST_IP, HA_RATE, HA_LIMIT)
            values (self.acl_name, i, elm[1], elm[2], elm[3], elm[4], elm[5], elm[6], elm[7]);
            i := i + 1;
          }
        commit work;

        if (i = 1)
          self.acl_name := 'HTTP';

        self.vc_redirect (sprintf ('sec_auth_serv.vspx?acl=%U', self.acl_name));
            </v:on-post>
          </v:button>
        </v:form>
      </div>
      <!-- END -->
                                          </td>
                                        </tr>
                                      </table>
                                    </td>
                                  </tr>
                                </table>
                              </td>
                            </tr>
                          </table>
                          <!-- bottom of security layout -->
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </td>
          </tr>
        </table>
        <!-- end of bottom security layout -->
      </v:form>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>

