<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<v:page name="db_repl_pub_create_page"
  decor="yacutia_decor.vspx"
  style="yacutia_style.xsl"
  vm:owner="yacutia_db_repl_page"
  doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
  fast-render="1"
  xmlns:v="http://www.openlinksw.com/vspx/"
  xmlns:vm="http://www.openlinksw.com/vspx/macro">
  <vm:pagetitle>Virtuoso HTTP Database Replication</vm:pagetitle>
  <vm:pagewrapper>
    <vm:variables>
      <v:variable name="acct" persist="1" type="varchar" default="''" />
      <v:variable name="table_qual" persist="1" type="varchar" default="''" />
      <v:variable name="error_edit_str" persist="1" type="varchar" default="''" />
      <v:variable persist="0" name="_item" type="varchar" default="''"/>
      <v:variable persist="0" name="_item_type" type="integer" default="0"/>
    </vm:variables>
    <vm:menu>
      <vm:menuitem name="publ" value="Transactional (publish)"/>
    </vm:menu>
    <vm:header caption="Conflict Resolvers for table <?V self._item ?>"/>
    <vm:pagebody vdb_check="1">
      <v:form name="create_pub_cr_frm" method="POST" type="simple">
        <v:before-data-bind>
          <v:script>
            <![CDATA[
              declare _acct varchar;
              _acct := get_keyword('acct', control.vc_page.vc_event.ve_params, '');
              if (_acct <> '')
                self.acct := _acct;
              declare _item varchar;
              _item := get_keyword('item', self.vc_page.vc_event.ve_params);
              if (_item)
                self._item := cast(deserialize(decode_base64(_item)) as varchar);
              self._item_type := atoi(get_keyword('item_type', self.vc_page.vc_event.ve_params, '0'));
            ]]>
          </v:script>
        </v:before-data-bind>
        <table class="listing" rules="groups">
          <colgroup/><colgroup/><colgroup/><colgroup/>
          <thead>
            <tr>
              <th/>
              <th/>
              <th>Type</th>
              <th>Procedure</th>
              <th>Order</th>
            </tr>
          </thead>
          <?vsp
            declare _len integer;
            _len := 0;
            for select CR_ID, CR_TABLE_NAME, CR_TYPE, CR_PROC, CR_ORDER from DB.DBA.SYS_REPL_CR where CR_TABLE_NAME = self._item order by CR_TYPE, CR_ORDER do
            {
              _len := _len + 1;
              declare _cr_proc varchar;
              _cr_proc := replace (CR_PROC, '"', '');

              http (sprintf ('<tr class="%s">', case when mod (_len, 2) then 'listing_row_odd' else 'listing_row_even' end));
          ?>
            <td class="listing_col"><input type="checkbox" name="CB_<?V CR_ID ?>"/></td>
            <td class="listing_col">
              <img src="images/icons/script_16.png" alt="Procedure" title="Procedure"/>
            </td>
            <td class="listing_col"><?V CR_TYPE ?></td>
            <td class="listing_col"><a href="db_repl_pub_cr_edit2.vspx?acct=<?V self.acct ?>&item=<?V encode_base64(serialize(self._item)) ?>&item_type=<?V self._item_type ?>&proc=<?V encode_base64(serialize(_cr_proc)) ?>&sid=<?V self.sid ?>&realm=<?V self.realm ?>"><?V _cr_proc ?></a></td>
            <td class="listing_col"><?V CR_ORDER ?></td>
          <?vsp
            http ('</tr>');
            }
            if (_len = 0)
              http ('<tr><td colspan="5" class="Atention">No conflict resolvers defined for this table</td></tr>');
          ?>
        </table>
        <div class="listing_bot_ctl_grp">
          <v:button action="simple" name="cancel1" value="Cancel">
            <v:on-post>
              <v:script>
                <![CDATA[
                  http_request_status('HTTP/1.1 302 Found');
                  http_header(sprintf('Location: db_repl_pub_edit.vspx?sid=%s&realm=%s&acct=%s\r\n', self.sid, self.realm, self.acct));
                ]]>
              </v:script>
            </v:on-post>
          </v:button>
          <v:button action="simple" name="add_conflict" value="New Resolver">
            <v:on-post>
              <v:script>
                <![CDATA[
                  http_request_status('HTTP/1.1 302 Found');
                  http_header(sprintf('Location: db_repl_pub_cr_edit.vspx?sid=%s&realm=%s&item=%s&item_type=%s\r\n', self.sid, self.realm, encode_base64(serialize(self._item)), cast(self._item_type as varchar)));
                ]]>
              </v:script>
            </v:on-post>
          </v:button>
          <?vsp
            if (_len <> 0)
            {
         ?>
          <v:button name="remove1" action="simple" value="Remove">
            <v:on-post>
              <v:script>
                <![CDATA[
                  declare _cr_id varchar;
                  declare _idx integer;
                  _idx := 0;
                  declare _state, _msg varchar;
                  while (_cr_id := adm_next_checkbox('CB_', self.vc_page.vc_event.ve_params, _idx))
                  {
                    _state := '00000';
                    _msg := '';
                    exec('delete from DB.DBA.SYS_REPL_CR where CR_ID = ?', _state, _msg, vector (_cr_id));
                    if (_state <> '00000')
                    {
                      self.error_edit_str := concat(self.error_edit_str, '<tr><td>', _msg, '</td></tr>');
                    }
                  }
                ]]>
              </v:script>
            </v:on-post>
          </v:button>
          <?vsp
            }
          ?>
        </div>
      </v:form>
      <?vsp
        if (self.error_edit_str <> '' and self.error_edit_str is not null)
          http(sprintf('<table class="warning">%s</table>', self.error_edit_str));
        self.error_edit_str := '';
      ?>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
