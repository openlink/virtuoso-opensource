<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<v:page name="databases_grants_page" decor="yacutia_decor.vspx" style="yacutia_style.xsl" fast-render="1" xmlns:v="http://www.openlinksw.com/vspx/" xmlns:vm="http://www.openlinksw.com/vspx/macro" doctype="-//W3C//DTD XHTML 1.0 Transitional//EN">
  <vm:pagetitle>Virtuoso Database Management</vm:pagetitle>
  <vm:pagewrapper>
    <vm:menu>
      <vm:menuitem value="Privileges On Object"/>
    </vm:menu>
    <vm:variables>
      <v:variable persist="0" name="name" type="varchar" default="''"/>
      <v:variable persist="0" name="type" type="integer" default="1"/>
      <v:variable persist="temp" name="err_msg" type="varchar" default="''"/>
      <v:variable persist="temp" name="row_count" type="integer" default="0"/>
    </vm:variables>
    <vm:rawheader>
      <h1 class="page_title">Privileges for <?V self.name ?></h1>
    </vm:rawheader>
    <vm:pagebody>
      <v:before-data-bind><v:script><![CDATA[
        self.name := get_keyword('name', self.vc_event.ve_params, self.name);
        if (exists(SELECT 1 FROM DB.DBA.SYS_KEYS where KEY_TABLE = self.name))
          self.type := 1;
        else
          self.type := 0;
      ]]></v:script></v:before-data-bind>
      <script language="JavaScript" src="admin_utils.js">
      </script>
      <v:data-set name="ds_indx" nrows="1024" scrollable="0" cursor-type="static" edit="0" initial-enable="1"
        sql="select U_ID, U_NAME, U_IS_ROLE from db.dba.SYS_USERS WHERE U_SQL_ENABLE = 1 order by U_NAME" >
        <v:template name="temp_ds_indx_header" type="simple" name-to-remove="table" set-to-remove="bottom">
          <table class="listing">
            <tr class="listing_header_row">
              <th>Username</th>
              <?vsp if (self.type) { ?>
                <th><input type="checkbox" name="select_all" value="Select All" onClick="selectAllCheckboxes_mask(this.form, this, 'cb_perm_select_')"/>Select</th>
                <th><input type="checkbox" name="select_all" value="Select All" onClick="selectAllCheckboxes_mask(this.form, this, 'cb_perm_insert_')"/>Insert</th>
                <th><input type="checkbox" name="select_all" value="Select All" onClick="selectAllCheckboxes_mask(this.form, this, 'cb_perm_update_')"/>Update</th>
                <th><input type="checkbox" name="select_all" value="Select All" onClick="selectAllCheckboxes_mask(this.form, this, 'cb_perm_delete_')"/>Delete</th>
              <?vsp } else { ?>
                <th><input type="checkbox" name="select_all" value="Select All" onClick="selectAllCheckboxes_mask(this.form, this, 'cb_perm_execute_')"/>Execute</th>
              <?vsp } ?>
            </tr>
          </table>
        </v:template>
        <v:template name="temp_ds_indx_repeat" type="repeat">
          <v:template name="temp_ds_indx_browse" type="browse" name-to-remove="table" set-to-remove="both">
            <table>
              <?vsp self.row_count := self.row_count + 1;
                    http (sprintf ('<tr class="%s">', case when mod (self.row_count, 2) then 'listing_row_odd' else 'listing_row_even' end));
              ?>
                <?vsp
                  declare _uid, _dg integer;
                  declare _indg varchar;
                  declare inh any;
                  _uid := (control as vspx_row_template).te_rowset[0];

                  inh := vector ();
                  GET_INHERITED_GRANTS (_uid, _uid, inh);

                  inh := vector_concat (vector (_uid), inh);
                  _dg  := direct_grants(self.name,_uid);
                  _indg := indirect_grants(self.name,inh);
                ?>
                <td class="listing_col" nowrap="1">
                  <?vsp if ((control as vspx_row_template).te_rowset[2] = 1) { ?>
                    <img src="images/icons/group_16.png"
                      alt="Group"
                      title="Group"/>
                  <?vsp } else { ?>
                    <img src="images/icons/user_16.png"
                      alt="User"
                      title="User"/>
                  <?vsp }; ?>
                  <?V (control as vspx_row_template).te_rowset[1] ?>
                </td>

              <?vsp if (self.type) { ?>

                <?vsp http(sprintf('<td class="listing_col" style="background-color:%s">',
                      case when chr(_indg[0]) <> '-' then 'lightgreen' else '' end)); ?>
                <?vsp
                   http( sprintf('<input type="checkbox" name="cb_perm_select_%d" value="1" %s/>',
                      _uid, case when 1 = bit_and(1, _dg) then 'checked="1"' else '' end ));
                ?>
                <?vsp http('</td>'); ?>

                <?vsp http(sprintf('<td class="listing_col" style="background-color:%s">',
                      case when chr(_indg[2]) <> '-' then 'lightgreen' else '' end)); ?>
                    <?vsp
                       http( sprintf('<input type="checkbox" name="cb_perm_insert_%d" value="1" %s/>',
		         _uid, case when 4 = bit_and(4, _dg) then 'checked="1"' else '' end ));
                    ?>
                <?vsp http('</td>'); ?>

                <?vsp http(sprintf('<td class="listing_col" style="background-color:%s">',
                      case when chr(_indg[1]) <> '-' then 'lightgreen' else '' end)); ?>
                    <?vsp
                       http( sprintf('<input type="checkbox" name="cb_perm_update_%d" value="1" %s/>',
		         _uid, case when 2 = bit_and(2, _dg) then 'checked="1"' else '' end ));
                    ?>
                <?vsp http('</td>'); ?>

                <?vsp http(sprintf('<td class="listing_col" style="background-color:%s">',
                      case when chr(_indg[3]) <> '-' then 'lightgreen' else '' end)); ?>
                    <?vsp
                       http( sprintf('<input type="checkbox" name="cb_perm_delete_%d" value="1" %s/>',
		         _uid, case when 8 = bit_and(8, _dg) then 'checked="1"' else '' end ));
                    ?>
                <?vsp http('</td>'); ?>

              <?vsp } else { ?>

                <?vsp http(sprintf('<td class="listing_col" style="background-color:%s">',
                      case when chr(_indg[5]) <> '-' then 'lightgreen' else '' end)); ?>
                    <?vsp
                       http( sprintf('<input type="checkbox" name="cb_perm_execute_%d" value="1" %s/>',
		         _uid, case when 32 = bit_and(32, _dg) then 'checked="1"' else '' end ));
                    ?>
                <?vsp http('</td>'); ?>

              <?vsp }; ?>

              <?vsp http ('</tr>'); ?>
            </table>
          </v:template>
        </v:template>
        <v:template name="temp_ds_indx_footer" type="simple" name-to-remove="table" set-to-remove="top">
          <table><tr>
  			    <td colspan="5" align="center"  class="listing_col_action">
  			      <vm:ds-navigation data-set="ds_indx"/>
            </td>
          </tr></table>
          <div class="listing_bot_ctl_grp">
            <v:button action="simple" name="db_grants_cancel" value="Cancel" >
              <v:on-post><v:script><![CDATA[
                http_request_status ('HTTP/1.1 302 Found');
                http_header (sprintf('Location: databases.vspx?sid=%s&realm=%s\r\n',self.sid ,self.realm));
              ]]></v:script></v:on-post>
            </v:button>
            <v:button action="simple" name="save" value="Save Changes">
              <v:on-post>
                <![CDATA[
			  declare params any;
			  params := self.vc_event.ve_params;
        declare mtd, dta any;
        declare dg int;
        declare priv_grant, priv_revoke varchar;

        for(select cast(U_ID as varchar) U_ID, U_NAME,direct_grants(self.name,U_ID) dgc from db.dba.SYS_USERS WHERE U_SQL_ENABLE = 1 order by U_NAME)do
        {
          priv_grant := ''; priv_revoke := '';

          dg := cast( get_keyword( 'cb_perm_select_'||U_ID, params, '0') as int);
          if( not(1 = bit_and(1, dgc)) and dg <> 0 )
            priv_grant := concat( priv_grant, 'SELECT,');
          else if(1 = bit_and(1, dgc) and dg = 0 )
            priv_revoke := concat( priv_revoke, 'SELECT,');

          dg := cast( get_keyword( 'cb_perm_insert_'||U_ID, params, '0') as int);
          if( not(4 = bit_and(4, dgc)) and dg <> 0 )
            priv_grant := concat( priv_grant, 'INSERT,');
          else if(4 = bit_and(4, dgc) and dg = 0 )
            priv_revoke := concat( priv_revoke, 'INSERT,');

          dg := cast( get_keyword( 'cb_perm_update_'||U_ID, params, '0') as int);
          if( not(2 = bit_and(2, dgc)) and dg <> 0 )
            priv_grant := concat( priv_grant, 'UPDATE,');
          else if(2 = bit_and(2, dgc) and dg = 0 )
            priv_revoke := concat( priv_revoke, 'UPDATE,');

          dg := cast( get_keyword( 'cb_perm_delete_'||U_ID, params, '0') as int);
          if( not(8 = bit_and(8, dgc)) and dg <> 0 )
            priv_grant := concat( priv_grant, 'DELETE,');
          else if(8 = bit_and(8, dgc) and dg = 0 )
            priv_revoke := concat( priv_revoke, 'DELETE,');

          dg := cast( get_keyword( 'cb_perm_execute_'||U_ID, params, '0') as int);
          if( not(32 = bit_and(32, dgc)) and dg <> 0 )
            priv_grant := concat( priv_grant, 'EXECUTE,');
          else if(32 = bit_and(32, dgc) and dg = 0 )
            priv_revoke := concat( priv_revoke, 'EXECUTE,');


          if( length(priv_revoke) > 0 ) {
            exec( 'REVOKE ' || rtrim(priv_revoke,',') || ' ON ' || Y_SQL_ESC_NAME (self.name) || ' FROM "' || U_NAME || '"',
                   null, null, vector(), 0, mtd, dta);
          }
          if( length(priv_grant) > 0 ) {
            exec( 'GRANT ' || rtrim(priv_grant,',') || ' ON ' || Y_SQL_ESC_NAME (self.name) || ' TO "' || U_NAME || '"',
                   null, null, vector(), 0, mtd, dta);
          }
        }
        http_request_status ('HTTP/1.1 302 Found');
        http_header( sprintf('Location: databases.vspx?page=3&sid=%s&realm=%s\r\n',self.sid ,self.realm));
                ]]>
              </v:on-post>
            </v:button>
          </div>
        </v:template>
      </v:data-set>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
