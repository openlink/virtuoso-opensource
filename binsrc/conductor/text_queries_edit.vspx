<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<v:page name="trig2_edit_page" decor="yacutia_decor.vspx" style="yacutia_style.xsl" fast-render="1" xmlns:v="http://www.openlinksw.com/vspx/" xmlns:vm="http://www.openlinksw.com/vspx/macro">
  <vm:pagetitle>WebDAV Content Management</vm:pagetitle>
  <vm:pagewrapper>
    <vm:variables>
      <v:variable persist="0" name="ename" type="varchar" default="''"/>
      <v:variable persist="1" name="error_str1" type="varchar" default="''"/>
      <v:variable persist="1" name="query_type" type="varchar" default="''"/>
    </vm:variables>
    <vm:menu>
      <vm:menuitem name="cont_man"  value="Repository" type="hot" url="cont_management.vspx"/>
      <vm:menuitem name="robot_control_url" type="hot" value="Content Imports" url="robot_control.vspx"/>
      <vm:menuitem name="txt_trig" value="Text Triggers"/>
      <vm:menu-common value="Web server DAV repository and Web site hosting control"/>
    </vm:menu>
    <vm:header caption="WebDAV Indexing">
      <td class="SubInfo">
        <vm:url name="ind_mode_ref" format="%s" value="--'Indexing Mode'" url="--'text_triggers.vspx'"/>
      </td>
      <td class="SubInfo">
        <vm:url name="search_tr_ref" format="%s" value="--'Search'" url="--'text_search.vspx'"/>
      </td>
      <td class="SubInfo">
        <vm:url name="trig_que_ref" format="%s" value="--'Trigger Queries'" url="--'text_queries.vspx'"/>
      </td>
      <td class="SubInfo">
        <vm:url name="trigger_result_ref" format="%s" value="--'Trigger Results'" url="--'text_results.vspx'"/>
      </td>
    </vm:header>
    <vm:pagebody>
      <table width="98%" border="0" cellspacing="0" cellpadding="5" class="MainSubData" xmlns:xhtml="http://www.w3.org/1999/xhtml">
        <v:form name="event_form" type="simple" method="POST" action="text_queies_edit_edit.vspx">
          <input type="hidden" name="name" value="<?= get_keyword('name', self.vc_page.vc_event.ve_params) ?>"/>
          <input type="hidden" name="mode" value="<?= get_keyword('mode', self.vc_page.vc_event.ve_params) ?>"/>
          <v:on-post>
            <v:script>
              <![CDATA[
                declare i, cnt, exist, u_ident, g_name, inter integer;
                declare tmp, val, name, start_str, sql_str varchar;
                if (get_keyword('cancel', params) <> '' or self.vc_is_valid = 0)
                {
                  success:
                  http_request_status ('HTTP/1.1 302 Found');
                  http_header(sprintf('Location: sys_queues.vspx?sid=%s&realm=%s\r\n', self.sid, self.realm));
                  return;
                }

                goto success;
              ]]>
            </v:script>
          </v:on-post>
         <tr align="left">
           <td width="20%" align="left" valign="left">Comment</td>
           <td valign="left">
             <v:text name="name1" xhtml_style="width:400">
               <v:before-data-bind>
                 <v:script>
                   <![CDATA[
                     if (get_keyword('mode', params) = 'edit')
                     {
                       control.ufl_value := self.ename;
                       control.tf_style :=3;
                       control.vc_data_bound := 1;
                     }
                     else
                     {
                       declare ufn varchar;
                       ufn := get_keyword('name', params);
                       if (ufn is not NULL)
                       {
                         control.ufl_value:= ufn;
                         control.vc_data_bound := 1;
                       }
                     }
                   ]]>
                 </v:script>
               </v:before-data-bind>
             </v:text>
           </td>
         </tr>
         <tr align="left">
           <td width="20%" align="left" valign="top">Query type</td>
           <td valign="top">
              <select name="CB_ON">
                <?vsp
                  declare checked1 varchar;
                  checked1 := '';
                  if (self.query_type = 'checked')
                    checked1 := 'SELECTED';
                  http(sprintf('<option value="ON" %s>TEXT</option>', checked1));
                  checked1 := '';
                  if (self.query_type <> 'checked')
                    checked1 := 'SELECTED';
                  http(sprintf('<option value="OFF" %s>XPATH</option>', checked1));
                ?>
              </select>
           </td>
         </tr>
         <tr align="left">
           <td width="20%" align="left" valign="top">Query text</td>
           <td valign="top">
             <v:text name="interval_value" xhtml_style="width:400">
               <v:before-data-bind>
                 <v:script>
                   <![CDATA[
                     declare ufn integer;
                     if (get_keyword('mode', params) = 'edit')
                     {
                       select se_interval into ufn from SYS_SCHEDULED_EVENT where SE_NAME = self.ename;
                       control.ufl_value := cast(ufn as varchar);
                       control.vc_data_bound := 1;
                     }
                     else
                     {
                       declare pwd varchar;
                       pwd := get_keyword('interval', params);
                       if (pwd is not NULL)
                       {
                         control.ufl_value:= pwd;
                         control.vc_data_bound := 1;
                       }
                     }
                   ]]>
                 </v:script>
               </v:before-data-bind>
             </v:text>
           </td>
         </tr>
         <tr align="left">
           <td width="20%" align="left" valign="top">Notify by e-mail</td>
           <td valign="top">
             <v:text name="interval_value" xhtml_style="width:400">
               <v:before-data-bind>
                 <v:script>
                   <![CDATA[
                     declare ufn integer;
                     if (get_keyword('mode', params) = 'edit')
                     {
                       select se_interval into ufn from SYS_SCHEDULED_EVENT where SE_NAME = self.ename;
                       control.ufl_value := cast(ufn as varchar);
                       control.vc_data_bound := 1;
                     }
                     else
                     {
                       declare pwd varchar;
                       pwd := get_keyword('interval', params);
                       if (pwd is not NULL)
                       {
                         control.ufl_value:= pwd;
                         control.vc_data_bound := 1;
                       }
                     }
                   ]]>
                 </v:script>
               </v:before-data-bind>
             </v:text>
           </td>
         </tr>
         <tr align="left">
           <td width="20%" align="left" valign="top">Initialize hits</td>
           <td CLASS="geninput">
            <input type="radio" value="yes" name="rebuld">Yes<input type="radio" value="no" name="rebuld">No</td>
  <td>&nbsp;</td></tr>

         <tr align="left">
           <td/>
           <td colspan="3">
             <v:button action="submit" name="cancel" value="Cancel" />
             <?vsp
               if (get_keyword('mode', self.vc_page.vc_event.ve_params) is NULL or get_keyword('mode', self.vc_page.vc_event.ve_params) <> 'edit')
               {
             ?>
             <input type="reset" name="Submit2" value="Reset"/>
             <?vsp
               }
             ?>
             <v:button action="submit" name="save" value="Save"/>
           </td>
         </tr>
         <?vsp
           if (self.error_str1 <> '')
           {
             http(sprintf('<tr><td colspan="3"></td>%s</tr>', self.error_str1));
             self.error_str1 := '';
           }
         ?>
       </v:form>
      </table>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
