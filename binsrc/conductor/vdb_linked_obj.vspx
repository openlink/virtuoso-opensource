<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="databases"
        decor="yacutia_decor.vspx"
        style="yacutia_style.xsl"
        fast-render="1"
        doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
        xmlns:v="http://www.openlinksw.com/vspx/"
        xmlns:vm="http://www.openlinksw.com/vspx/macro">
  <vm:pagetitle>Virtuoso External Datasource Management</vm:pagetitle>
  <vm:pagewrapper>
    <vm:scripts>
      <?vsp
        http ('<script language="JavaScript" type="text/javascript" src="admin_utils.js"></script>');
      ?>
    </vm:scripts>

    <vm:variables>
      <v:variable name="res_current_dsn" type="varchar" default="'%'" persist="0"/>
      <v:variable name="dsn_list" type="any" default="null" persist="0"/>
      <v:variable name="linked_objects" persist="0" type="any" default="null" />
      <v:variable name="to_unlink_objects" persist="1" type="any" default="null" />
      <v:variable name="res_tables_flag" type="integer" default="1" persist="0"/>
      <v:variable name="res_views_flag" type="integer" default="0" persist="0"/>
      <v:variable name="res_procs_flag" type="integer" default="0" persist="0"/>
      <v:variable name="res_name_mask" type="varchar" default="null" persist="0"/>
      <v:variable persist="1" name="vdb_object_errs" type="any" default="null"/>
    </vm:variables>
    <vm:menu>
      <vm:menuitem value="External Data Sources"/>
    </vm:menu>
    <vm:header caption="External Data Sources">
    </vm:header>
    <vm:pagebody vdb_check="1">
      <!--
      <vm:help id="vdb_linked_obj" sect=""/>
      -->
      <table border="0" width="100%" height="100%" cellpadding="0" cellspacing="0">
        <tr valign='top'>
          <td>
            <table cellpadding='10' cellspacing='0' border='0' width='100%'>
              <tr>
                <td>
                  <table cellpadding="0" cellspacing="0" border="0">
                    <tr>
                      <td class="page_tab_selected" align="center">External Linked Objects</td>
                      <td class="page_tab" align="center">
                        <v:url name="b_url31" value="Data Sources" url="vdb_conn_dsn.vspx" xhtml_class="uddi"/>
                      </td>
                      <td class="page_tab" align="center">
                        <v:url name="b_url32" url="vdb_config_dsn.vspx" value="Configure Data Sources" xhtml_class="uddi"/>
                      </td>
                      <td class="page_tab_empty" align="center" width="100%">
                        &amp;nbsp;
                      </td>
                    </tr>
                  </table>
                  <table class="tab_page">
                    <tr>
                      <td valign="top">
                      <!-- MAIN AREA -->
                        <v:template name="vdb_dsn_main_template" type="simple" >
                          <v:before-data-bind>
                            <![CDATA[
                              if (self.dsn_list is not null)
                                return;

                              declare dsn_list any;
                              dsn_list := vector ();
                              for select DS_DSN from DB.DBA.SYS_DATA_SOURCE order by 1 do
                              {
                                dsn_list := vector_concat (dsn_list, vector (DS_DSN));
                              }
                              self.dsn_list := dsn_list;
                            ]]>
                          </v:before-data-bind>
                          <v:before-render>
                            <!-- Produce linked objects list -->
                            <![CDATA[
                              declare vec, dsn_tmp, l_tables, l_views, l_procs, lobj any;
                              declare n, len, p, p1 integer;
                              declare ds_name varchar;

                              lobj := vector ();
                              if (self.res_current_dsn = '%')
                              {
                                dsn_tmp := self.dsn_list;
                              }
                              else
                              {
                                dsn_tmp := vector (self.res_current_dsn);
                              }

                              len := length (dsn_tmp);
                              for (n := 0; n < len; n := n + 1)
                              {
                                ds_name := dsn_tmp[n];
                                l_tables := vector ();
                                l_views := vector ();
                                l_procs :=  vector ();

                                for select RT_NAME as lname, RT_REMOTE_NAME as rname
                                      from DB.DBA.SYS_REMOTE_TABLE
                                      where RT_DSN = ds_name do
                                {
                                  l_tables := vector_concat (l_tables, vector(lname, rname));
                                }

                                for select P_NAME, RP_REMOTE_NAME
                                      from DB.DBA.SYS_PROCEDURES, DB.DBA.SYS_REMOTE_PROCEDURES
                                     where P_NAME = RP_NAME and RP_DSN = ds_name do
                                {
                                  l_procs :=  vector_concat (l_procs, vector (P_NAME, RP_REMOTE_NAME));
                                }

                                if (length (l_tables) > 0 or length (l_views) > 0  or length (l_procs) > 0)
                                  lobj := vector_concat (lobj, vector (ds_name, l_tables, l_views, l_procs));
                              }
                              self.linked_objects := lobj;
                            ]]>
                          </v:before-render>
                          <v:form name="res_filter_form" type="simple" method="POST" action="">
                            <v:on-post>
                              <![CDATA[
                                self.res_current_dsn := get_keyword ('res_dsn_list_control', params);
                                self.res_name_mask :=  get_keyword ('res_mask_of_name', params);
                                if (get_keyword ('res_tables_en', params) is not null)
                                  self.res_tables_flag := 1;
                                else
                                  self.res_tables_flag := 0;

                                if (get_keyword ('res_views_en', params) is not null)
                                  self.res_views_flag := 1;
                                else
                                  self.res_views_flag := 0;

                                if (get_keyword ('res_procs_en', params) is not null)
                                  self.res_procs_flag := 1;
                                else
                                  self.res_procs_flag := 0;
                              ]]>
                            </v:on-post>

                            <table class="ctl_grp">
                              <tr>
                                <td>Data Source</td>
                                <td>
                                  <v:select-list name="res_dsn_list_control">
                                    <v:after-data-bind>
                                      <![CDATA[
                                        declare i, len integer;
                                        declare dsns, items, vals varchar;

                                        dsns := self.dsn_list;
                                        len := length (dsns);
                                        items  := make_array (len + 1, 'any');
                                        vals := make_array (len + 1, 'any');

                                        items [0] := 'All Data Sources';
                                        vals [0] := '%';
                                        for (i := 0; i < len; i := i + 1)
                                        {
                                          items  [i+1] := dsns[i];
                                          vals [i+1] := dsns[i];
                                        }
                                        control.vsl_items := items;
                                        control.vsl_item_values := vals;
                                        control.ufl_value := self.res_current_dsn;
                                        control.vs_set_selected ();
                                      ]]>
                                    </v:after-data-bind>
                                  </v:select-list>
                                </td>
                                <td>
                                  <v:check-box name="res_tables_en"
                                               initial-checked="--self.res_tables_flag"
                                               value="1"
                                               xhtml_id="res_tables_en"/>
                                </td>
                                <td>
                                  <label for="res_tables_en">Tables</label>
                                </td>
                              </tr>
                              <tr>
                                <td><label for="name_t">Object Name</label></td>
                                <td><input type="text" name="flt_name_t" size="15" xhtml_id="name_t"/></td>
                                <td>
                                  <v:check-box name="res_views_en"
                                               initial-checked="--self.res_views_flag"
                                               value="1"
                                               xhtml_id="res_views_en"/>
                                </td>
                                <td><label for="res_views_en">Views</label></td>
                                <td><v:button action="simple" name="res_filter_clear" value="Clear" /></td>
                              </tr>
                              <tr>
                                <td/>
                                <td/>
                                <td>
                                  <v:check-box name="res_procs_en"
                                               initial-checked="--self.res_procs_flag"
                                               value="1"
                                               xhtml_id="res_procs_en"/></td>
                                <td><label for="res_procs_en">Stored Procedures</label></td>
                                <td><v:button action="simple" name="res_filter_apply" value="Apply" /></td>
                              </tr>
                            </table>
                          </v:form>

                          <v:form name="res_linked_form" type="simple" method="POST" action=""> <!-- linked tables form -->
                            <v:on-post>
                              <![CDATA[
                                declare n, len, obj, objects, i, n integer;
                                declare lname, rname, _data, ds_name, _param varchar;
                                declare l_objects, ul_tables , ul_views, ul_procs, all_tbs any;
                                declare linked_objects, to_unlink_objects any;
                                declare tb_cnt, v_cnt, p_cnt int;

                                to_unlink_objects := vector ();
                                all_tbs := vector ();
                                tb_cnt := v_cnt := p_cnt := 0;
                                linked_objects := self.linked_objects;
                                obj :=  0;
                                objects := length (linked_objects);
                                while (obj < objects)
                                {
                                  ul_tables := vector ();
                                  ul_views := vector ();
                                  ul_procs := vector ();
                                  ds_name := aref (linked_objects, obj);

                                  -- tables
                                  l_objects  := aref (linked_objects, obj + 1);
                                  n := length (l_objects);
                                  for (i := 0; i < n; i := i + 2)
                                  {
                                    _param := get_keyword (sprintf ('cbt_%s_%d',ds_name, i), params, '');

                                    if (_param <> '')
                                    {
                                      _data := decode_base64(_param);
                                      ul_tables := vector_concat (ul_tables, vector (_data, aref (l_objects, i + 1)));
                                      all_tbs := vector_concat (all_tbs, vector (_data));
                                      tb_cnt := tb_cnt + 1;
                                    }
                                  }

                                  -- views
                                  l_objects := aref (linked_objects, obj + 2);
                                  n := length (l_objects);
                                  for (i := 0; i < n; i := i + 2)
                                  {
                                    _param := get_keyword (sprintf ('cbv_%s_%d',ds_name, i), params,'');
                                    if (_param <> '')
                                    {
                                      _data := decode_base64 (_param);
                                      ul_views := vector_concat (ul_views, vector (_data, aref (l_objects, i + 1)));
                                      v_cnt := v_cnt + 1;
                                    }
                                  }

                                  -- procs
                                  l_objects := aref (linked_objects, obj + 3);
                                  n := length (l_objects);
                                  for (i := 0; i < n; i := i + 2)
                                  {
                                    _param := get_keyword (sprintf ('cbp_%s_%d', ds_name, i), params,'');
                                    if (_param <> '')
                                    {
                                      _data := decode_base64 (_param);
                                      ul_procs := vector_concat (ul_procs, vector (_data, aref (l_objects, i + 1)));
                                      p_cnt := p_cnt + 1;
                                    }
                                  }

                                  to_unlink_objects := vector_concat (to_unlink_objects, vector (ds_name, ul_tables, ul_views, ul_procs));
                                  obj := obj + 4;
                                }
                                if ((tb_cnt  or v_cnt or p_cnt) and e.ve_button.vc_name like 'res_unlink_apply_')
                                {
                                  self.to_unlink_objects := to_unlink_objects;
                                  self.vc_redirect ('vdb_unlink_obj.vspx');
                                }
                                else if ((p_cnt or v_cnt) and e.ve_button.vc_name like 'refr_btn_')
                                {
                                  self.vc_is_valid := 0;
                                  self.vc_error_message := 'Refreshing statistics is supported for tables only.';
                                }
                                else if (tb_cnt and e.ve_button.vc_name like 'refr_btn_')
                                {
                                  declare i, l int;
                                  l := length (all_tbs);
                                  for (i := 0; i < l; i := i + 1)
                                  {
                                    SYS_STAT_ANALYZE (all_tbs[i], 5, 0);
                                    commit work;
                                  }
                                }
                                else if ((tb_cnt  or v_cnt or p_cnt) and e.ve_button.vc_name like 'res_export_apply_')
                                {
                                  self.vc_redirect (sprintf ('vdb_export.vspx?tblist=%U', encode_base64 (serialize (all_tbs))));
                                }

                                return;
                              ]]>
                            </v:on-post>
                            <div class="listing_top_ctl_grp">
                              <v:button action="simple" style="image" name="link_obj1"
                                value="images/icons/link_16.png"
                                xhtml_alt="Link objects"
                                xhtml_title="Link objects"
                                text="&nbsp;Link objects"
                                url="vdb_conn_dsn.vspx"/>
                              <v:button action="simple" style="image" name="refr_btn1"
                                value="images/icons/ref_16.png"
                                xhtml_alt="Refresh selected"
                                xhtml_title="Refresh selected"
                                xhtml_hspace="3"
                                text="Refresh selected"
                                >
                                <v:before-render>
                                 if (length (self.linked_objects))
                                   control.vc_enabled := 1;
                                 else
                                   control.vc_enabled := 0;
                                </v:before-render>
                              </v:button>
                              <v:button action="simple" style="image" name="res_unlink_apply1"
                                value="images/icons/link_16.png"
                                xhtml_alt="Unlink selected"
                                xhtml_title="Unlink selected"
                                text="&nbsp;Unlink selected"
                              >
                                <v:before-render>
                                 if (length (self.linked_objects))
                                   control.vc_enabled := 1;
                                 else
                                   control.vc_enabled := 0;
                                </v:before-render>
                              </v:button>
                              <v:button action="simple" style="image" name="res_export_apply1"
                                value="images/icons/script_16.png"
                                xhtml_alt="Export selected"
                                xhtml_title="Export selected"
                                text="&nbsp;Export selected"
                              >
                                <v:before-render>
                                 if (length (self.linked_objects))
                                   control.vc_enabled := 1;
                                 else
                                   control.vc_enabled := 0;
                                </v:before-render>
                              </v:button>
                            </div>
                            <div class="scroll_area">

                              <table class="listing">
                                <tr class="listing_header_row">
                                  <?vsp
                                    if (length (self.linked_objects))
                                    {
                                  ?>
                                  <th class="checkbox">
                                    <input type="checkbox" name="select_all" value="Select All" onClick="selectAllCheckboxes(this.form, this)"/>
                                  </th>
                                  <th width="1px">Type</th>
                                  <th width="33%">Local name</th>
                                  <th width="33%">DSN</th>
                                  <th width="33%">Remote name</th>
                                  <th class="action">Action</th>
                                  <?vsp
                                    }
                                    else
                                    {
                                  ?>
                                  <td colspan="6">
                                    There are no objects of selected types linked from the Data Source selected.
                                  </td>
                                  <?vsp
                                    }
                                  ?>
                                </tr>
                                <tbody>
                                  <?vsp
                                    declare n, len, obj, objects integer;
                                    declare lname, rname varchar;
                                    declare l_objects, linked_objects any;
                                    declare l_dsn varchar;

                                    linked_objects := self.linked_objects;
                                    objects := length (linked_objects);
                                    for (obj := 0; obj < objects; obj := obj + 4)
                                    {
                                      if ((length (aref (linked_objects, obj + 1)) > 0 and self.res_tables_flag = 1) or
                                          (length (aref (linked_objects, obj + 2)) > 0 and self.res_views_flag = 1) or
                                          (length (aref (linked_objects, obj + 3)) > 0 and self.res_procs_flag = 1))
                                        l_dsn := aref (linked_objects, obj);

                                      -- tables
                                      if (self.res_tables_flag = 1)
                                      {
                                        l_objects := aref (linked_objects, obj + 1);
                                        len := length (l_objects);
                                        for (n := 0; n < len; n := n + 2)
                                        {
                                          lname := aref (l_objects, n);
                                          rname := aref (l_objects, n + 1);

                                          http ('<tr>');
                                          http (sprintf ('<td class="checkbox"><input type="checkbox" name="cbt_%s_%d" value="%s" border="0" /></td>',
                                            aref (linked_objects, obj), n, encode_base64 (lname)));
                                          http ('<td><img src="images/icons/table_16.png" alt="Table" title="Table"/></td>');
                                          http (sprintf ('<td><a href="#" class="" onclick="javascript: window.open (\'isql.vspx?sid=%s&realm=%s&gen_table_sel=%s\', \'browse_button1_window\', \'scrollbars=yes,resizable=yes,status=no,menubar=no,height=600,width=800\')">%s</a></td>',
                                            self.sid ,self.realm , lname, lname));
                                          http (sprintf ('<td>%s</td>', l_dsn));
                                          http (sprintf ('<td>%s</td>', rname));
                                          http (sprintf ('<td class="action"><a href="vdb_unlink_obj.vspx?sid=%s&realm=%s&mode=unlink_table&rname=%s&lname=%s&dsn=%s"><img src="images/icons/link_16.png" border="0" />&nbsp;Unlink</a></td>',
                                            self.sid ,self.realm, rname, lname, aref (linked_objects, obj)));
                                          http ('</tr>');
                                        }
                                      }

                                      if (self.res_procs_flag = 1)
                                      {
                                        l_objects :=  aref (linked_objects, obj + 3); -- procedures
                                        len := length (l_objects);
                                        for (n := 0; n < len; n := n + 2)
                                        {
                                          lname := aref (l_objects, n);
                                          rname := aref (l_objects, n + 1);

                                          http ('<tr>');
                                          http (sprintf ('<td style="padding: 2px;"><input type="checkbox" name="cbp_%s_%d" value="%s" border="0" /></td>',
                                                         aref (linked_objects, obj), n, encode_base64 (lname)));
                                          http ('<td><img src="images/icons/script_16.png" alt="Procedure" title="Stored Procedure"/></td>');
                                          http (sprintf ('<td><a href="#" class="" onclick="javascript: window.open (\'isql.vspx?sid=%s&realm=%s&gen_proc_sel=%s\', \'browse_button1_window\', \'scrollbars=yes,resizable=yes,status=no,menubar=no,height=600,width=800\')">%s</a></td>',
                                                         self.sid ,self.realm , lname, lname));
                                          http (sprintf ('<td>%s</td>', l_dsn));
                                          http (sprintf ('<td>%s</td>', rname));
                                          http (sprintf ('<td nowrap="nowrap" class="listing_col_action"><a href="vdb_unlink_obj.vspx?sid=%s&realm=%s&mode=unlink_proc&rname=%s&lname=%s&dsn=%s"><img src="images/icons/link_16.png" border="0" />&nbsp;Unlink</a></td>',
                                                         self.sid ,self.realm, rname, lname, aref (linked_objects, obj)));
                                          http('</tr>');
                                        }
                                      }
                                    }
                                  ?>
                                  <tr>
                                    <td colspan="6">&amp;nbsp;</td>
                                  </tr>
                                </tbody>
                              </table>
                            </div>
                            <div class="listing_bot_ctl_grp">
                              <v:button action="simple" style="image" name="link_obj2"
                                value="images/icons/link_16.png"
                                xhtml_alt="Link objects"
                                xhtml_title="Link objects"
                                text="&nbsp;Link objects"
                                url="vdb_conn_dsn.vspx"/>

                              <v:button action="simple" style="image" name="refr_btn2"
                                value="images/icons/ref_16.png"
                                xhtml_alt="Refresh selected"
                                xhtml_title="Refresh selected"
                                xhtml_hspace="3"
                                text="Refresh selected"
                              >
                                <v:before-render>
                                 if (length (self.linked_objects))
                                   control.vc_enabled := 1;
                                 else
                                   control.vc_enabled := 0;
                                </v:before-render>
                              </v:button>

                              <v:button action="simple" style="image" name="res_unlink_apply2"
                                value="images/icons/link_16.png"
                                xhtml_alt="Unlink selected"
                                xhtml_title="Unlink selected"
                                text="&nbsp;Unlink selected"
                              >
                                <v:before-render>
                                 if (length (self.linked_objects))
                                   control.vc_enabled := 1;
                                 else
                                   control.vc_enabled := 0;
                               </v:before-render>
                              </v:button>

                              <v:button action="simple" style="image" name="res_export_apply2"
                                value="images/icons/script_16.png"
                                xhtml_alt="Export selected"
                                xhtml_title="Export selected"
                                text="&nbsp;Export selected"
                              >
                                <v:before-render>
                                 if (length (self.linked_objects))
                                   control.vc_enabled := 1;
                                 else
                                   control.vc_enabled := 0;
                                </v:before-render>
                              </v:button>
                            </div>
                          </v:form>
                        </v:template>
                        <!-- END -->
                      </td>
                    </tr>
                  </table>
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
