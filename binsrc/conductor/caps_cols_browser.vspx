<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="caps_browser_page" decor="yacutia_decor.vspx" style="yacutia_style.xsl" vm:owner="yacutia_grants_page"  fast-render="1" xmlns:v="http://www.openlinksw.com/vspx/" xmlns:vm="http://www.openlinksw.com/vspx/macro" doctype="-//W3C//DTD XHTML 1.0 Transitional//EN">
  <vm:pagetitle>Virtuoso system User Accounts</vm:pagetitle>
  <vm:pagewrapper>
    <vm:variables>
      <v:variable persist="0" name="user_name" type="varchar" default="''"/>
      <v:variable persist="0" name="table_name" type="varchar" default="''"/>
      <v:variable persist="0" name="user_caps" type="any" default="NULL"/>
    </vm:variables>
    <vm:menu>
      <vm:menuitem value="Virtuoso Account Management"/>
    </vm:menu>
    <vm:rawheader>
      <h1 class="page_title">Edit Column Grants on <?V self.table_name ?> for User <?V self.user_name ?></h1>
    </vm:rawheader>
    <vm:pagebody>
      <v:before-data-bind>
        <![CDATA[
          if (not e.ve_is_post)
          {
            self.user_name := get_keyword( 'user_name', self.vc_event.ve_params, self.user_name);
            self.table_name := get_keyword( 'table_name', self.vc_event.ve_params, self.table_name);
          }
          declare inh any;
          declare user_ident integer;

          select U_ID into user_ident from SYS_USERS where U_NAME = self.user_name;
          inh := vector();
          GET_INHERITED_GRANTS (user_ident, user_ident, inh);
          inh := vector_concat (vector(user_ident), inh);

          self.user_caps := vector();
          for select \COLUMN as col_name from SYS_COLS where \TABLE= self.table_name do
          {
            self.user_caps := vector_concat (self.user_caps,
                                vector (vector( 1, col_name,
                                        direct_grants( self.table_name, user_ident, col_name ),
                                        indirect_grants( self.table_name, inh, col_name ) ) ) );
          }
        ]]>
      </v:before-data-bind>
      <table border="0" width="100%" height="100%" cellpadding="10" cellspacing="0">
        <tr valign='top'>
          <td>
            <table cellpadding="0" cellspacing="0" border="0">
              <tr>
                <td class="page_tab" align="center">
                  <v:url name="b_url31" value="--'Users'" format="%s" url="--'accounts_page.vspx?page=1'" xhtml_class="uddi"/>
                </td>
                <td class="page_tab" align="center">
                  <v:url name="b_url32" value="--'Roles'" format="%s" url="--'accounts_page.vspx?page=2'" xhtml_class="uddi"/>
                </td>
                <td class="page_tab_selected" align="center">
                  <v:url name="b_url14" value="--'Grants'" format="%s" url="--'accounts_page.vspx?page=3'" xhtml_class="uddi"/>
                </td>
                <td class="page_tab" align="center">
                  <v:url name="b_url15" value="--'LDAP Import'" format="%s" url="--'accounts_page.vspx?page=4'" xhtml_class="uddi"/>
                </td>
                <td class="page_tab" align="center">
                  <v:url name="b_url15" value="--'LDAP Servers'" format="%s" url="--'accounts_page.vspx?page=5'" xhtml_class="uddi"/>
                </td>
                <td class="page_tab_empty" align="center" width="100%">
                  &nbsp;
                </td>
              </tr>
            </table>
            <table class="tab_page">
              <tr>
                <td valign="top">
                  <br />
                  <v:form name="caps_column_rows_form" type="simple" method="POST" action="caps_cols_browser.vspx">
                    <table class="listing" width="100%" BORDER="0" bordercolor="0" CELLPADDING="3" CELLSPACING="0" rules="groups">
                      <thead>
                        <tr class="listing_header_row">
                          <th>Column Name</th>
                          <th>Select</th>
                          <th>Update</th>
                        </tr>
                      </thead>
                      <?vsp
                        if (length (self.user_caps) = 0)
                        {
                      ?>
                      <tr>
                        <td align="center" colspan="3" class="Attention">
                          <b>No items</b>
                        </td>
                      </tr>
                      <?vsp
                        }
                        else
                        {
                          declare i int;
                          i := 0;
                          while (i < length (self.user_caps))
                          {
                      ?>
                      <tr>
                        <td align="left" nowrap="1">
                          <?V self.user_caps[i][1] ?>
                        </td>
                        <td align="left">
                          <?vsp
                            http (sprintf ('<input type="checkbox" name="cb_perm_select_%s" value="1" %s/>',
                              self.user_caps[i][1], case when 1 = bit_and(1, self.user_caps[i][2]) then 'checked="1"' else '' end ));
                            if (chr(self.user_caps[i][3][0]) = 'P')
                              http( sprintf('(%s)', chr(self.user_caps[i][3][0])));
                          ?>
                        </td>
                        <td align="left">
                          <?vsp
                            http (sprintf ('<input type="checkbox" name="cb_perm_update_%s" value="2" %s/>',
                              self.user_caps[i][1], case when 2 = bit_and(2, self.user_caps[i][2]) then 'checked="1"' else '' end ));
                            if (chr (self.user_caps[i][3][1]) = 'P')
                              http( sprintf('(%s)', chr(self.user_caps[i][3][1])));
                          ?>
                        </td>
                      </tr>
                      <?vsp
                            i := i + 1;
                          }
                        }
                      ?>
                    </table>
                    <table width="100%">
                      <tr>
                        <td align="center">
                          <v:button action="simple" name="cancel" value="Cancel">
                            <v:on-post>
                              <![CDATA[
                                http_request_status ('HTTP/1.1 302 Found');
                                http_header( sprintf('Location: caps_browser.vspx?sid=%s&realm=%s&user_name=%s\r\n',self.sid, self.realm, self.user_name));
                              ]]>
                            </v:on-post>
                          </v:button>
                          <v:button action="simple" name="save" value="Save Changes">
                            <v:on-post>
                              <![CDATA[
                                declare mtd, dta any;
                                declare dg int;
                                declare priv_grant_select, priv_revoke_select, priv_grant_update, priv_revoke_update varchar;
                                priv_grant_select := ''; priv_revoke_select := ''; priv_grant_update := ''; priv_revoke_update := '';
                                declare i int;
                                i := 0;
                                while( i < length(self.user_caps) )
                                {
                                  dg := cast( get_keyword( 'cb_perm_select_'||self.user_caps[i][1], self.vc_event.ve_params, '0') as int);
                                  if( not bit_and(dg, self.user_caps[i][2]) and dg <> 0 )
                                    priv_grant_select := priv_grant_select || self.user_caps[i][1] || ',';
                                  else if( bit_and(1, self.user_caps[i][2]) and dg = 0 )
                                    priv_revoke_select := priv_revoke_select || self.user_caps[i][1] || ',';
                                  dg := cast( get_keyword( 'cb_perm_update_'||self.user_caps[i][1], self.vc_event.ve_params, '0') as int);
                                  if( not bit_and(dg, self.user_caps[i][2]) and dg <> 0 )
                                    priv_grant_update := priv_grant_update || self.user_caps[i][1] || ',';
                                  else if( bit_and(2, self.user_caps[i][2]) and dg = 0 )
                                    priv_revoke_update := priv_revoke_update || self.user_caps[i][1] || ',';
                                  i := i + 1;
                                }
                                declare str_gr, str_rev varchar;

                                str_rev := 'REVOKE ' ||
                                        case when length(priv_revoke_select)>0
                                             then 'SELECT (' || rtrim(priv_revoke_select,',') || ') '
                                             else '' end ||
                                        case when length(priv_revoke_update) > 0 and length(priv_revoke_select) > 0
                                             then ',' else '' end ||
                                        case when length(priv_revoke_update)>0
                                             then 'UPDATE (' || rtrim(priv_revoke_update,',') || ') '
                                             else '' end ||
                                       'ON ' || self.table_name || ' FROM "' || self.user_name || '"';
                                str_gr  := 'GRANT ' ||
                                        case when length(priv_grant_select)>0
                                             then 'SELECT (' || rtrim(priv_grant_select,',') || ') '
                                             else '' end ||
                                        case when length(priv_grant_update) > 0 and length(priv_grant_select) > 0
                                             then ',' else '' end ||
                                        case when length(priv_grant_update) > 0
                                             then 'UPDATE (' || rtrim(priv_grant_update,',') || ') '
                                             else '' end ||
                                       'ON ' || self.table_name || ' TO "' || self.user_name || '"';

                                if (length(priv_revoke_select) > 0 or length(priv_revoke_update) > 0)
                                {
                                  exec( str_rev, null, null, vector(), 0, mtd, dta);
                                }
                                if (length(priv_grant_select) > 0 or length(priv_grant_update) > 0)
                                {
                                  exec( str_gr, null, null, vector(), 0, mtd, dta);
                                }
                                http_request_status ('HTTP/1.1 302 Found');
                                http_header( sprintf('Location: caps_browser.vspx?sid=%s&realm=%s&user_name=%s\r\n',self.sid, self.realm, self.user_name));
                              ]]>
                            </v:on-post>
                          </v:button>
                        </td>
                      </tr>
                    </table>
                  </v:form>
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
