<?xml version="1.0"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<v:page name="xquery_check_page" decor="yacutia_decor.vspx" style="yacutia_style.xsl"
 vm:owner="yacutia_sql_xml_page"
  doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
  fast-render="1" xmlns:v="http://www.openlinksw.com/vspx/" xmlns:vm="http://www.openlinksw.com/vspx/macro">
 <vm:pagetitle>FOR XML Query execution</vm:pagetitle>
 <vm:pagewrapper>
  <vm:header caption="Check FOR XML Query"/>
  <vm:pagebody/>
 </vm:pagewrapper>
</v:page>
<![CDATA[
<?vsp

   declare query_text long varchar;

   declare rel_path , r_node  varchar;
   declare n, len integer;
   declare ctx_value varchar;
   declare result, xq_res any;
   declare doc, doc_base,xq, res_string, url  varchar;
   declare cnt, num integer;
   declare err_sqlstate, err_msg, rel_path varchar;
   declare m_dta any;
   declare n, len  integer;
   declare tmp, pmode varchar;

   declare st, ses any;
   query_text:= get_keyword('query_text',params);
   pmode := get_keyword('pmode', params);
   url := get_keyword('url',params);
   r_node := get_keyword('root_node',params);
   if (r_node is null or r_node = '')
      r_node := 'document';

   if (query_text = '' or query_text is null) {
     http_rewrite();
		 http('<html><body><head><link rel="stylesheet" href="yacutia_style.css" type="text/css" /><title>Error of FOR XML Query execution</title></head>');
		     http('<table width="100%"><tr><td><div style="text-align: left;" id="MB2"><img src="images/con_banner.gif" /></div></td></tr>');
     http('<tr><td align="center" valign="center"><table width="100%" height="90%"><tr><td align="center" valign="center">');
		 http('<p class="error_explanation">Query is empty. Please enter correct and not empty query</p> ');
		 http('</td></tr></table></td></tr>');
     http('<tr><td align="center" valign="center"><form name="check_dismiss" method="post" action=""><table><tr><td align="center" valign="center"> <input name="admin_logout_button" value="Dismiss" type="submit" onclick="javascript:window.close()"> </td></tr></table></form></td></tr>');
		 http('</table></body></html>');
     return;
   }


   ctx_value := get_keyword('context',params);

   doc_base := '';
   if (ctx_value ='1') { -- this is dav
      doc_base := 'virt://WS.WS.SYS_DAV_RES.RES_FULL_PATH.RES_CONTENT:';
   } else if (ctx_value ='2') {
      doc_base := concat('virt://', get_keyword('table_name',params),  '.',  get_keyword('kcol',params),  '.',  get_keyword('vcol',params) , ':', get_keyword('kvalue',params)  );
   } else if (ctx_value ='3') {
      doc_base := '';
   } else  if (ctx_value = '4') {
     doc_base := '';
   }

   {
      declare exit handler for sqlstate '*'
      {
        err_msg := __SQL_MESSAGE;

	http_rewrite();
	http('<html><body><head><link rel="stylesheet" href="yacutia_style.css" type="text/css" /><title>Error of FOR XML Query execution</title></head>');
	    http('<table  width="100%"><tr><td><div id="MB2" style="text-align: left;"><img src="images/con_banner.gif" /></div></td></tr>');
	http('<tr><td align="center" valign="center"><table width="100%" height="90%"><tr><td align="center" valign="center">');
	http('<h1>Parse error</h1><p class="error_explanation">The query text contained errors preventing it to be parsed properly. Please correct the query text and try again.</p>');
	http( sprintf('<p class="error_msg">Error message received: %s.</p>',err_msg) );
	http('</td></tr></table></td></tr>');
	http('<tr><td align="center" valign="center"><form name="check_dismiss" method="post" action=""><table><tr><td align="center" valign="center"> <input name="admin_logout_button" value="Dismiss" type="submit" onclick="javascript:window.close()"> </td></tr></table></form></td></tr>');
	http('</table></body></html>');
	return;
      };
      tmp := y_execute_xq (query_text, r_node, doc_base, get_keyword('url',params, ''), ctx_value, pmode);
   }
   http_rewrite();
   http(sprintf ('<?xml version="1.0" encoding="%s" ?>\n', current_charset ()) );
   http(sprintf('<%s>',r_node));
   http(tmp);
   http(sprintf('</%s>',r_node));
   http_header (sprintf('Content-Type: text/xml\r\n'));
?>
]]>
