<?xml version="1.0"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2023 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="pki_2"
        decor="yacutia_decor.vspx"
        style="yacutia_style.xsl"
        doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
        fast-render="1"
        xmlns:v="http://www.openlinksw.com/vspx/"
        xmlns:vm="http://www.openlinksw.com/vspx/macro">
  <vm:pagetitle>Public Key Infrastructure</vm:pagetitle>
  <vm:pagewrapper>
    <vm:variables>
      <v:variable name="chost" persist="0" type="varchar" default="null" param-name="vhost"/>
      <v:variable name="clhost" persist="0" type="varchar" default="null" param-name="lhost"/>
      <v:variable name="port1" persist="0" type="varchar" default="'80'"/>
      <v:variable name="lhost1" persist="0" type="varchar" default="null" />
      <v:variable name="vhost1" persist="0" type="varchar" default="null" />
    </vm:variables>
    <vm:menu>
      <vm:menuitem name="PKI" value="Public Key Infrastructure"/>
    </vm:menu>
    <vm:header caption="Public Key Infrastructure">
    </vm:header>
    <vm:pagebody>
      <v:on-init>
        declare pos int;
        if (self.chost is null or self.clhost is null)
          return;

        if (self.clhost = '*ini*')
        {
          self.clhost := server_http_port ();
          if (strrchr (self.clhost, ':') is null)
            self.clhost := ':' || self.clhost;
        }
        else if (self.clhost = '*sslini*')
        {
          self.clhost := coalesce (server_https_port (), '');
          if (strrchr (self.clhost, ':') is null)
            self.clhost := ':' || self.clhost;
        }
        pos := strrchr (self.clhost, ':');
        if (pos is not null)
        {
          self.lhost1 := substring (self.clhost, 1, pos);
          self.port1 := substring (self.clhost, pos + 2, length (self.clhost));
        }
        else
          self.lhost1 := self.clhost;

        if (length (self.lhost1) = 0)
          self.lhost1 := '0.0.0.0';

        pos := strrchr (self.chost, ':');
        if (pos is not null)
          self.vhost1 := substring (self.chost, 1, pos);
        else
          self.vhost1 := self.chost;
      </v:on-init>
      <vm:help id="sec_pki" sect="" />
      <v:form name="form1" type="simple" method="POST">
        <!-- top of security layout -->
        <div class="main_tab_page">
          <v:include url="sec_pki_menu.vspx"/>
          <div class="tab_page_new">
            <div id="pki_form">
                  <!-- end of top security layout -->
                    <v:form name="frm_confirm" action="http_serv_mgmt.vspx" method="POST" type="simple">
                      <div class="confirm_dialog">
                        <img class="dialog_icon" src="images/icons/stop_32.png" alt="Stop" title="Stop"/>
                        <div class="confirm_text">
                          <p>You are requesting of deletion of listener at interface <b><?V self.lhost1 ?></b>, listening at port <b><?V self.port1 ?></b>, for connections to <b><?V self.chost ?></b>.<br/>
                          Additionally, these Virtual directories shall be deleted:<br/>
                          <?vsp
                            for select HP_LPATH
                                  from DB.DBA.HTTP_PATH
                                  where HP_HOST = self.chost and
                                        HP_LISTEN_HOST = self.clhost
                                  order by HP_LPATH do
                            {
                              http ('<b>');
                              http (HP_LPATH);
                              http ('</b><br/>');
                            }
                          ?>
                          </p>
                        </div>
                        <div class="confirm_buttons">
                          <v:button name="conf_cancel" action="simple" value="Cancel">
                            <v:on-post>
                              <![CDATA[
                                self.vc_redirect ('sec_pki_2.vspx');
                              ]]>
                            </v:on-post>
                          </v:button>
                          <v:button name="conf_proceed" action="simple" value="Delete">
                            <v:on-post>
                              <![CDATA[
                                for (select HP_HOST, HP_LISTEN_HOST, HP_LPATH, HP_PERSIST_SES_VARS
                                       from DB.DBA.HTTP_PATH
                                       where HP_HOST = self.chost and HP_LISTEN_HOST = self.clhost) do
                                  VHOST_REMOVE (HP_HOST, HP_LISTEN_HOST, HP_LPATH, 0);
                                delete from DB.DBA.SYS_HTTP_LISTENERS where HL_INTERFACE = self.clhost;

                                self.vc_redirect ('sec_pki_2.vspx');
                              ]]>
                            </v:on-post>
                          </v:button>
                        </div>
                      </div>
                    </v:form>
                    <!-- bottom of security layout -->
            </div> <!-- #pki_form -->
          </div>
        </div>
      <!-- end of bottom security layout -->
      </v:form>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>

