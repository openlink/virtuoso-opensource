<?xml version="1.0" encoding="UTF-8" ?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<n0:page xmlns:n0="http://www.openlinksw.com/vspx/" name="inifile_editor_page_Autorepair">
 <table width="100%" border="0" cellspacing="0" cellpadding="5" class="MainData">
  <n0:form name="Autorepair" type="simple" method="POST" action="">
   <n0:on-post>
      <n0:script>

                declare path, rel_path, res_xml, tmp, tmp_value varchar;
                declare tree any;
                declare len, n integer;

		  declare src_xml, src_xslt,res, path  varchar;
		  declare xml_tree,xslt_tree,pars, xml_tree_doc any;
		  declare vspx any;

		  if (self.vc_is_valid = 0 ) return;
 		  rel_path:=&#39;/&#39;;
 		  len:= length(e.ve_path)-1;
 		  n:=0;
 		  while (n &lt; len) {
 		      rel_path := concat(rel_path,aref(e.ve_path,n),&#39;/&#39;);
 		      n:= n+1;
 		  }
                path:= concat(rel_path,&#39;inifile_Autorepair.xml&#39;);

                len := length(params)-2 ;
                n:=6;
                tmp:= aref(params,n); -- initiate the name
                tmp_value:=&#39;&#39;;
                res_xml := &#39;&lt;section name=&quot;Autorepair&quot;&gt;&#39;;
                while (n &lt; len) {
                  if (tmp = aref(params,n)) {
                    if (length(tmp_value) &gt; 0)
                        tmp_value:= concat(tmp_value,&#39;, &#39;);
                    tmp_value:= concat(tmp_value,aref(params,n+1));
                  } else {
	                  res_xml := sprintf(&#39;%s&lt;parameter name=&quot;%s&quot; value=&quot;%s&quot;/&gt;&#39;, res_xml,tmp,tmp_value);
       	           tmp:= aref(params,n);
             		     tmp_value:=aref(params,n+1);
                  }
                  n:= n+2;
                }

                res_xml := sprintf(&#39;%s&lt;/section&gt;&#39;,res_xml);
		   string_to_file(concat(http_root(),path),res_xml,-2);



		  xml_tree := xml_tree (file_to_string (concat(get_ini_location(),&#39;inifile.xml&#39;)));
		  src_xslt := file_to_string (concat(http_root(),rel_path,&#39;merge.xsl&#39;));
		  xslt_sheet(src_xslt, xml_tree_doc (src_xslt));

		  vspx:=string_output();

		 xml_tree_doc:= xml_tree_doc (xml_tree);
		 pars  := vector(&#39;section_name&#39;, &#39;Autorepair&#39;,&#39;ext_doc&#39;,concat(&#39;file:&#39;, path));
		 res := xslt (src_xslt, xml_tree_doc,pars);
		http_value(res,0,vspx);

              path:= concat(get_ini_location(),&#39;inifile.xml&#39;);
  	       src_xml := file_to_string (path);
		string_to_file(concat(path,&#39;.bak&#39;),src_xml,-2);
		string_to_file(path,string_output_string(vspx),-2);

		  vspx:=string_output();
		http_value(res,0,vspx);


		  src_xslt := file_to_string (concat(http_root(),rel_path,&#39;make.xsl&#39;));
		  xslt_sheet(src_xslt, xml_tree_doc (src_xslt));
		xml_tree_doc:= xml_tree_doc (xml_tree (vspx) );
		  vspx:=string_output();

		 res := xslt (src_xslt, xml_tree_doc);
		http_value(res,0,vspx);
		string_to_file(concat(virtuoso_ini_path(),&#39;__&#39;) ,string_output_string(vspx),-2);


            </n0:script>
   </n0:on-post>
   <tr>
     <td class="SubInfo">   	Initialization File Location <span class="attention_marker">*</span>
    </td>
    <td colspan="1">
        <n0:text name="InitializationFileLocation" />
    </td>
      <td />
   </tr>
   <tr>
      <td class="SubInfo">   	Read Values From XML File    </td>
    <td colspan="1">
        <n0:text name="ReadFromXMLFile" />
    </td>
      <td class="SubInfo"> (overwrites current values)  </td>
   </tr>
   <tr>
      <td class="SubInfo" />
    <td class="SubInfo" colspan="1">
     <table>
      <tr>
       <td class="SubInfo">
        <n0:check-box name="BadParentLinks1_1" group-name="BadParentLinks" value="1">
         <n0:after-data-bind>
                  <n0:script>

			                declare tmp, value, var,path varchar;
			                declare tree any;
			                declare pos, prev, cur  integer;
			                 if (get_keyword(&#39;save&#39;, params) is NULL) {

			                path:= concat(get_ini_location(),&#39;inifile.xml&#39;);
				  	   tree := xtree_doc (file_to_string (path));
			                value:= &#39;1&#39;;
     			                var := cast ( xpath_eval(&#39;/inifile/section[@name=&#39;&#39;Autorepair&#39;&#39;]/parameter[@name=&#39;&#39;BadParentLinks&#39;&#39;]/@value&#39;,tree) as varchar);
				          control.ufl_selected:= 0;
     			                if (length(var) &gt; 0 ) {
						   pos:=1;
						   prev:=1;
						   while (pos &gt; 0) {
						      pos := locate(&#39;,&#39;, var, pos);
						      if (pos = 0)
						         cur:=  length(var)+1;
						      else {
							      cur:= pos;
							      pos:= pos +1;
							}
						      tmp := trim(substring(var, prev, cur - prev));
						      prev:= pos;
	 			                   if (tmp = value)
						                  control.ufl_selected:= 1;
						   }
			               }
		             		  control.vc_data_bound := 1;
		             		  }

	            </n0:script>
         </n0:after-data-bind>
        </n0:check-box>
       </td>
            <td nowrap="Yes" class="SubInfo">Automatically Repair Bad Links</td>
      </tr>
     </table>
    </td>
      <td class="Attention" />
   </tr>
   <tr>
      <td class="SubInfo" />
    <td class="SubInfo" colspan="1">
     <table>
      <tr>
       <td class="SubInfo">
        <n0:check-box name="BadDTP1_1" group-name="BadDTP" value="1">
         <n0:after-data-bind>
                  <n0:script>

			                declare tmp, value, var,path varchar;
			                declare tree any;
			                declare pos, prev, cur  integer;
			                 if (get_keyword(&#39;save&#39;, params) is NULL) {

			                path:= concat(get_ini_location(),&#39;inifile.xml&#39;);
				  	   tree := xtree_doc (file_to_string (path));
			                value:= &#39;1&#39;;
     			                var := cast ( xpath_eval(&#39;/inifile/section[@name=&#39;&#39;Autorepair&#39;&#39;]/parameter[@name=&#39;&#39;BadDTP&#39;&#39;]/@value&#39;,tree) as varchar);
				          control.ufl_selected:= 0;
     			                if (length(var) &gt; 0 ) {
						   pos:=1;
						   prev:=1;
						   while (pos &gt; 0) {
						      pos := locate(&#39;,&#39;, var, pos);
						      if (pos = 0)
						         cur:=  length(var)+1;
						      else {
							      cur:= pos;
							      pos:= pos +1;
							}
						      tmp := trim(substring(var, prev, cur - prev));
						      prev:= pos;
	 			                   if (tmp = value)
						                  control.ufl_selected:= 1;
						   }
			               }
		             		  control.vc_data_bound := 1;
		             		  }

	            </n0:script>
         </n0:after-data-bind>
        </n0:check-box>
       </td>
            <td nowrap="Yes" class="SubInfo">Bad DTP</td>
      </tr>
     </table>
    </td>
      <td class="Attention" />
   </tr>
   <tr align="center">
    <td colspan="3">
        <input type="button" action="" name="reset" value="Reset" />
        <n0:button action="submit" name="save" value="Save" />
        <n0:button action="submit" name="save_restart" value="Save and Restart Virtuoso" />
    </td>
   </tr>
  </n0:form>
 </table>
</n0:page>
