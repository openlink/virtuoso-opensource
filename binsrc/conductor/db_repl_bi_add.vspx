<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="event_edit_page"
  decor="yacutia_decor.vspx"
  style="yacutia_style.xsl"
  fast-render="1" xmlns:v="http://www.openlinksw.com/vspx/"
  xmlns:vm="http://www.openlinksw.com/vspx/macro"
  doctype="-//W3C//DTD XHTML 1.0 Transitional//EN">
  <vm:pagetitle>Virtuoso HTTP Database Replication</vm:pagetitle>
  <vm:pagewrapper>
    <vm:variables>
      <v:variable persist="0" name="ename" type="varchar" default="''"/>
      <v:variable persist="0" name="_item" type="varchar" default="''"/>
      <v:variable persist="0" name="_item_type" type="integer" default="0"/>
      <v:variable persist="0" name="_interval" type="integer" default="0"/>
      <v:variable persist="1" name="error_str198" type="varchar" default="''"/>
      <v:variable name="dsn" type="varchar" persist="1" default="''"/>
    </vm:variables>
    <vm:menu>
      <vm:menuitem value="Bidirectional Snapshot Replication"/>
    </vm:menu>
    <vm:header caption="New Bidirectional Snapshot Subscription"/>
    <vm:pagebody vdb_check="1">
      <v:form name="link_form" action="db_repl_bi_add.vspx" method="POST" type="simple">
        <input type="hidden" name="item" value="<?V get_keyword('item', self.vc_page.vc_event.ve_params) ?>"/>
        <input type="hidden" name="item_type" value="<?V get_keyword('item_type', self.vc_page.vc_event.ve_params) ?>"/>
        <v:before-data-bind>
            <![CDATA[
              self._item := cast(deserialize(decode_base64(get_keyword('item', self.vc_page.vc_event.ve_params))) as varchar);
              self._item_type := atoi(get_keyword('item_type', self.vc_page.vc_event.ve_params, '0'));
            ]]>
        </v:before-data-bind>
        <table class="ctl_grp">
          <tr class="ctl_grp_title">
            <th colspan="2">Connected Data Sources</th>
          </tr>
          <tr>
            <td class="ctl_lbl_ctr" colspan="2">Select target data source for replication</td>
          </tr>
          <tr>
          <?vsp
              declare _tbl, _dsn, _uid, _pwd, _snplog, _dsn1 varchar;
              _dsn := get_keyword('dsn', control.vc_page.vc_event.ve_params, '');
              _dsn1 := get_keyword('dsns1', control.vc_page.vc_event.ve_params, '');
              if (_dsn = '')
                _dsn := _dsn1;
              if (_dsn = '')
                _dsn := get_keyword ('dsns', control.vc_page.vc_event.ve_params, '');
              _uid := get_keyword('uid', control.vc_page.vc_event.ve_params, 'dba');
              _pwd := get_keyword('pwd', control.vc_page.vc_event.ve_params, 'dba');
              if (self.error_str198 <> '')
                _dsn := self.dsn;
          ?>
          <td class="ctl_ctr">
            <select name="dsns1" size="5" onchange="this.form.submit();">
              <?vsp
                declare i integer;
                i := 0;
                for select DS_DSN from SYS_DATA_SOURCE do
                {
                  declare sel varchar;
                  sel := '';
                  if (_dsn = DS_DSN)
                    sel := 'selected';
                  http(sprintf('<option value="%s" %s>%s</option>', DS_DSN, sel, DS_DSN));
                  i := i + 2;
                }
              ?>
            </select>
          </td>
          <td>
            <?vsp
              if (_dsn <> '')
              {
                self.dsn := _dsn;
                declare _n_uid, _n_pwd varchar;
                _n_uid := '';
                _n_pwd := '';
                whenever not found goto nfd;
                select DS_UID, pwd_magic_calc(DS_UID, DS_PWD, 1) into _n_uid, _n_pwd from SYS_DATA_SOURCE where DS_DSN = _dsn;
                nfd:
            ?>
            <table>
              <tr>
                <td>Data Source</td>
                <td><?V _dsn ?></td>
              </tr>
              <tr>
                <td>User Name</td>
                <td><input type="text" name="n_uid" value="<?V _n_uid ?>"/></td>
              </tr>
              <tr>
                <td>Password</td>
                <td><input type="password" name="n_pwd" value="<?V _n_pwd ?>"/></td>
              </tr>
            </table>
            <?vsp
              }
            ?>
          </td>
        </tr>
        <?vsp
          if (_dsn <> '')
          {
        ?>
        <tr class="form_cmd_row">
          <td>
            <v:button action="simple" value="Create Subscription" name="create_snap">
              <v:on-post>
                  <![CDATA[
                    if (self.dsn = '')
                    {
                      self.error_str198 := 'DSN must be supplied';
                      return;
                    }
                    declare _server varchar;
                    declare _uid, _pwd varchar;
                    _uid := get_keyword('n_uid', control.vc_page.vc_event.ve_params, 'dba');
                _pwd := get_keyword('n_pwd', control.vc_page.vc_event.ve_params, 'dba');
                -- pls, take out such
                    declare state, msg, m_dta, res varchar;
                    state := '00000';
                    exec('REPL_CREATE_SNAPSHOT_SUB (REPL_SNP_SERVER (?), ?, ?, ?, ?)', state, msg, vector(self.dsn, self._item, self._item_type, _uid, _pwd), m_dta, res);
                    if (state <> '00000')
                    {
                      self.error_str198 := msg;
                      return;
                    }
                    http_request_status('HTTP/1.1 302 Found');
                    http_header(sprintf('Location: db_repl_bi_edit.vspx?sid=%s&realm=%s&item=%s&item_type=%s\r\n', self.sid, self.realm, encode_base64(serialize(self._item)), cast(self._item_type as varchar)));
                    return;
                  ]]>
              </v:on-post>
            </v:button>
          </td>
          <td>
            <v:button action="simple" value="Save" name="dsn_save">
              <v:on-post>
                  <![CDATA[
                    declare _uid, _pwd varchar;
                    _uid := get_keyword('n_uid', control.vc_page.vc_event.ve_params, 'dba');
                    _pwd := get_keyword('n_pwd', control.vc_page.vc_event.ve_params, 'dba');
                    if (self.dsn <> '')
                    {
                      declare state, msg, m_dta, res varchar;
                      state := '00000';
                      exec('DB..vd_remote_data_source(?, ?, ?, ?)', state, msg, vector(self.dsn, '', _uid, _pwd), m_dta, res);
                      if (state <> '00000')
                        self.error_str198 := msg;
                    }
                  ]]>
              </v:on-post>
            </v:button>
          </td>
        </tr>
        <?vsp
          }
        ?>
      </table>
      <table class="ctl_grp">
        <tr class="ctl_grp_title">
          <th colspan="2">Specify new data source</th>
        </tr>
        <tr>
          <td class="ctl_lbl_ctr" colspan="2">
            If the required target Data Source is not connected,<br/>
            you must specify a new Data Source...
          </td>
        </tr>
        <tr>
          <td class="ctl_ctr">
            <select name="dsns" onchange="javascript:dsns_chg(this);" size="5">
              <?vsp
                adm_lt_dsn_options(_dsn);
              ?>
            </select>
          </td>
          <td>
            <table>
              <tr>
                <td>Data Source</td>
                <td>
                  <input type="text" name="dsn"/>
                </td>
              </tr>
              <tr>
                <td>User Name</td>
                <td><input type="text" name="uid"/></td>
              </tr>
              <tr>
                <td>Password</td>
                <td><input type="password" name="pwd"/></td>
              </tr>
            </table>
          </td>
        </tr>
        <tr class="form_cmd_row">
          <td colspan="2">
            <v:button action="simple" value="Clear" name="dsn_clr">
              <v:on-post>
                  <![CDATA[
                    ;
                  ]]>
              </v:on-post>
            </v:button>
            <v:button action="simple" value="Add Data Source" name="dsn_add">
              <v:on-post>
                  <![CDATA[
                    declare _dsn, _uid, _pwd varchar;
                    _dsn := get_keyword('dsn', control.vc_page.vc_event.ve_params, '');
                    _uid := get_keyword('uid', control.vc_page.vc_event.ve_params, 'dba');
                    _pwd := get_keyword('pwd', control.vc_page.vc_event.ve_params, 'dba');
                    if (_dsn <> '')
                    {
                      declare state, msg, m_dta, res varchar;
                      state := '00000';
                      exec('DB..vd_remote_data_source(?, ?, ?, ?)', state, msg, vector(_dsn, '', _uid, _pwd), m_dta, res);
                      if (state <> '00000')
                        self.error_str198 := msg;
                    }
                  ]]>
              </v:on-post>
            </v:button>
          </td>
        </tr>
      </table>
      <?vsp
        if (self.error_str198 <> '')
        {
      ?>
        <table class="warning">
          <tr>
            <td align="center">
              <?V self.error_str198 ?>
            </td>
          </tr>
        </table>
        <?vsp
            self.error_str198 := '';
          }
        ?>
      </v:form>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
