<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="vad_main_page"
        decor="yacutia_decor.vspx"
        style="yacutia_style.xsl"
        fast-render="1"
        xmlns:v="http://www.openlinksw.com/vspx/"
        xmlns:vm="http://www.openlinksw.com/vspx/macro"
        doctype="-//W3C//DTD XHTML 1.0 Transitional//EN">
  <vm:pagetitle>Virtuoso Application Deployment</vm:pagetitle>
  <vm:pagewrapper>
    <vm:variables>
      <v:variable name="upl_file" type="varchar" default="null" persist="temp" />
      <v:variable name="src_folder" type="varchar" default="null" persist="session" />
      <v:variable name="src_folder_type" type="varchar" default="0" persist="session" />
    </vm:variables>
    <vm:menu>
      <vm:menuitem value="Virtuoso Application Deployment"/>
    </vm:menu>
    <vm:header caption="VAD packages"/>
    <vm:pagebody>
      <v:on-init>
        <![CDATA[
          declare pos, mode int;
          declare ses, bh any;

          if (self.src_folder is null)
            self.src_folder := cfg_item_value (virtuoso_ini_path (), 'Parameters', 'VADInstallDir');

          if (self.src_folder is null)
            self.src_folder := '../vad/';

          mode := atoi(get_keyword('choice_source', params, '-1'));
          if (mode = 0 and e.ve_is_post and e.ve_button is not null and e.ve_button.vc_name = 'upl_btn')
          {
            pos := position ('package_path1', params);
            if (pos)
            {
              declare ret integer;
              declare path varchar;

              ses := aref_set_0 (params, pos);
              path := concat('/DAV/temp/', md5 (uuid ()), '.vad');
              if (ses is not null and length (ses))
              {
                set isolation='repeatable';
                connection_set ('vspx_user', 'dav');
                YACUTIA_DAV_COL_CREATE('/DAV/temp/', '110100100N', 'dav', 'administrators');
                ret := DB.DBA.YACUTIA_DAV_RES_UPLOAD (path, ses, '', '111101101N', 'dav', 'administrators', now (), now (), null);
                connection_set ('vspx_user', null);
                if (ret < 0)
                {
                  rollback work;
                  self.vc_is_valid := 0;
                  self.vc_error_message := DAV_PERROR (ret);
                }
                else
                {
                  self.upl_file := path;
                }
              }
            }
          }
        ]]>
      </v:on-init>
      <v:after-data-bind>
        <![CDATA[
          if (length (self.sid) = 0)
          {
            rollback work;
          }
        ]]>
      </v:after-data-bind>
      <div class="clear">
        <v:form name="srcf2" method="POST" type="simple">
          Package path: <span class="emphasize"><v:label name="spath1" value="--case when self.src_folder_type then 'dav://' else 'file://' end || self.src_folder" xhtml_size="70" /></span>
          <v:button name="cdef1" value="Change" action="simple">
            <v:on-post>
              self.vc_redirect ('vad_src.vspx');
            </v:on-post>
          </v:button>

          <v:button name="sdef1" value="Default" action="simple">
            <v:on-post>
              self.src_folder := cfg_item_value (virtuoso_ini_path (), 'Parameters', 'VADInstallDir');
              if (self.src_folder is null)
               self.src_folder := '../vad/';

              self.src_folder_type := 0;
              self.vc_data_bind (e);
            </v:on-post>
          </v:button>
        </v:form>
      </div>
      <v:form name="vad_list1" method="POST" type="simple">
        <table class="listing" rules="groups">
          <v:data-set name="ds_items1"
                      sql="select PKG_NAME, PKG_DESC, PKG_VER, PKG_DATE, PKG_INST, PKG_NVER, PKG_NDATE, PKG_FILE, PKG_DEST from VAD.DBA.VAD_LIST where dir = :self.src_folder and fs_type = :self.src_folder_type order by 1"
                      nrows="1000"
                      scrollable="1"
                      enabled="--isnull(self.upl_file)">
            <v:template name="header11" type="simple">
              <thead>
                <tr class="listing_header_row">
                  <th>Name</th>
                  <th>Target</th>
                  <th>Installed Version</th>
                  <th>New Version</th>
                  <th>Last Update</th>
                  <th width="1%">Action</th>
                </tr>
              </thead>
            </v:template>
            <v:template name="rows1" type="repeat">
              <v:template type="if-not-exists" name="ds_items1_if_not_exists_template">
                <tr class="listing_row_even">
                  <td align="center" colspan="6">
                    <b>No packages are installed</b>
                  </td>
                </tr>
              </v:template>

              <v:template name="template41" type="browse" >
                <tr class="<?V case when mod (control.te_ctr, 2) = 0 then 'listing_row_even' else 'listing_row_odd' end ?>">
                  <td class="listing_col">
                    <input type="checkbox" value="<?U control.te_ctr ?>" name="cb<?V case when (control as vspx_row_template).te_rowset[5] is not null and (control as vspx_row_template).te_rowset[2] is not null and gt (control.te_rowset[5], control.te_rowset[2]) then '2' else '1' end ?>"/>
                    <?vsp if (control.te_rowset[7] is not null) { ?>
                    <input type="hidden" name="f_<?V control.te_ctr ?>" value="<?V control.te_rowset[7] ?>" />
                    <?vsp } ?>
                    <?vsp if (control.te_rowset[2] is not null) { ?>
                    <input type="hidden" name="p_<?V control.te_ctr ?>" value="<?V control.te_rowset[0]||'/'||control.te_rowset[2] ?>" />
                    <?vsp } ?>
                    <?V (control as vspx_row_template).te_rowset[0] ?>
                  </td>
                  <td class="listing_col">
                    <?vsp
                      if (control.te_rowset[8])
                        http ('dav');
                      else
                        http ('fs');
                    ?>
                  </td>
                  <td class="listing_col">
                    <?vsp
                      if ((control as vspx_row_template).te_rowset[2] is null)
                      {
                        http ('Not Installed');
                      }
                      else
                      {
                    ?>
                    <?V (control as vspx_row_template).te_rowset[2] ?>/
                    <?V substring ((control as vspx_row_template).te_rowset[3], 1, 10) ?>
                    <?vsp
                      }
                    ?>
                  </td>
                  <td class="listing_col">
                    <?vsp
                      if ((control as vspx_row_template).te_rowset[5] is null)
                      {
                        http ('Not available');
                      }
                      else
                      {
                    ?>
                    <?V (control as vspx_row_template).te_rowset[5] ?>/
                    <?V substring ((control as vspx_row_template).te_rowset[6], 1, 10) ?>
                    <?vsp
                      }
                    ?>
                    </td>
                    <td class="listing_col">
                      <?V (control as vspx_row_template).te_rowset[4] ?>
                    </td>
                    <td class="listing_col_action">
                      <v:button action="simple" style="image" name="delete1"
                        value="images/icons/del_16.png"
                        url="--concat('vad_remove.vspx?name=', encode_base64 (serialize (concat((control.vc_parent as vspx_row_template).te_rowset[0], '/', (control.vc_parent as vspx_row_template).te_rowset[2]))))"
                        xhtml_alt="Uninstall"
                        xhtml_title="Uninstall"
                        text="&nbsp;Uninstall"
                        >
                      <v:before-render>
                        <![CDATA[
                          declare fullname varchar;

                          fullname := concat((control.vc_parent as vspx_row_template).te_rowset[0], '/', (control.vc_parent as vspx_row_template).te_rowset[2]);
                          declare exit handler for sqlstate '*VAD'
                          {
                            control.vc_enabled := 0;
                          };
                          fullname := DB.DBA.VAD_CHECK_UNINSTALLABILITY(fullname);
                        ]]>
                      </v:before-render>
                    </v:button>
                    <v:button action="simple" style="image" name="confg1" url="--'vad_wa_config.vspx'"
                      value="images/icons/confg_16.png"
                      xhtml_alt="Configure"
                      xhtml_title="Configure"
                      text="&nbsp;Configure"
                      >
                      <v:after-data-bind>
                        <![CDATA[
                          declare _dav integer;
                          declare _package any;

                          _package := lower ((control.vc_parent as vspx_row_template).te_rowset[0]);
                          if (_package = 'framework')
                            _package := 'wa';

                          if ((select TOP 1 HP_STORE_AS_DAV from DB.DBA.HTTP_PATH where HP_LPATH = '/conductor') = 1)
                          {
                            control.vc_enabled := (select 1 from WS.WS.SYS_DAV_RES where RES_FULL_PATH = '/DAV/VAD/conductor/vad_' || _package || '_config.vspx');
                          }
                          else
                          {
                            control.vc_enabled := case when isstring (file_stat (http_root () || '/vad/vsp/conductor/vad_' || _package || '_config.vspx')) then 1 else 0 end;
                          }
                          if (control.vc_enabled)
                          {
                            control.bt_url := 'vad_' || _package || '_config.vspx';
                          }
                        ]]>
                      </v:after-data-bind>
                    </v:button>

                    <v:button action="simple" style="image" name="bt_ist1"
                      value="images/icons/add_16.png"
                      xhtml_alt="Install"
                      xhtml_title="Install"
                      text="&nbsp;Install"
                      url="--sprintf ('vad_install_batch.vspx?mode=%d&packs=%U&dir=%U&dirmode=%d',
                      self.src_folder_type, encode_base64 (serialize (vector (self.src_folder || (control.vc_parent as vspx_row_template).te_rowset[7]))), self.src_folder, self.src_folder_type)"
                      >
                      <v:on-init>
                        <![CDATA[
                         if ((control.vc_parent as vspx_row_template).te_rowset[2] is not null)
                           control.vc_enabled := 0;
                        ]]>
                      </v:on-init>
                    </v:button>
                    <v:button action="simple" style="image" name="bt_up1"
                      value="images/icons/edit_16.png"
                      xhtml_alt="Upgrade"
                      xhtml_title="Upgrade"
                      text="&nbsp;Upgrade"
                      url="--sprintf ('vad_install_batch.vspx?mode=%d&packs=%U&dir=%U&dirmode=%d',
                      self.src_folder_type, encode_base64 (serialize (vector (self.src_folder || (control.vc_parent as vspx_row_template).te_rowset[7]))), self.src_folder, self.src_folder_type)"
                      >
                      <v:on-init>
                        <![CDATA[
                          if ((control.vc_parent as vspx_row_template).te_rowset[5] is null or (control.vc_parent as vspx_row_template).te_rowset[2] is null)
                            control.vc_enabled := 0;

                          if ((control.vc_parent as vspx_row_template).te_rowset[5] = (control.vc_parent as vspx_row_template).te_rowset[2])
                            control.vc_enabled := 0;
                        ]]>
                      </v:on-init>
                    </v:button>

                    <v:button action="simple" style="image" name="bt_rep1"
                      value="images/icons/edit_16.png"
                      xhtml_alt="Re-install"
                      xhtml_title="Re-install"
                      text="&nbsp;Re-install"
                      url="--sprintf ('vad_install.vspx?path=%U&mode=%d',
                      self.src_folder || (control.vc_parent as vspx_row_template).te_rowset[7],
                      self.src_folder_type)"
                      enabled="--equ ((control.vc_parent as vspx_row_template).te_rowset[5], (control.vc_parent as vspx_row_template).te_rowset[2])"
                      >
                    </v:button>
                  </td>
                </tr>
              </v:template>
            </v:template>
            <v:template name="template31" type="simple">
              <tr>
                <td colspan="6" align="center"  class="listing_col_action">
                  <vm:ds-navigation data-set="ds_items1"/>
                </td>
              </tr>
            </v:template>
          </v:data-set>
        </table><br/>
        <script type="text/javascript">
          <![CDATA[
            function select_all ()
            {
              var i, form = document.forms ['vad_list1'];
              for (i = 0;i < form.elements.length;i++)
              {
                var contr = form.elements[i];
                if (contr != null && contr.type == "checkbox" && (contr.name == 'cb1' || contr.name == 'cb2' || contr.name == 'cb3'))
                 contr.checked = true;
              }
            }
            function select_none ()
            {
              var i, form = document.forms ['vad_list1'];
              for (i = 0;i < form.elements.length;i++)
              {
                var contr = form.elements[i];
                if (contr != null && contr.type == "checkbox" && (contr.name == 'cb1' || contr.name == 'cb2' || contr.name == 'cb3'))
                  contr.checked = false;
              }
            }
            function select_inv ()
            {
              var i, form = document.forms ['vad_list1'];
              for (i = 0;i < form.elements.length;i++)
              {
                var contr = form.elements[i];
                if (contr != null && contr.type == "checkbox" && (contr.name == 'cb1' || contr.name == 'cb2' || contr.name == 'cb3'))
                  contr.checked = (contr.checked ? false : true);
              }
            }
            function select_upg ()
            {
              var i, form = document.forms ['vad_list1'];
              for (i = 0;i < form.elements.length;i++)
              {
                var contr = form.elements[i];
                if (contr != null && contr.type == "checkbox" && contr.name == 'cb2')
                  contr.checked = true;
                else
                  contr.checked = false;
              }
            }
          ]]>
        </script>
        <div>
          Select: <a href="javascript:void(0)" onclick="javascript:select_all()">all</a> | <a href="javascript:void(0)" onclick="javascript:select_upg()">upgrades</a> | <a href="javascript:void(0)" onclick="javascript:select_inv()">inverse</a> | <a href="javascript:void(0)" onclick="javascript:select_none()">none</a>
        </div><br/>
        <div>
          <v:button name="instg1" value="Install/Upgrade" action="simple">
            <v:on-post>
              <![CDATA[
                declare i, l, do_ods, add_blog int;
                declare packs, pars, tmp any;
                packs := vector ();
                pars := e.ve_params;
                l := length (pars);
                do_ods := 0; add_blog := 0;
                for (i := 0; i < l; i := i + 2)
                {
                  if (pars[i] = 'cb1' or pars[i] = 'cb2')
                  {
                    tmp := get_keyword ('f_'||pars[i+1], pars);
                    if (tmp is not null and tmp like 'ods_feedmanager%.vad' or tmp like 'ods_blog%.vad')
                      add_blog := 1;

                    if (tmp is not null and tmp not like 'ods_framework%.vad' and tmp not like 'ods_blog%.vad')
                      packs := vector_concat (packs, vector (tmp));

                    if (do_ods = 0 and tmp like 'ods_%.vad')
                      do_ods := 1;
                  }
                }
                if (add_blog = 1)
                {
                  for (i := 0; i < l; i := i + 2)
                  {
                    if (pars[i] like 'f_%' and pars[i+1] like 'ods_blog%.vad')
                    {
                      packs := vector_concat (vector (pars[i+1]), packs);
                      i := l;
                    }
                  }
                }
                if (do_ods = 1)
                {
                  for (i := 0; i < l; i := i + 2)
                  {
                    if (pars[i] like 'f_%' and pars[i+1] like 'ods_framework%.vad')
                    {
                      packs := vector_concat (vector (pars[i+1]), packs);
                      i := l;
                    }
                  }
                }
                if (length (packs))
                {
                  packs := encode_base64 (serialize (packs));
                  self.vc_redirect (sprintf ('vad_install_batch.vspx?mode=%d&dir=%U&packs=%U&dirmode=%d',
                  self.src_folder_type, self.src_folder, packs, self.src_folder_type));
                }
                else
                {
                  self.vc_is_valid := 0;
                  self.vc_error_message := 'No packages are selected';
                }
              ]]>
            </v:on-post>
          </v:button>
          <v:button name="rem1" value="Remove" action="simple">
            <v:on-post>
              <![CDATA[
                declare i, l int;
                declare packs, pars, tmp any;

                packs := vector ();
                pars := e.ve_params;
                l := length (pars);
                for (i := 0; i < l; i := i + 2)
                {
                  if (pars[i] = 'cb1' or pars[i] = 'cb2')
                  {
                    tmp := get_keyword ('p_'||pars[i+1], pars);
                    if (tmp is not null)
                      packs := vector_concat (packs, vector (tmp));
                  }
                }
                if (length (packs))
                {
                  packs := encode_base64 (serialize (packs));
                  self.vc_redirect (sprintf ('vad_remove_batch.vspx?mode=%d&dir=%U&packs=%U',
                  self.src_folder_type, self.src_folder, packs));
                }
                else
                {
                  self.vc_is_valid := 0;
                  self.vc_error_message := 'No packages are selected';
                }
              ]]>
            </v:on-post>
          </v:button>
        </div>
      </v:form>

      <v:form name="inx_form" type="simple" method="POST" action="" xhtml_enctype="multipart/form-data">
        <h3>Install package</h3>
        <table class="ctl_grp">
          <tr class="ctl_grp_title">
            <th>Install from</th>
          </tr>
          <tr>
            <td>
              <v:radio-button
                name="rb_upload"
                xhtml_id="rb_upload"
                value="0"
                group-name="choice_source"
                auto-submit="1"
                initial-checked="1"/>
              <label for="rb_upload">Upload package</label>
            </td>
            <td>
              <?vsp if (self.rb_upload.ufl_selected or not self.vc_event.ve_is_post) { ?>
              <input type="file" name="package_path1" size="70"></input>
              <?vsp } ?>
            </td>
          </tr>
          <tr>
            <td>
              <v:radio-button name="rb_dav" xhtml_id="rb_dav" value="1" group-name="choice_source" auto-submit="1" />
              <label for="rb_dav">DAV resource</label>
            </td>
            <td>
              <?vsp if (self.rb_dav.ufl_selected) { ?>
              <v:text name="package_path" xhtml_size="70"/>
              <vm:dav_browser ses_type="yacutia" render="popup" list_type="details" flt="yes" flt_pat="" path="DAV" browse_type="res" style_css="test.css" w_title="DAV Browser" title="DAV Browser" advisory="mega advisory text" lang="en" return_box="package_path"/>
              <?vsp }  ?>
            </td>
          </tr>
          <tr>
            <td>
              <v:radio-button name="rb_fs" xhtml_id="rb_fs" value="2" group-name="choice_source" auto-submit="1" />
              <label for="rb_fs">Server-side file</label>
            </td>
            <td>
              <?vsp if (self.rb_fs.ufl_selected) { ?>
              <v:text name="fs_package_path" xhtml_size="70"/>
              <vm:file_browser ses_type="yacutia" render="popup" list_type="details" flt="yes" flt_pat="*.vad" path="DAV" browse_type="res" w_title="File Browser" title="File Browser" lang="en" return_box="fs_package_path"/>
              <?vsp } ?>
            </td>
          </tr>
          <tr>
            <td>
              <v:button action="simple" value="Proceed" name="upl_btn">
                <v:on-post>
                  <![CDATA[
                    declare mode, path varchar;

                    if (self.vc_is_valid = 0)
                      return;

                    path := '';
                    mode := atoi (get_keyword('choice_source', control.vc_page.vc_event.ve_params));
                    if (mode = 0)
                    {
                      if (self.upl_file is not null)
                      {
                        path := self.upl_file;
                        commit work;
                      }
                      else
                      {
                        rollback work;
                        self.vc_is_valid := 0;
                        self.vc_error_message := 'The file does not exist or it is empty.';
                        return;
                      }
                    }
                    else if (mode = 1)
                    {
                      path := get_keyword('package_path', control.vc_page.vc_event.ve_params);
                    }
                    else if (mode = 2)
                    {
                      path := get_keyword('fs_package_path', control.vc_page.vc_event.ve_params);
                    }
                    if (path = '' or path is null)
                    {
                      self.vc_error_message := 'Please, enter correct path';
                      self.vc_is_valid := 0;
                      return;
                    }
                    self.vc_redirect (sprintf ('vad_install_batch.vspx?mode=%d&dir=%U&dirmode=%d&packs=%U',
                      case when mode = 2 then 0 else 1 end, self.src_folder, self.src_folder_type, encode_base64 (serialize (vector (path)))));
                  ]]>
                </v:on-post>
              </v:button>
            </td>
          </tr>
        </table>
      </v:form>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
