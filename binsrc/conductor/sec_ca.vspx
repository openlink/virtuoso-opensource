<?xml version="1.0"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2023 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="sec_ca"
        decor="yacutia_decor.vspx"
        style="yacutia_style.xsl"
        doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
        fast-render="1"
        xmlns:v="http://www.openlinksw.com/vspx/"
        xmlns:vm="http://www.openlinksw.com/vspx/macro">
  <vm:pagetitle>Public Key Infrastructure</vm:pagetitle>
  <vm:pagewrapper>
    <vm:variables>
      <v:variable name="ca_mode" type="varchar" default="'browse'" />
      <v:variable name="ca_certs" type="any" default="null" />
    </vm:variables>
    <vm:menu>
      <vm:menuitem name="PKI" value="Public Key Infrastructure"/>
    </vm:menu>
    <vm:header caption="Public Key Infrastructure">
    </vm:header>
    <vm:pagebody>
      <v:form name="form1" type="simple" method="POST" xhtml_enctype="multipart/form-data">
      <!-- top of security layout -->
        <div class="main_tab_page">
          <v:include url="sec_pki_menu.vspx"/>
          <div class="tab_page_new">
            <vm:if test="self.ca_mode = 'browse'">
              <v:button action="simple" value="Delete" name="delete_select">
                <v:on-post>
                  <![CDATA[
                    declare N integer;
                    declare params, item, inx any;

                    params := self.vc_event.ve_params;
                    for (N := 0; N < length (params); N := N + 4)
                    {
                      if (params[N] like '%cb_select%')
                      {
                        delete from DB.DBA.SYS_X509_CERTIFICATES where C_U_ID = 0 and C_KIND = 1 and C_ID = params[N+1];
                      }
                    }
                    self.vc_data_bind (e);
                  ]]>
                </v:on-post>
              </v:button>
              <v:button action="simple" value="Import" name="import_select">
                <v:on-post>
                  <![CDATA[
                    self.ca_mode := 'import';

                    self.vc_data_bind (e);
                  ]]>
                </v:on-post>
              </v:button>
              <v:button action="simple" value="Export" name="export_select">
                <v:on-post>
                  <![CDATA[
                    declare N integer;
                    declare params any;

                    params := self.vc_event.ve_params;
                    self.ca_certs := vector ();
                    for (N := 0; N < length (params); N := N + 4)
                    {
                      if (params[N] like '%cb_select%')
                      {
                        self.ca_certs := vector_concat (self.ca_certs, vector(params[N+1]));
                      }
                    }
                    self.ca_mode := 'export';

                    self.vc_data_bind (e);
                  ]]>
                </v:on-post>
              </v:button>
              <br />

              <v:data-source name="dsrc1" expression-type="sql" nrows="20" initial-offset="0">
                <v:before-data-bind>
                  <![CDATA[
                    control.ds_sql := 'select C_ID, C_NAME from DB.DBA.SYS_X509_CERTIFICATES where C_U_ID = 0 and C_KIND = 1 order by C_NAME';
                    control.ds_parameters := null;
                  ]]>
                </v:before-data-bind>
                <v:after-data-bind>
                  control.ds_make_statistic ();
                </v:after-data-bind>
              </v:data-source>

              <v:data-set name="ds1" data-source="self.dsrc1" scrollable="1">
                <div class="navigation">
                  <vm:ds-navigation-new data-set="ds1"/>
                </div>

                <v:template name="ds1_header" type="simple" name-to-remove="table" set-to-remove="bottom">
                  <table class="listing">
                    <thead>
                      <tr>
                        <th class="checkbox">
                          <input type="checkbox" name="select_all" value="Select All" onclick="selectAllCheckboxes(this.form, this, 'cb_select')"/>
                        </th>
                        <th>Name</th>
                      </tr>
                    </thead>
                  </table>
                </v:template>

                <v:template type="repeat" name="ds1_repeat">

                  <v:template type="if-not-exists" name="ds1_empty">
                    <tr>
                      <td class="listing_empty" colspan="2">No CA Roots</td>
                    </tr>
                  </v:template>

                  <v:template type="browse" name="ds1_browse">
                    <tr>
                      <td class="checkbox">
                        <v:check-box name="cb_select" xhtml_id="cb_select" value="--(control.vc_parent as vspx_row_template).te_rowset[0]" initial-checked="0" />
                      </td>
                      <td><?V control.te_rowset[1] ?></td>
                    </tr>
                  </v:template>
                </v:template>

                <v:template name="ds1_dummy" type="simple" name-to-remove="table" set-to-remove="top">
                  <table>
                  </table>
                </v:template>

              </v:data-set>
            </vm:if>

            <vm:if test="self.ca_mode = 'import'">
              <h3>Import certificates</h3>
              <table>
                <tr>
                  <th>CA Roots File</th>
                  <td>
                    <input type="file" name="ca_file" />
                  </td>
                </tr>
                <tr>
                  <th></th>
                  <td>
                    <v:button action="simple" name="import" value="Import">
                      <v:on-post>
                        <![CDATA[
                          declare ca_content varchar;

                          ca_content := get_keyword ('ca_file', self.vc_event.ve_params, '');
                          X509_CERTIFICATES_ADD (ca_content);

                          self.ca_mode := 'browse';
                          self.vc_data_bind (e);
                        ]]>
                      </v:on-post>
                    </v:button>
                    <v:button action="simple" name="cancel" value="Cancel">
                      <v:on-post>
                        <![CDATA[
                          self.ca_mode := 'browse';
                          self.vc_data_bind (e);
                        ]]>
                      </v:on-post>
                    </v:button>
                  </td>
                </tr>
              </table>
            </vm:if>

            <vm:if test="self.ca_mode = 'export'">
              <h3>Export certificates</h3>
              <table>
                <tr>
                  <th>CA Roots File</th>
                  <td>
                    <input type="text" name="ca_export_file" />
                  </td>
                </tr>
                <tr>
                  <th></th>
                  <td>
                    <v:button action="simple" name="export" value="Export">
                      <v:on-post>
                        <![CDATA[
                          declare N integer;
                          declare params, content any;

                          params := e.ve_params;

                          http_rewrite ();
                          http_request_status ('HTTP/1.1 200 OK');
                          http_header (sprintf ('Content-Type: application/x-download\r\nContent-Disposition: inline; filename="%s"\r\n', get_keyword ('ca_export_file', params)));

                          content := '';
                          for (N := 0; N < length (self.ca_certs); N := N + 1)
                          {
                            for (select C_NAME, C_DATA from DB.DBA.SYS_X509_CERTIFICATES where C_U_ID = 0 and C_KIND = 1 and C_ID = self.ca_certs[N]) do
                            {
                              content := concat (content, C_NAME);
                              content := concat (content, '\n');
                              content := concat (content, repeat ('=', length (C_NAME)));
                              content := concat (content, '\n');
                              content := concat (content, C_DATA);
                              content := concat (content, '\n');
                            }
                          }
                          http (content);
                          http_flush ();

                          self.ca_mode := 'browse';
                          self.vc_data_bind (e);
                        ]]>
                      </v:on-post>
                    </v:button>
                    <v:button action="simple" name="cancel2" value="Cancel">
                      <v:on-post>
                        <![CDATA[
                          self.ca_mode := 'browse';
                          self.vc_data_bind (e);
                        ]]>
                      </v:on-post>
                    </v:button>
                  </td>
                </tr>
              </table>
            </vm:if>
          </div>
        </div>
        <!-- end of bottom security layout -->
      </v:form>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
