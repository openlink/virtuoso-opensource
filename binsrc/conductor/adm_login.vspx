<?xml version="1.0"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:variable name="requested_url" type="any" default="null" persist="0" param-name="URL" xmlns:v="http://www.openlinksw.com/vspx/"/>
<script type="text/javascript">
  <![CDATA[
  function adm_post (f, btn)
  {
    var s = f.password_plain.value;
    f.__submit_func.value = '__submit__';
    f.__submit_func.name = btn.name;
    f.password.value = hex_md5 (f.nonce.value + f.password_plain.value);
    f.password_plain.value = "";
    f.submit ();
    f.password_plain.value = s;
  }
  ]]>
</script>
<v:login name="admin_login"
         realm="virtuoso_admin"
         mode="url"
         user-password="y_sql_user_password"
         user-password-check="y_sql_user_password_check"
         xmlns:v="http://www.openlinksw.com/vspx/">
  <v:before-data-bind>
    <![CDATA[
    -- restore the sid from cookies if set, if session is terminated sid will be invalidated explicitly
    if (not length (get_keyword ('sid', e.ve_params)))
      {
	declare cookies, sid any;
	cookies := vspx_get_cookie_vec (e.ve_lines);
	sid := get_keyword ('sid', cookies);
	if (length (sid))
	  {
	    declare pars any;
	    pars := e.ve_params;
	    pars := vector_concat (pars, vector ('sid', sid, 'realm', 'virtuoso_admin'));
	    e.ve_params := pars;
	    params := pars;
	  }
	if (is_https_ctx () and __proc_exists ('DB.DBA.FOAF_SSL_AUTH_ACL'))
	  {
	  commit work;
  	    if (FOAF_SSL_AUTH_ACL ('CONDUCTOR', 'virtuoso_admin'))
	      {
	        declare pars, fing any;

                fing := get_certificate_info (6);
		sid := vspx_sid_generate ();
            update VSPX_SESSION
               set VS_SID = sid,
                   VS_UID = 'dba',
                   VS_STATE = serialize (vector ('vspx_user', 'dba'))
			where VS_SID = fing and VS_REALM = 'virtuoso_admin';	
		commit work;

		connection_set ('vspx_user', 'dba');
	        pars := e.ve_params;
	        pars := vector_concat (pars, vector ('sid', sid, 'realm', 'virtuoso_admin'));
	        e.ve_params := pars;
	        params := pars;
	      }
	  }
      }
    ]]>
  </v:before-data-bind>
  <v:template name="ifnl" type="if-no-login" redirect="main_tabs.vspx"/>
  <v:login-form name="admin_login_form"
                required="1"
                title="Login"
                user-title="name"
                password-title="pass"
		submit-title="Login">
    <table class="login_fm_ctr">
      <tr><th colspan="2">Login into Database</th></tr>
      <tr>
	<td colspan="2">
          <!--img class="title_icon" src="images/icons/lock_16.png" alt="Not logged in" title="Not logged in"/-->
	   <v:template type="simple" name="login_not_valid" enabled="1">
              <v:after-data-bind>
                <![CDATA[
	       if (
	            e.ve_is_post and
	            e.ve_button is not null and
		    e.ve_button.vc_name = 'login'
		  )
                  {
		  control.vc_enabled := 1;
                  }
	       else
                  {
                  control.vc_enabled := 0;
                  }
                ]]>
              </v:after-data-bind>
	     <div class="error_msg">Invalid credentials</div>
	   </v:template>
	 </td>
       </tr>
       <tr>
	 <td>
	   <label for="t_login_usr">Account</label>
	 </td>
          <td>&amp;nbsp;</td>
       </tr>
       <tr>
	 <td>
            <v:text name="username" value="" xhtml_id="t_login_usr"/>
	</td>
          <td>&amp;nbsp;</td>
      </tr>
      <tr>
	<td>
	  <label for="t_login_pwd">Password</label>
	</td>
          <td>&amp;nbsp;</td>
      </tr>
      <tr>
	<td>
            <v:text name="password_plain"
                    value=""
                    type="password"
		    xhtml_id="t_login_pwd"/>
            <v:text name="password" value="" type="hidden" />
	</td>
      </tr>
      <tr>
	<td>
	  <v:check-box name="cb_remember_me" xhtml_id="cb_remember_me"/>
	  <label for="cb_remember_me"><small>Remember me</small></label>
	</td>
      </tr>
      <tr>
	<td colspan="2" align="right">
          <v:button action="simple"
                    name="login"
                    value="Login"
		    xhtml_id="login_btn"
		    xhtml_onclick="javascript: adm_post (this.form, this); return false"/>
        </td>
      </tr>
    </table>
    <script type="text/javascript">document.admin_login.username.focus();</script>
  </v:login-form>
  <v:template name='il' type='if-login'>
      <!--
      table class="login_fm_ctr">
      <tr>
	<td>
	  <img src="images/icons/user_16.png"
	    alt="User logged in"
	    title="User logged in"/>
	</td>
      </tr>
      <tr>
	<td>
          <?vsp
            http (connection_get ('vspx_user'));
          ?>
      </td>
    </tr>
    <tr>
      <td>
          <v:button action="logout"
                    name="admin_logout_button"
                    value="Logout"
                    style="button"
		    xhtml_id="logout_btn"/>
		</td>
        </tr>
    </table
    -->
  </v:template>
  <v:on-post>
    <![CDATA[
      if (self.vc_authenticated and self.sid is not null and self.requested_url is not null)
      {
        declare _pos integer;
        declare _params varchar;

        _params := '';
        _pos := position ('?', self.requested_url);
        if (_pos)
        {
          _params := '&' || subseq (self.requested_url, _pos);
          self.requested_url := left (self.requested_url, _pos-1);
        }
        http_request_status ('HTTP/1.1 302 Found');
        http_header (sprintf ('Location: %s?sid=%s&realm=%s%s\r\n', self.requested_url, self.sid, self.realm, _params));
        return;
      }

    if (self.vc_authenticated and self.sid is not null and self.cb_remember_me.ufl_selected)
      {
        declare cook_str, expire varchar;

	expire := date_rfc1123 (dateadd ('hour', 1, now()));
	cook_str := sprintf ('Set-Cookie: sid=%s; path=%s; expires=%s;\r\n', self.sid, http_map_get ('domain'), expire);
	cook_str := concat (http_header_get (), cook_str);
	http_header (cook_str);
      }
    ]]>
  </v:on-post>
  <v:after-data-bind>
    <![CDATA[
    if (self.vc_authenticated)
      {
        set_user_id (connection_get ('vspx_user'), 0);
        set_qualifier ('DB');
	if ((self.page_owner is null and  check_grants (connection_get ('vspx_user'), self.page_owner)  <>  1)
		or
	    (self.page_owner <> '' and  check_grants (connection_get ('vspx_user'), self.page_owner)  <>  1))
	 {
           http_request_status ('HTTP/1.1 302 Found');
           http_header (sprintf ('Location: %s?sid=%s&realm=%s\r\n', 'main_tabs.vspx', self.sid, self.realm));
           return;
         }
      }
      if (
	   e.ve_is_post and
	   e.ve_button is not null and
	   e.ve_button.vc_name = 'admin_logout_button'
	 )
        {
	  self.username.ufl_value := '';
	}
    ]]>
  </v:after-data-bind>
</v:login>
