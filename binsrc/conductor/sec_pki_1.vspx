<?xml version="1.0"?>
<!--
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2023 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="pki_1"
        decor="yacutia_decor.vspx"
        style="yacutia_style.xsl"
        doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
        fast-render="1"
        xmlns:v="http://www.openlinksw.com/vspx/"
        xmlns:vm="http://www.openlinksw.com/vspx/macro">
  <vm:pagetitle>Public Key Infrastructure</vm:pagetitle>
  <vm:pagewrapper>
    <vm:variables>
      <v:variable name="c1" type="varchar" default="''" persist="temp"/>
      <v:variable name="st1" type="varchar"  default="''" persist="temp"/>
      <v:variable name="o1" type="varchar" default="''" persist="temp"/>
      <v:variable name="ou1" type="varchar" default="''" persist="temp"/>
      <v:variable name="name1" type="varchar" default="''" persist="temp"/>
      <v:variable name="email1" type="varchar" default="''" persist="temp"/>
      <v:variable name="uri1" type="varchar" default="''" persist="temp"/>
      <v:variable name="fp1" type="varchar" default="''" persist="temp"/>
      <v:variable name="sdt" type="varchar" default="''" persist="temp"/>
      <v:variable name="edt" type="varchar" default="''" persist="temp"/>
      <v:variable name="ca_is_expired" type="integer" default="0" persist="temp"/>
    </vm:variables>
    <vm:menu>
      <vm:menuitem name="PKI" value="Public Key Infrastructure"/>
    </vm:menu>
    <vm:header caption="Public Key Infrastructure">
    </vm:header>
    <vm:pagebody>
      <v:on-init>
        <![CDATA[
          if (xenc_key_exists ('id_rsa'))
          {
            declare tmp, arr any;
            tmp := get_certificate_info (2, decode_base64 (xenc_X509_certificate_serialize ('id_rsa')), 1);
            if (tmp is not null)
            {
              declare expiration_date datetime;
              arr := split_and_decode (tmp, 0, '\0\0/=');
              self.c1 := get_keyword ('C', arr, '');
              self.st1 := get_keyword ('ST', arr, '');
              self.o1 := get_keyword ('O', arr, '');
              self.ou1 := get_keyword ('OU', arr, '');
              self.name1 := get_keyword ('CN', arr, '');
              self.email1 := get_keyword ('emailAddress', arr, '');
              self.fp1 := get_certificate_info (6, 'id_rsa', 3, NULL, 'sha1');
              self.uri1 := get_certificate_info (7, 'id_rsa', 3, '', '2.5.29.17');
              self.sdt := get_certificate_info (4, 'id_rsa', 3);
              self.edt := get_certificate_info (5, 'id_rsa', 3);
              expiration_date := DB.DBA.X509_STRING_DATE(self.edt);
              if (datediff ('day', now(), expiration_date) <= 0)
                self.ca_is_expired := 1;
              if (self.uri1 is null)
                self.uri1 := '';

              if (self.uri1 = '' or self.uri1 like 'email:%')
              {
                declare rc, res, gr any;
                res := __i2idn (make_cert_iri ('id_rsa'));
                gr := __i2idn (sprintf ('http://%{WSHost}s/pki'));
                if (exists (select 1 from DB.DBA.RDF_QUAD where G = gr and S = res))
                  self.uri1 := make_cert_iri ('id_rsa');
                else
                  self.uri1 := '';
              }
            }
          }
          else
            self.uri1 := make_cert_iri ('id_rsa');
        ]]>
      </v:on-init>
      <script tyep="text/javascript">
        <![CDATA[
        function guessFileType (f, sel_name)
          {
              var sel = document.getElementById(sel_name);
              var filePath = f.value;
              if (filePath.match (/\.pem$/) || filePath.match (/\.crt$/))
                  sel.value = 'PEM';
              else if (filePath.match (/\.cer$/))
                  sel.value = 'DER';
              if (filePath.match (/\.p12$/) || filePath.match (/\.pfx$/))
                  sel.value = 'PKCS12';
          }
        ]]>
      </script>
      <v:template type="simple" name="cert_expired" condition="equ (self.ca_is_expired, 1)">
      <div class="confirm_dialog">
          <img class="dialog_icon" src="images/icons/warning_32.png" alt="Stop" title="Stop"/>
          <div class="confirm_text">
              The local CA certificate has expired and new certificates issued from it will be invalid, consider renewal.
          </div>
      </div>
      </v:template>
      <v:form name="form1" type="simple" method="POST" xhtml_enctype="multipart/form-data" xhtml_accept-charset="UTF-8">
      <!-- top of security layout -->
        <div class="main_tab_page">
          <v:include url="sec_pki_menu.vspx"/>
          <div class="tab_page_new">
            <div id="pki_form">
              <h3>CA Root Certificate Details</h3>
              <label>Country</label>
              <v:text xhtml_size="100" value="" name="country" default_value="--self.c1">
                <v:before-render>
                  if (xenc_key_exists ('id_rsa'))
                    control.vc_add_attribute ('disabled', '1');
                </v:before-render>
              </v:text>
              <br />
              <label>State</label>
              <v:text xhtml_size="100" value="" name="st"  default_value="--self.st1">
                <v:before-render>
                  if (xenc_key_exists ('id_rsa'))
                    control.vc_add_attribute ('disabled', '1');
                </v:before-render>
              </v:text>
              <br />
              <label>Organization</label>
              <v:text xhtml_size="100" value="" name="o"  default_value="--self.o1">
                <v:before-render>
                  if (xenc_key_exists ('id_rsa'))
                    control.vc_add_attribute ('disabled', '1');
                </v:before-render>
              </v:text>
              <br />
              <label>Organization Unit</label>
              <v:text xhtml_size="100" value="" name="ou" default_value="--self.ou1" >
                <v:before-render>
                  if (xenc_key_exists ('id_rsa'))
                    control.vc_add_attribute ('disabled', '1');
                </v:before-render>
              </v:text>
              <br />
              <label>Name</label>
              <v:text xhtml_size="100" value="" name="name" default_value="--self.name1" >
                <v:before-render>
                  if (xenc_key_exists ('id_rsa'))
                    control.vc_add_attribute ('disabled', '1');
                </v:before-render>
              </v:text>
              <br />
              <label>e-mail</label>
              <v:text xhtml_size="100" value="" name="email" default_value="--self.email1" >
                <v:before-render>
                  if (xenc_key_exists ('id_rsa'))
                    control.vc_add_attribute ('disabled', '1');
                </v:before-render>
              </v:text>
              <br />

              <v:template type="simple" condition="xenc_key_exists ('id_rsa')">
                <label>Not Before</label>
                <v:text xhtml_size="100" value="" name="sdt1" default_value="--self.sdt" >
                  <v:before-render>
                    if (xenc_key_exists ('id_rsa'))
                      control.vc_add_attribute ('disabled', '1');
                  </v:before-render>
                </v:text>
                <br />
                <label>Not After</label>
                <v:text xhtml_size="100" value="" name="edt1" default_value="--self.edt" >
                  <v:before-render>
                    if (xenc_key_exists ('id_rsa'))
                      control.vc_add_attribute ('disabled', '1');
                  </v:before-render>
                </v:text>
                <br />
              </v:template>

              <label>SAN (URI)</label>
              <v:text xhtml_size="100" value="" name="uri" default_value="--self.uri1" >
                <v:before-render>
                  if (xenc_key_exists ('id_rsa'))
                    control.vc_add_attribute ('disabled', '1');
                </v:before-render>
              </v:text>
              <br />
              <label>Fingerprint (SHA1)</label>
              <v:text xhtml_size="100" value="" name="fp" default_value="--self.fp1" >
                <v:before-render>
                  if (xenc_key_exists ('id_rsa'))
                    control.vc_add_attribute ('disabled', '1');
                </v:before-render>
              </v:text>
              <br />
              <label>Key strength</label>
              <v:select-list name="num">
                <v:item name="2048" value="2048"/>
                <v:item name="1024" value="1024"/>
                <v:item name="512" value="512"/>
                <v:before-render>
                  if (xenc_key_exists ('id_rsa'))
                    control.vc_add_attribute ('disabled', '1');
                </v:before-render>
              </v:select-list>
              <br />
              <label>Validity</label>
              <v:select-list name="validity_year">
                <v:item name="2 Years" value="2"/>
                <v:item name="3 Years" value="3"/>
                <v:item name="5 Years" value="5"/>
                <v:before-render>
                  if (xenc_key_exists ('id_rsa'))
                    control.vc_add_attribute ('disabled', '1');
                </v:before-render>
              </v:select-list>
              <br /><br />
              <v:button action="simple" name="createcert" value="Generate" enabled="--equ (0, xenc_key_exists ('id_rsa'))">
                <v:on-post>
                  <![CDATA[
                    if (xenc_key_exists ('id_rsa'))
                      return 0;

                    if (length (get_keyword ('name', params)) = 0)
                    {
                      self.vc_is_valid := 0;
                      self.vc_error_message := 'The name field is mandatory';
                      return 0;
                    }

                    declare dn any;
                    declare validity, validity_days integer;
                    validity := atoi (self.validity_year.ufl_value);
                    validity_days := datediff ('day', now(), dateadd ('year', validity, now()));
                    dn := vector ('C',  get_keyword ('country', params),
                              'ST', get_keyword ('st', params),
                              'O',  get_keyword ('o', params),
                              'OU', get_keyword ('ou', params),
                              'CN', get_keyword ('name', params),
                              'emailAddress',  get_keyword ('email', params));
                    DB.DBA.LOCAL_CA_GEN ('id_rsa', atoi (get_keyword ('num', params, '2048')), dn, validity_days);
                    commit work;
                    control.vc_enabled := 0;
                    self.delcert.vc_enabled := 1;
                    self.nxt.vc_enabled := 1;
                    self.mgr.vc_enabled := 1;
                  ]]>
                </v:on-post>
              </v:button>
              <v:button action="simple" name="mgr" value="Create Issuer Graph" enabled="--case when xenc_key_exists ('id_rsa') and length (self.uri1) = 0 then 1 else 0 end ">
                <v:on-post>
                  <![CDATA[
                    exec (make_cert_stmt ('id_rsa'));
                    commit work;
                    self.vc_redirect ('sec_pki_1.vspx');
                  ]]>
                </v:on-post>
              </v:button>
              <v:button action="simple" name="nxt" value="Configure HTTPS Listeners" enabled="--xenc_key_exists ('id_rsa')">
                <v:on-post>
                  <![CDATA[
                    self.vc_redirect ('sec_pki_2.vspx');
                  ]]>
                </v:on-post>
              </v:button>
              <v:button action="simple" name="delcert" value="Delete" enabled="--xenc_key_exists ('id_rsa')">
                <v:on-post>
                  <![CDATA[
                    self.vc_redirect ('sec_pki_drop.vspx');
                  ]]>
                </v:on-post>
              </v:button>
              <v:button action="simple" name="dwncert" value="Download Certificate" enabled="--xenc_key_exists ('id_rsa')">
                <v:on-post>
                  <![CDATA[
                    self.vc_redirect ('sec_pki_download.vsp?key=id_rsa');
                  ]]>
                </v:on-post>
              </v:button>
              <v:button action="simple" name="renew_cert_btn" value="Renew CA ceritificate" enabled="--equ (self.ca_is_expired, 1)">
                <v:on-post>
                  <![CDATA[
                    self.vc_redirect ('sec_pki_renew.vspx');
                  ]]>
                </v:on-post>
              </v:button>
              <v:template type="simple" name="import_input" condition="equ(0, xenc_key_exists ('id_rsa'))">
                  <div>
                      <label for="k_value">Import File</label>
                      <input type="file" name="k_value" id="k_value" onchange="guessFileType(this, 'k_type')"/>
                  </div>
                  <div>
                  <label for="k_type">File Format</label>
                  <v:select-list xhtml_id="k_type" name="k_type">
                      <v:item name="PKCS12" value="PKCS12" />
                      <v:item name="PEM" value="PEM" />
                      <v:item name="DER" value="DER" />
                  </v:select-list>
                  </div>
                  <div>
                  <label for="k_pwd">Password</label>
                  <v:text name="k_pwd" id="k_pwd" type="password" value="" />
                  </div>
                  <div>
                        <v:button action="simple" name="imp_key" value="Import Key">
                          <v:on-post>
                            <![CDATA[
                              declare key_file_format, key_value any;
                              declare import_pk_from_pem int;
                              if (self.vc_is_valid = 0)
                                return;

                              declare exit handler for sqlstate '*', not found
                              {
                                rollback work;
                                self.vc_error_message := __SQL_MESSAGE;
                                self.vc_is_valid := 0;
                                return;
                              };
                              key_value := get_keyword ('k_value', params);
                              key_file_format := self.k_type.ufl_value;
                              import_pk_from_pem := 0;
                              if (key_file_format = 'PEM' and strstr (key_value, 'PRIVATE KEY') is not null)
                                import_pk_from_pem := 1;
                              set_user_id ('dba');
                              set_qualifier ('DB');

                              USER_KEY_LOAD ('id_rsa',
                                    key_value,
                                    'X.509',
                                    key_file_format,
                                    self.k_pwd.ufl_value,
                                    case when import_pk_from_pem then key_value else null end,
                                    1);

                              EXEC_STMT (make_cert_stmt ('id_rsa'), 0);
                              commit work;
                              http_request_status ('HTTP/1.1 302 Found');
                              http_header (sprintf ('Location: sec_pki_1.vspx?sid=%s&realm=%s\r\n',self.sid ,self.realm));
                            ]]>
                          </v:on-post>
                        </v:button>
                    </div>
                </v:template>
              <!-- bottom of security layout -->
            </div> <!-- #pki_form -->
          </div>
        </div>
      <!-- end of bottom security layout -->
      </v:form>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
