<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<v:page name="xslt_page" decor="yacutia_decor.vspx" style="yacutia_style.xsl"  vm:owner="yacutia_xslt_page"
        doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
        fast-render="1" xmlns:v="http://www.openlinksw.com/vspx/" xmlns:vm="http://www.openlinksw.com/vspx/macro">
  <vm:pagetitle>Virtuoso XSLT transformation</vm:pagetitle>
  <vm:pagewrapper owner="yacutia_xml">
    <vm:variables>
      <v:variable name="str_error2323" type="varchar" default="null" persist="0"/>
    </vm:variables>
    <vm:menu>
      <vm:menuitem value="XSLT transformation"/>
    </vm:menu>
    <vm:header caption="Perform XSL Transformation"/>
    <vm:pagebody>
    <table class="main_page_area">
      <tr>
        <td>
          <table width="100%" border="0" cellspacing="0" cellpadding="5" class="ctl_grp">
            <v:form name="xslt_form" type="simple" method="POST" action="">
              <v:on-post>
                <v:script>
                  <![CDATA[
		    declare xsl_sheet, xml_src, src_xslt, rel_path, xml_file, xsl_file,
		  		save_path, folders_message, file_perms  varchar;
                    declare xml_tree, xslt_tree, pars,  xml_tree_doc, ses, res, trf  any;
                    declare n, len, result, dav_folder_owner, dav_folder_group  integer;

                    if (get_keyword('save', params) is null)
		      return;

		    trf := get_keyword('clitrf1', params);

		    declare exit handler for sqlstate '*'
		    {
		      rollback work;
		      self.vc_is_valid := 0;
		      self.xslt_form.vc_error_message := __SQL_MESSAGE;
		      return;
		    };

                    xsl_sheet := get_keyword('xsl_sheet', params);
                    xml_src := get_keyword('xml_src', params);
                    save_path:= get_keyword('file_loc', params);
		    if (xml_src = '')
		      {
		        signal ('.....', 'Source XML file was not specified.');
		      } else if (check_dav_file_permissions
		         (xml_src, connection_get('vspx_user'), '100', folders_message) <> 1   )
		      {
                         signal ('.....', sprintf('Path on  source XML file is invalid:  "%s".', folders_message));
		      }

		    if (xsl_sheet = '')
		      {
                        signal ('.....', 'Stylesheet file was not  specified.');
		      }
		    else if (check_dav_file_permissions
		             (xsl_sheet, connection_get('vspx_user'), '100', folders_message) <> 1  )
		      {
                        signal ('.....', sprintf('Path on  stylesheet file is invalid:  "%s".',folders_message));
		      }

                    if (save_path = '')
		      {
                        signal ('.....', 'Path on file to store result in was not  specified.');
                      }
		    else if (exists(select 1 from WS.WS.SYS_DAV_RES where RES_FULL_PATH = save_path) and
		      not self.overwrite1.ufl_selected)
		      {
                        signal ('.....', 'The specified resource for result already exist');
		      }
		    else
		      {
		        if (dav_path_validate(save_path,dav_folder_owner, dav_folder_group, file_perms,
		              folders_message) <> 1)
			  {
                            signal ('.....',
				 sprintf('Path to store into is invalid. Path validation was failed: "%s"',
				 folders_message));
                          }
			else if ( dav_check_permissions(
			          connection_get('vspx_user'),
			          file_perms,'010' ,dav_folder_owner, dav_folder_group, folders_message) <> 1)
			  {
                            signal ('.....', sprintf('You are unable to store this file: "%s"', folders_message));
                          }
                      }

                    rel_path:='/';
                    len := length(path) - 1;
                    n := 0;
                    while (n < len)
                      {
                        rel_path := concat(rel_path, aref(path,n), '/');
                        n:= n + 1;
                      }

                    select blob_to_string(RES_CONTENT) into xml_file from WS.WS.SYS_DAV_RES where RES_FULL_PATH = xml_src;
  if (trf = '1')
    {
      ses := string_output ();
      http ('<?xml version="1.0" ?>\n', ses);
      http (sprintf ('<?xml-stylesheet href="%U" type="text/xsl" ?>\n', xsl_sheet), ses);
      if (xml_file like '<?xml%')
        xml_file := regexp_replace (xml_file, '<?[^>]+?>');
      http (xml_file, ses);
      goto store;
    }
                    xml_tree := xml_tree(xml_file);
                    select blob_to_string(RES_CONTENT) into src_xslt  from WS.WS.SYS_DAV_RES where RES_FULL_PATH = xsl_sheet;
                    declare doc_tree any;
                    doc_tree := xml_tree_doc(src_xslt);
                    ses := string_output();
                    xml_tree_doc:= xml_tree_doc (xml_tree);
		    res := xslt ('virt://WS.WS.SYS_DAV_RES.RES_FULL_PATH.RES_CONTENT:' || xsl_sheet,
		        xml_tree_doc);
                    http_value (res, 0, ses);

    store:

		    YAC_DAV_RES_UPLOAD (save_path, string_output_string (ses),
		           'text/xml','110100000R', 'dav', 'administrators', 'dba');

	            self.vc_redirect ('xslt_result.vspx?result=ok');
                  ]]>
                </v:script>
              </v:on-post>
            <tr>
              <td>XML Source<span class="attention_marker">*</span></td>
                <td>
                  <v:text name="xml_src" xhtml_size="40">
                    <v:before-data-bind>
                      <v:script>
                        <![CDATA[
                          if (get_keyword('xml_src', control.vc_page.vc_event.ve_params) is not null)
                            control.ufl_value := get_keyword('xml_src', control.vc_page.vc_event.ve_params);
                          control.vc_data_bound := 1;
                        ]]>
                      </v:script>
                    </v:before-data-bind>
                  </v:text>
                  <vm:dav_browser ses_type="yacutia" render="popup" list_type="details" flt="yes" flt_pat="" path="DAV" browse_type="res" style_css="test.css" w_title="DAV Browser" title="DAV Browser" advisory="mega advisory text" lang="en" return_box="xml_src"/>
                </td>
                <td />
                <td>
                  <v:radio-button name="on_screen" group-name="save_mode" value="0"  xhtml_onclick="javascript: parent.document.forms[\'xslt_form\'].submit();">
                    <v:before-data-bind>
                      <v:script>
                        <![CDATA[
                          control.ufl_selected:= 0;
                          if (get_keyword ('save_mode', control.vc_page.vc_event.ve_params) ='0' )
                            control.ufl_selected:= 1;
                          control.vc_data_bound := 1;
                        ]]>
                      </v:script>
                    </v:before-data-bind>
                  </v:radio-button>
                </td>
                <td>Screen output </td>
                <td />
              </tr>
                <tr>
                  <td>XSL Sheet<span class="attention_marker">*</span></td>
                  <td>
                    <v:text name="xsl_sheet" xhtml_size="40">
                      <v:before-data-bind>
                        <v:script>
                          <![CDATA[
                            if (get_keyword ('xsl_sheet', control.vc_page.vc_event.ve_params) is not null)
                               control.ufl_value := get_keyword ('xsl_sheet', control.vc_page.vc_event.ve_params);
                            control.vc_data_bound := 1;
                          ]]>
                        </v:script>
                      </v:before-data-bind>
                    </v:text>
                    <vm:dav_browser ses_type="yacutia" render="popup" list_type="details" flt="yes" flt_pat="" path="DAV" browse_type="res" style_css="test.css" w_title="DAV Browser" title="DAV Browser" advisory="mega advisory text" lang="en" return_box="xsl_sheet"/>
                  </td>
                  <td/>
                  <td>
                    <v:radio-button name="on_file" group-name="save_mode" value="1"  xhtml_onclick="javascript: parent.document.forms[\'xslt_form\'].submit();">
                      <v:before-data-bind>
                        <v:script>
                          <![CDATA[
                            control.ufl_selected:= 0;
                            if (get_keyword ('save_mode', control.vc_page.vc_event.ve_params) = '1'  or get_keyword ('save_mode', control.vc_page.vc_event.ve_params) is null)
                               control.ufl_selected:= 1;
                            control.vc_data_bound := 1;
                          ]]>
                        </v:script>
                      </v:before-data-bind>
                    </v:radio-button>
                  </td>
                  <td>File output</td>
                  <td />
                  <td />
                </tr>
                <tr>
                  <td colspan="4" >
		    <v:check-box name="clitrf" value="1" xhtml_id="clitrf" auto-submit="1"/> <label for="clitrf">Client-Side Transformation</label>
		    <v:text name="clitrf1" type="hidden" value="0">
		      <v:before-render>
			control.ufl_value := self.clitrf.ufl_selected;
		      </v:before-render>
		    </v:text>
		  </td>
                  <td colspan="2">
                    <v:text name="file_loc" xhtml_size="40">
                      <v:before-data-bind>
                        <v:script>
                          <![CDATA[
                            if (get_keyword('file_loc', control.vc_page.vc_event.ve_params) is not null)
                               control.ufl_value := get_keyword('file_loc', control.vc_page.vc_event.ve_params);
                            control.vc_data_bound := 1;
                          ]]>
                        </v:script>
                      </v:before-data-bind>
                    </v:text>
                    <vm:dav_browser ses_type="yacutia" render="popup" list_type="details" flt="yes" flt_pat="" path="DAV" browse_type="res" style_css="test.css" w_title="DAV Browser" title="DAV Browser" lang="en" return_box="file_loc"/>
                  </td>
                </tr>
                <tr>
		  <td colspan="4">
		  </td>
		  <td colspan="2">
		    <v:check-box name="overwrite1" value="1" xhtml_id="overwrite1"/>
		    <label for="overwrite1">Replace the existing resource</label>
                  </td>
                </tr>
                <tr>
                  <td align="center">
                    <v:template name="screen_result_template" type="simple" enabled="--case when ( get_keyword ('save_mode', control.vc_page.vc_event.ve_params) ='0' ) then 1 else 0 end">
                      <v:button name="trx" value="Transform" selector="xslt_res.vspx" action="browse"
                                       child-window-options="resizable=yes, scrollbars=yes, menubar=no, height=630, width=600">
                        <v:field name="xml_src"/>
                        <v:field name="xsl_sheet"/>
                        <v:field name="file_loc"/>
                        <v:field name="clitrf1"/>
                      </v:button>
                    </v:template>
                    <v:template name="file_result_template" type="simple"
                                enabled="--case when ( get_keyword('save_mode', control.vc_page.vc_event.ve_params) ='1' or  get_keyword('save_mode', control.vc_page.vc_event.ve_params) is null) then 1 else 0 end">
                      <v:button action="simple" name="save" value="Transform"/>
                    </v:template>
                  </td>
                </tr>
              </v:form>
            </table>
          </td>
        </tr>
      </table>
      <v:template name="xslt_template1" type="simple" enabled="--case   when (self.str_error2323 is not null and self.str_error2323 <> '') then 1 else 0 end">
        <table class="Warning" cellpadding="3" cellspacing="0" width="100%" border="0" >
          <tr>
            <td align="center">
              <?vsp
                http (self.str_error2323);
                self.str_error2323 := '';
              ?>
            </td>
          </tr>
        </table>
      </v:template>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
