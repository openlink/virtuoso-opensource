<?xml version="1.0"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
 -
-->
<v:page name="vdb_dsn_edit_page" decor="yacutia_decor.vspx" style="yacutia_style.xsl"
   doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
   fast-render="1" xmlns:v="http://www.openlinksw.com/vspx/"
   xmlns:xhtml="http://www.w3.org/1999/xhtml"
   xmlns:vm="http://www.openlinksw.com/vspx/macro"
   >

  <vm:pagetitle>Virtuoso Datasources</vm:pagetitle>
  <vm:pagewrapper>
    <v:variable name="p_mode" persist="1" type="varchar" default="''" />
    <v:variable name="ds_name" persist="0" type="varchar" default="''" />
    <v:variable name="ds_login" persist="1" type="varchar" default="''" />

    <vm:menu>
    <vm:menuitem name="dsns_url" type="hot" value="Known Datasources" format="%s" url="vdb_dsns.vspx" />
    <vm:menuitem name="linked_url" type="hot" value="Known Remote Resources" format="%s" url="vdb_resources.vspx" />
    <vm:menuitem name="link_url" type="hot" value="Link Remote Resources" format="%s" url="vdb_link.vspx" />
    <vm:menuitem name="main_url" type="hot" value="Main Remote Resources" format="%s" url="vdb_main.vspx" />
    </vm:menu>

    <vm:rawheader>
      <td><?vsp
        if (get_keyword('mode', params)='create' ) { ?>
          New Data Source Credentials
        <?vsp } else { ?>
          Edit Data Source Credentials
        <?vsp }
      ?></td>
    </vm:rawheader>
    <vm:pagebody vdb_check="1">
      <v:before_render>
      <?vsp
       self.p_mode := get_keyword('mode', self.vc_page.vc_event.ve_params, self.p_mode);
       if( self.p_mode = 'edit' or self.p_mode = 'remove')
         self.ds_name := get_keyword ('dsn_name', self.vc_page.vc_event.ve_params, self.ds_name);
       self.ds_login := get_keyword ('login', self.vc_page.vc_event.ve_params, '');
       self.return_path := sprintf('vdb_dsn_edit.vspx?sid=%s&realm=%s&mode=%s&dsn_name=%s',self.sid, self.realm, self.p_mode, self.ds_name);

        declare i, cnt integer;
        declare ds_pwdo, ds_pwdn varchar;
        if (get_keyword('mode', self.vc_page.vc_event.ve_params) = 'remove')  {
          declare exit handler for sqlstate '*' {
              declare sqlst, sqlmsg varchar;
              sqlst := coalesce (__SQL_STATE, '');
              sqlmsg := coalesce (__SQL_MESSAGE, '');
              return;
          };
          vdd_disconnect_data_source(self.ds_name);
          delete from DB.DBA.SYS_DATA_SOURCE where DS_DSN = self.ds_name AND DS_UID = self.ds_login;
          http_request_status ('HTTP/1.1 302 Found');
          http_header (sprintf('Location: vdb_dsns.vspx?sid=%s&realm=%s\r\n', self.sid , self.realm));
          return;
        }

      ?>
      </v:before_render>
<v:template name="error_temp1" type="simple" condition="self.sql_stt <> ''">
  <v:include url="vdb_error_inc.vspx"/>
</v:template>

<v:template name="error_temp2" type="simple" condition="self.sql_stt = ''">
                    <v:form name="dsn_form" type="simple" method="POST" action="--self.return_path">
                     <table class="MainSubData" width="100%" border="0" cellspacing="0" cellpadding="0">
                      <tr>
                          <?vsp
                            http(sprintf('<input type="hidden" name="dsn_name" value="%s"/>', self.ds_name));
                            http('<td>Data Source Name');
                            if( self.p_mode = 'edit' )
                            {
                              http('</td><td>');
                              http( self.ds_name );
                            }
                            else
                            {
			    http('<span class="attention_marker">*</span></td><td>');
                              declare dsns, dsnsu any;
                              declare dsn, drv, page varchar;
                              declare len, idx integer;

                              dsnsu := sql_data_sources(1, 'user');
                              dsns := sql_data_sources(1, 'system');

                              if( length(dsns) + length(dsnsu) = 0)
                              {
                                http(sprintf ('No pre-defined DSNs'));
                              }
                              else
                              {
                                declare selected, cur_dsn varchar;
                                cur_dsn := self.ds_name; --get_keyword ('dsn_name', self.vc_page.vc_event.ve_params, '');
                                http('<select name="dsn_names">');
                                idx := 0;
                                len := length (dsnsu);
                                while (idx < len)
                                {
                                  dsn := aref (aref (dsnsu, idx), 0);
                                  if (cur_dsn = dsn)
                                    selected := 'selected';
                                  else
                                    selected := '';
                                  http( sprintf('<option value="%s" %s>%s</option>', dsn, selected, dsn ) );
                                  idx := idx + 1;
                                }
                                idx := 0;
                                len := length (dsns);
                                while (idx < len)
                                {
                                  dsn := aref (aref (dsns, idx), 0);
                                  if (cur_dsn = dsn)
                                    selected := 'selected';
                                  else
                                    selected := '';
                                  http( sprintf('<option value="%s" %s>%s</option>', dsn, selected, dsn ) );
                                  idx := idx + 1;
                                }
                                http('</select>');
                              }
                            }
                            http('</td>');
                          ?>
                      </tr>

                      <tr>
			<td>Username<span class="attention_marker">*</span></td>
                        <td>
                          <v:text name="user_name">
                            <v:before-data-bind>
                              <v:script><![CDATA[
                                if( self.p_mode = 'edit')  {
                                   control.ufl_value:= get_keyword ('login', self.vc_page.vc_event.ve_params, self.ds_login);
                                   control.vc_data_bound := 1;
                                }
                              ]]></v:script>
                            </v:before-data-bind>
                          </v:text>
                        </td>
                      </tr>
                      <tr>
			<td>Password<span class="attention_marker">*</span></td>
                        <td><v:text name="new_pass" type="password"/></td>
                      </tr>
                      <tr align="center">
                        <td colspan="2">
                          <v:button action="simple" name="cancel" value="Cancel">
                            <v:on-post>
                              <v:script><![CDATA[
                                http_request_status ('HTTP/1.1 302 Found');
                                http_header (sprintf('Location: vdb_dsns.vspx?sid=%s&realm=%s\r\n',self.sid ,self.realm));
                                ]]>
                              </v:script>
                            </v:on-post>
                          </v:button>
                          <v:button action="simple" name="save" value="Save Changes">
                      <v:on-post>
                        <v:script><![CDATA[
                  declare i, cnt integer;
                  declare ds_pwdo, ds_pwdn varchar;
                  if (get_keyword ('cancel', self.vc_page.vc_event.ve_params) <> '' or self.vc_is_valid = 0) {
error:
                    http_request_status ('HTTP/1.1 302 Found');
                    http_header (sprintf('Location: vdb_dsns.vspx?sid=%s&realm=%s\r\n', self.sid , self.realm));
                    return;
                  }
                  if ( self.p_mode <> 'edit') {
                     self.ds_name := get_keyword ('dsn_names', params, '???' );
                  }
                  else
                  {
                    self.ds_name := get_keyword ('dsn_name', params, self.ds_name);
                  }
                  self.ds_login := (control.vc_parent.vc_find_control ('user_name') as vspx_field).ufl_value;
                  ds_pwdn := (control.vc_parent.vc_find_control ('new_pass') as vspx_field).ufl_value;
                  declare exit handler for sqlstate '*' {
                    self.sql_stt := coalesce (__SQL_STATE, '');
                    self.sql_msg := coalesce (__SQL_MESSAGE, '');
                    self.return_path := sprintf('vdb_dsn_edit.vspx?sid=%s&realm=%s&mode=%s&dsn_name=%s',self.sid, self.realm, self.p_mode, self.ds_name);
                    return;
                  };
                  if( exists (select 1 from DB.DBA.SYS_DATA_SOURCE where DS_DSN = self.ds_name AND DS_UID = self.ds_login ) ) {
                    vdd_disconnect_data_source(self.ds_name);
                    delete from DB.DBA.SYS_DATA_SOURCE where DS_DSN = self.ds_name AND DS_UID = self.ds_login;
                  }
                  vd_remote_data_source (self.ds_name, '', self.ds_login, ds_pwdn);
                  http_request_status ('HTTP/1.1 302 Found');
                  http_header (sprintf('Location: vdb_dsns.vspx?sid=%s&realm=%s\r\n',self.sid ,self.realm));
                  ]]>
                        </v:script>
                      </v:on-post>
                          </v:button>
                        </td>
                      </tr>
                  </table>
                    </v:form>
</v:template>
    </vm:pagebody>
  </vm:pagewrapper>
</v:page>
