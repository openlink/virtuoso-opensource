<?xml version="1.0" encoding="UTF-8"?>
<!--
 -  
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<v:page name="script_page" decor="bpel_decor.vspx" style="bpel_style.xsl" xmlns:v="http://www.openlinksw.com/vspx/" xmlns:vm="http://www.openlinksw.com/vspx/macro">
  <v:on-init>
    set isolation='committed';
  </v:on-init>
  <vm:pagetitle>OpenLink BPEL Process Manager Process Graph</vm:pagetitle>
  <vm:pagewrapper>
    <vm:pagebody>

<?vsp

   declare _id integer;
   declare _rs varchar;

   _id := atoi ({?'id'});

   _rs := sprintf('<page>\n');
   _rs := sprintf('%s<script_id>%s</script_id>\n',_rs,cast(_id as varchar));


    for select bs_name from BPEL.BPEL.script where bs_id = _id do
    {
      _rs := sprintf('%s<script_name>%s</script_name>\n',_rs,bs_name);
    }


  declare spaces int;
  spaces := 0;

  _rs := sprintf('%s<activities>\n',_rs);

  -- first node in the script
  for select bg_node_id from BPEL.BPEL.graph where bg_script_id=_id and bg_parent = -1 do
  {
    declare idx int;
      idx := 0;

    declare idarr any;

      idarr := BPEL.BPEL.script_ids (_id, bg_node_id);

      while (idx < length (idarr))
      {
        if (aref (idarr, idx) = -1)
        {
        	idx := idx + 1;
    	   spaces := spaces + 1;
        } else if (aref (idarr, idx) = -2)
        {
        	idx := idx + 1;
    	   spaces := spaces -1;
        } else
        {
               _rs := sprintf('%s<node>\n',_rs);
               _rs := sprintf('%s<id>%d</id>\n',_rs,aref(idarr, idx));

               _rs := sprintf('%s<name>%s</name>\n',_rs,BPEL.BPEL.get_activity (aref(idarr, idx)));
               _rs := sprintf('%s<len>%d</len>\n',_rs,BPEL.BPEL.spaces(spaces*5));
               _rs := sprintf('%s</node>\n',_rs);
        idx := idx + 1;
	  }
	}
     }
     _rs := sprintf('%s</activities>\n',_rs);
     _rs := sprintf('%s</page>\n',_rs);

     http_value (xslt (BPEL.BPEL.res_base_uri () || 'bpel4ws/1.0/script.xsl',xtree_doc(_rs),vector ('sid',{?'sid'},
                       'realm',{?'realm'})));
?>
 </vm:pagebody>
  </vm:pagewrapper>
</v:page>
