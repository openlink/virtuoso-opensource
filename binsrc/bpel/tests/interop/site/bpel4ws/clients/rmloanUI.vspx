<?xml version="1.0"?>
<!--
 -
 -  $Id$
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<v:page name="rmloanUI"
  xmlns:v="http://www.openlinksw.com/vspx/"
  xmlns:vm="http://www.openlinksw.com/vspx/macro/"
  style="client.xsl">
  <v:variable name="imsg" type="any" default="null"/>
  <v:variable name="omsg" type="any" default="null"/>
  <vm:page>
    <vm:title>OpenLink BPEL Interoperability Asyncronous LoanFlow Client</vm:title>
    <vm:body>
      <div style="font-size:15px;">
        <form>
           <a href="#" onclick="window.close (); return false;"><img title="Close" alt="Close" src="../close_16.png" border="0" /></a>
           <a href="#" onclick="window.close (); return false;"> Close</a>
        </form>
      </div>
      <table width="100%" border="0" cellpadding="0" cellspacing="0" id="content">
      <v:form type="simple" name="f1" method="POST">
          <tr><th colspan="2">LoanFlow Client</th></tr>
	  <tr>
	    <td width="20%">Async LoanFlow endpoint URI</td>
	    <td>
	      <v:text name="ep" default_value="--sprintf ('http://%s/RMLoanFlow', self.host)" xhtml_size="70"/>
	    </td>
	  </tr>
	  <tr>
	    <td>Async LoanFlow reply endpoint URI</td>
	    <td>
	      <v:text name="epr" default_value="--sprintf ('http://%s/RMLoanReply', self.host)" xhtml_size="70"/>
	    </td>
	  </tr>
          <tr>
	    <td>Input text</td>
	    <td>&nbsp;</td>
	  </tr>
	  <tr>
	    <td align="right">SSN</td>
	    <td>
	      <v:text name="ssn" default_value="12345" xhtml_size="70"/>
	    </td>
	  </tr>
          <tr>
	    <td align="right">email</td>
	    <td>
	      <v:text name="email" default_value="john@yahoo.com" xhtml_size="70"/>
	    </td>
	  </tr>
          <tr>
	    <td align="right">customerName</td>
	    <td>
	      <v:text name="cname" default_value="John Smith" xhtml_size="70"/>
	    </td>
	  </tr>
          <tr>
	    <td align="right">loanAmount</td>
	    <td>
	      <v:text name="amount" default_value="10" xhtml_size="70"/>
	    </td>
	  </tr>
          <tr>
	    <td align="right">carModel</td>
	    <td>
	      <v:text name="model" default_value="BMW" xhtml_size="70"/>
	    </td>
       	  </tr>
          <tr>
	    <td align="right">carYear</td>
	    <td>
	      <v:text name="year" default_value="2005" xhtml_size="70"/>
	    </td>
	  </tr>
          <tr>
	    <td align="right">creditRating</td>
	    <td>
	      <v:text name="rating" default_value="1" xhtml_size="70"/>
	    </td>
	  </tr>
	  <tr>
            <td>&nbsp;</td>
	    <td>
	      <v:button name="bt1" action="simple" value="Invoke">
		<v:on-post><![CDATA[
		  declare resp any;
                  declare req any;
                  req := xtree_doc (sprintf ('<loanApplication xmlns="http://www.autoloan.com/ns/autoloan"><SSN>%s</SSN><email>%s</email><customerName>%s</customerName><loanAmount>%s</loanAmount><carModel>%s</carModel><carYear>%s</carYear><creditRating>%s</creditRating></loanApplication>'
	            , self.ssn.ufl_value
	            , self.email.ufl_value
	            , self.cname.ufl_value
	            , self.amount.ufl_value
	            , self.model.ufl_value
                    , self.year.ufl_value
	            , self.rating.ufl_value
	            ));
                  --dbg_obj_print('-------new post----------------');
		  resp := db.dba.soap_client
		  (
		    url=>self.ep.ufl_value,
		    operation=>'initiate',
		    soap_action=>'initiate',
		    parameters=>vector ('par1', req),
		    headers=>vector ('par0',
                     xtree_doc (sprintf ('<ReplyTo xmlns="http://schemas.xmlsoap.org/ws/2004/03/addressing"><Address>%s</Address></ReplyTo>', self.epr.ufl_value))),
                     style=>1+2,
                     direction=>1
		  );
                  dbg_obj_print(resp);
		  self.imsg := resp[1];
		  ]]></v:on-post>
	      </v:button>
	    </td>
	  </tr>
      </v:form>
      <v:template type="simple" name="request"  condition="length (self.imsg)">
	  <tr>
            <td>&nbsp;</td>
	    <td><textarea cols="80" rows="15" readonly="1"><?vsp http_value (self.imsg); ?></textarea></td>
	  </tr>
	<div><v:url name="u1" value="View Asyncronous Results" url="viewres.vspx?t=4"/></div>
      </v:template>
      </table>
    </vm:body>
  </vm:page>
</v:page>
