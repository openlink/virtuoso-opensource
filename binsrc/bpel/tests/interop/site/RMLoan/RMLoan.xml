<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<refentry id="RMLoan">
  <refmeta>
    <refentrytitle>BPEL</refentrytitle>
    <refmiscinfo>tutorial</refmiscinfo>
  </refmeta>
  <refnamediv>
      <refname>RMLoan</refname>
      <refpurpose>Reliable Loan Flow process</refpurpose>
  </refnamediv>

  <refsect1 id="RMLoan-a">
    <title>Example</title>
    <para>The example contains code for Reliable Loan Flow.</para>
    <para>
	Invokation of loan services must be done using WS-RM protocol and rules:
    </para>
    <itemizedlist mark="bullet">
	<listitem>The caller must supply a valid WSA header 'ReplyTo' containing a valid response URL.</listitem>
	<listitem>
           The Process must send a reply from a separate HTTP connection to the endpoint
           designated by the caller's ReplyTo WSA header using WS-RM.
        </listitem>
    </itemizedlist>
    <para>To build the example follow the steps bellow:</para>
    <itemizedlist mark="bullet">
      <listitem>This example needs BPEL4WS VAD package to be installed on the server, before trying it. To learn more about VAD please visit http://docs.openlinksw.com/virtuoso/VAD.html.</listitem>
      <listitem>This example depends from the SecLoan example. Make sure there is initial load for this example.</listitem>
      <listitem>The example script creates services for Credit Rating, United Loan and Star Loan.</listitem>
      <listitem>The WSDL descriptions for these services are available via CreditRating.vsp, UnitedLoan.vsp and StarLoan.vsp.</listitem>
      <listitem>On the initial load the BPEL Reliable LoanFlow process will be deployed.</listitem>
    </itemizedlist>
    <para>To run the example follow the steps bellow:</para>
    <itemizedlist mark="bullet">
      <listitem>Login into the BPEL UI via http://host:port/BPELGUI.</listitem>
      <listitem>To enable debugging for the process with name 'SecLoanFlow' check the Debug checkbox in the listing.
        This will cause all instances of the process to run in single-step mode,
        pausing at each send or receive of a message. The debug console allows
        interacting with instances in this mode.
      </listitem>
      <listitem>To test the process click "Test" in the listing. This goes to a page allowing you to enter a start message for creating a new instance of this process.</listitem>
    </itemizedlist>
  </refsect1>
</refentry>
