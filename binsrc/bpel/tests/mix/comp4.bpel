<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<process name="comp_test" 
    targetNamespace="urn:echo:echoService"
    xmlns:tns="urn:echo:echoService"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:bpelv="http://www.openlinksw.com/virtuoso/bpel" 
    xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/">

    <partnerLinks>
	<partnerLink name="caller" partnerLinkType="tns:echoSLT"/>
    </partnerLinks>

    <variables>
	<variable name="request" messageType="tns:StringMessageType"/>
	<variable name="res" messageType="tns:StringMessageType"/>
	<variable name="inx" type="xsd:int"/>
    </variables>

    <sequence name="EchoSequence">

	<receive partnerLink="caller" portType="tns:echoPT" 
	    operation="echo" variable="request"
	    createInstance="yes" name="EchoReceive"/>

	<scope>
	    <faultHandlers>
		<catch faultName="tns:invalidRequest" faultVariable="error">
		    <bpelv:exec binding="SQL">
		      dbg_obj_print ('error catched'); 
		      insert into bpel..comp4_test (dt) values ('error catched');
		    </bpelv:exec>
		    <compensate />	
		    <!--assign>
			<copy>
			    <from expression="'Request is invalid'"/>
			    <to variable="res" part="echoString" query="/echoString"/>
			</copy>
		    </assign-->
		</catch>
	    </faultHandlers>
	    
	    <assign>
		<copy>
		    <from expression="0"/>
		    <to variable="inx"/>
		</copy>
		<copy>
		    <from expression="'Comp4'"/>
		    <to variable="res" part="echoString" query="/echoString"/>
		</copy>
	    </assign>


	    <while condition="getVariableData ('inx') &lt; 3">	
		<scope>
		  <scope>
		  <compensationHandler>
		    <bpelv:exec binding="SQL">
		      dbg_obj_print ('outer compensating;', connection_get ('BPEL_scope_inst'), BPEL.BPEL.getVariableData ('inx')); 
		      insert into bpel..comp4_test (dt) values (sprintf ('outer compensating %s', cast (BPEL.BPEL.getVariableData ('inx') as varchar)));
		    </bpelv:exec>
		    <assign>
			<copy>
			    <from expression="'Request is invalid'"/>
			    <to variable="res" part="echoString" query="/echoString"/>
			</copy>
		    </assign>
		    <compensate/>
		  </compensationHandler>
		    <bpelv:exec binding="SQL">
			dbg_obj_print (BPEL.BPEL.getVariableData ('inx')); 
		    </bpelv:exec>
		    <scope>
			<compensationHandler>
			    <bpelv:exec binding="SQL">
				dbg_obj_print ('inner compensating;', connection_get ('BPEL_scope_inst'), BPEL.BPEL.getVariableData ('inx')); 
		                insert into bpel..comp4_test (dt) values (sprintf ('inner compensating %s', cast (BPEL.BPEL.getVariableData ('inx') as varchar)));
			    </bpelv:exec>
			    <assign>
				<copy>
				    <from expression="'Request is invalid'"/>
				    <to variable="res" part="echoString" query="/echoString"/>
				</copy>
			    </assign>
			</compensationHandler>
			<empty/>
		    </scope>
		    <assign>
			<copy>
			    <from expression="getVariableData ('inx') + 1"/>
			    <to variable="inx"/>
			</copy>
		    </assign>
		 </scope>
		    <switch>
			<case condition="getVariableData ('inx') = 2">
			    <throw faultName="tns:invalidRequest"/> 
			    <empty/>
			</case>
		    </switch>
		</scope>
	    </while>

	    <empty/>

	</scope>

	<reply partnerLink="caller" portType="tns:echoPT" 
	    operation="echo" variable="res" name="EchoReply"/>

    </sequence>

</process>
