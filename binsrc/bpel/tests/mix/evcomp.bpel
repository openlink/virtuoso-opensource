<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<process name="evcomp" 
    targetNamespace="http://temp.org"
    xmlns:tns="http://temp.org"
    xmlns:svc="http://temp.org"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
    xmlns:bpelv="http://www.openlinksw.com/virtuoso/bpel" 
    xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/">

    <partnerLinks>
	<partnerLink name="caller" partnerLinkType="tns:evcompSLT"/>
	<partnerLink name="svc" partnerLinkType="svc:TestService" myRole="TestServiceRequester" partnerRole="TestServiceProvider"/>
    </partnerLinks>

    <variables>
	<variable name="req" messageType="tns:InMessageType"/>
	<variable name="res" messageType="tns:OutMessageType"/>
	<variable name="treq" messageType="tns:TestRequest"/>	
	<variable name="tres" messageType="tns:TestResponse"/>	
	<variable name="creq" messageType="tns:TestCancelRequest"/>	
	<variable name="cres" messageType="tns:TestCancelResponse"/>	
    <variable name="event"
              messageType="tns:TestServiceEventMessage"/>
	<variable name="inx" type="xsd:int"/>
    </variables>

    <sequence>
	<receive partnerLink="caller" portType="tns:evcompPT" 
	    operation="initiate" variable="req"
	    createInstance="yes" name="receive-1"/>
	<scope name="sequence-1">

	    <assign>
		<copy>	
		    <from variable="req" part="request" />
		    <to variable="res" part="result" />
		</copy>	
		<copy>	
		    <from expression="0"/>
		    <to variable="inx" />
		</copy>	
	    </assign>

	    <scope>
		<eventHandlers>
		    <onAlarm for="PT5S">
			<throw faultName="tns:TimeOutExpired"/> 
		    </onAlarm>
		    <onMessage partnerLink="svc" portType="svc:TestServiceCallback" operation="onEvent" variable="event">
			<bpelv:exec binding="SQL">
			dbg_obj_print ('a message arrived');
			</bpelv:exec>
			<throw faultName="tns:TestCanceled"/> 
		    </onMessage>
		</eventHandlers>
		<while condition="true()">
		    <scope>
			<assign>
			    <copy>	
				<from expression="getVariableData ('inx') + 1"/>
				<to variable="inx" />
			    </copy>	
			    <copy>	
				<from variable="inx" />
				<to variable="treq" part="parameters" query="/Test/Seq"/>
			    </copy>	
			</assign>
			    <invoke partnerLink="svc" portType="svc:TestServicePortType" 
				operation="Test" inputVariable="treq" outputVariable="tres">
				<compensationHandler>
				    <sequence>
					<bpelv:exec binding="SQL">
					    dbg_obj_print ('compensating invoke');
					</bpelv:exec>
					<assign>
					    <copy>	
						<from variable="inx" />
						<to variable="creq" part="parameters" query="/TestCancel/Seq"/>
					    </copy>	
					</assign>
					<invoke partnerLink="svc" portType="svc:TestServicePortType" 
					    operation="TestCancel" inputVariable="creq" outputVariable="cres"/>
				    </sequence>
				</compensationHandler>
			    </invoke>
		    </scope>
		</while>
	    </scope>

	</scope>
	<reply partnerLink="caller" portType="tns:evcompPT" 
	    operation="initiate" variable="res" name="reply-1"/>
    </sequence>

</process>
