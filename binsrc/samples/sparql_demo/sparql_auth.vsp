<?vsp 
--  
--  $Id$
--
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--  
--  Copyright (C) 1998-2019 OpenLink Software
--  
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--  
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--  
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--  
--  

  declare _u_name varchar;
  declare _u_id integer;
  
  declare cookie, sid varchar;
  declare vars any;
  declare is_auth int;
  
  is_auth := 0;

  cookie := http_request_header (lines, 'Cookie', null, '');
  sid := '';

  if (cookie <> '') {
    sid := get_keyword ('sid', split_and_decode (cookie, 0, '\0\0;='), '');
    sid := get_keyword (' sid', split_and_decode (cookie, 0, '\0\0;='), sid);
  }
  
  if (sid <> '')
  {
    vars := coalesce ((select deserialize (blob_to_string(VS_STATE)) from DB.DBA.VSPX_SESSION where VS_SID = sid), NULL);
    if (length(vars) > 0)
    {
      is_auth := 1;
      update DB.DBA.VSPX_SESSION set VS_EXPIRY = now () where VS_SID = sid;

      _u_name := get_keyword('u_name',vars);
      _u_id := get_keyword('u_id',vars);
    }
  }
  
  if (not(is_auth))
  {
    declare _auth any;
    _auth := DB.DBA.vsp_auth_vec (lines);
    if (_auth <> 0)
    {
      _u_name := get_keyword ('username', _auth);
      if (_u_name = '' or isnull (_u_name)) goto nf;
      
      declare _u_password varchar;
      {
        whenever not found goto nf;
        select U_ID, U_PWD
	        into _u_id, _u_password from WS.WS.SYS_DAV_USER
	       where U_NAME = _u_name and U_ACCOUNT_DISABLED = 0;
      }
      if (_u_password is null) goto nf;
      
      if (not(DB.DBA.vsp_auth_verify_pass (_auth, _u_name,
				coalesce(get_keyword ('realm', _auth), ''),
				coalesce(get_keyword ('uri', _auth), ''),
				coalesce(get_keyword ('nonce', _auth), ''),
				coalesce(get_keyword ('nc', _auth),''),
				coalesce(get_keyword ('cnonce', _auth), ''),
				coalesce(get_keyword ('qop', _auth), ''),
				_u_password))) goto nf;
      is_auth := 1;
    } else {
      nf:;
      http_request_status ('HTTP/1.1 401 Unauthorized');
		  http_header('WWW-Authenticate: Basic realm="ODS/DAV"');
   	  http('Unauthorized');
   	  return;
   	}
  };

?>