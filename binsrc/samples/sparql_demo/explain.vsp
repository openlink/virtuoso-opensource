<?vsp
--
--  $Id$
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--
--  Copyright (C) 1998-2019 OpenLink Software
--
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--
--

  declare _query varchar;
  declare _rq_state, _rq_msg varchar;
  declare _ms1, _ms2 integer;
  declare _rq_res any;

  declare _lex_list any;
  declare _lex_last_row integer;
  declare _lex_ctr integer;
  declare _lexem any;

  _query := {?'query'};

  _rq_state := '00000';
  _rq_msg := 'OK';
  _ms1 := msec_time();
  _rq_res := exec (concat ('sparql_to_sql_text(',WS.WS.STR_SQL_APOS(_query),')'), _rq_state, _rq_msg);
  _ms2 := msec_time();

  if (_rq_msg <> 'OK')
  {
    http_request_status ('HTTP/1.1 500 Query compilation failed');
    ?><HR><B>Query compilation failed, SQLCODE <?= _rq_state ?>:</B><BR><PRE><XMP><?= _rq_msg ?></XMP></PRE><?vsp
  }
  else
  {

    ?><HR><B>Query compiled successfully.</B> (<?= _ms2 - _ms1 ?> msec.)<BR><?vsp
    _lex_list := sparql_lex_analyze (_query);
    ?><HR><B>All lexemes of query:</B><table><?vsp
    _lex_last_row := -1;
    _lex_ctr := 0;
    while (_lex_ctr < length (_lex_list))
    {
      _lexem := aref (_lex_list, _lex_ctr);
      if (_lex_last_row <> aref (_lexem, 0))
      {
        if (_lex_last_row > 0)
        {
          ?></td></tr><?vsp
        }
        ?><tr><td><?= aref (_lexem, 0) ?></td><td><?vsp
        _lex_last_row := aref (_lexem, 0);
        ?><FONT COLOR="#FFFF00"><?vsp
        http (repeat ('&nbsp;:&nbsp;', aref (_lexem, 1)));
        ?></FONT><?vsp
      }
      if (length(_lexem) > 3)
      {
        ?><B><?= aref (_lexem, 2) ?></B><FONT SIZE=-2><?= aref (_lexem, 3) ?></FONT> <?vsp
      }
      else
      {
        ?><B>??<?= aref (_lexem, 2) ?>??</B><?vsp
      }
      _lex_ctr := _lex_ctr + 1;
    }
    ?></td></tr></table><?vsp

    ?><HR><B>Execution plan:</B><BR><PRE><?= sparql_to_sql_text(_query) ?></PRE><?vsp
    ?><HR><B>Parse tree:</B><BR><PRE><?= sparql_explain(_query) ?></PRE><?vsp
  }
  return;

?>
