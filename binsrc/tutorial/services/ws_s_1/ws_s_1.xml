<!--
 -  
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -  
 -  Copyright (C) 1998-2019 OpenLink Software
 -  
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -  
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -  
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -  
 -  
-->
<?xml version="1.0" encoding="ISO-8859-1"?>
<refentry id="WS-S-1">
  <refmeta>
    <refentrytitle>WS Security</refentrytitle>
    <refmiscinfo>tutorial</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>Making an Secure SOAP Directory</refname>
    <refpurpose>Exposing Secure SOAP Endpoints</refpurpose>
  </refnamediv>

<refsect1 id="WS-S-1a">
<title>Example</title>
<para>
In order to have the rest of examples of this section working, the following steps must be performed.
</para>
<itemizedlist mark="bullet">
 <listitem>The MS WSDK toolkit must be installed on a W2K mashine. The .NET examples are tested with 1.0.0.0 version of Microsoft.WSDK.dll, so make sure that version of that assembly is the same.</listitem>
 <listitem>Make sure that WS Secure examples of MS WSDK are working before trying any of interoperabilty examples.</listitem>
 <listitem>From this page run setup script (set the initial state), this will define symmetric keys, there is also included a x.509 import, but it's only for demonstration. </listitem>
<listitem>To make your WSDK applications to work with Virtuoso you need to export from W2K box the certificate and import with registration page on this example.</listitem>
<listitem>The setup script also defines a SOAP secure directory (/SecureWebServices) which is used in the rest of the examples.</listitem>
</itemizedlist>

<para>
The SOAP directory options we are using to secure the messages are:
</para>
<itemizedlist mark="bullet">
<listitem> WSS-SEC - yes/no , this is to enable WS secure processing</listitem>
<listitem> WSS-KEY - name of procedure , which will return a key instance to encrypt the outbound messages</listitem>
<listitem> WSS-Template - string or null, content of signature template, in that examples we will not make signatures on outbound messages. How to make signatures is explained in the x.509 siging example.</listitem>
<listitem> WSS-Type - 1/0 to make signature or to encrypt only</listitem>
<listitem> WSS-Validate-Signature - 0/1/2 - do not validate, validate signature, validate if exists
 in our examples we will accept both of variants, so 2 is used.</listitem>
</itemizedlist>

</refsect1>
</refentry>
