<?vsp
--
--  $Id$
--
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--
--  Copyright (C) 1998-2019 OpenLink Software
--
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--
--

  declare akey, bid, id varchar;
  declare userid int;
  declare tit, rss, home, cat, ups, is_def, kwds varchar;

  adm_pre_page(lines);

if (http_dav_uid () <> (userid := adm_dav_check_auth (lines, 1)))
  {
    http_request_status ('HTTP/1.1 401 Unauthorized');
    http ( concat ('<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">',
	  '<HTML><HEAD>',
	  '<TITLE>401 Unauthorized</TITLE>',
	  '</HEAD><BODY><H1>Unauthorized</H1>',
          'Access to page is forbidden.</BODY></HTML>'));
    return (0);
  }

  bid := {?'bid'}; cat := '';

  if (bid is null or bid = '' or {?'cncl'} = 'Back')
    {
      http_request_status ('HTTP/1.1 302 Found');
      if (length (bid))
	http_header (sprintf ('Location: admin_blog_2.vsp?bid=%s\r\n', bid));
      else
	http_header ('Location: admin_blog.vsp\r\n');
      return;
    }

  id := coalesce ({?'id'}, ''); kwds := get_keyword ('kwds', params, '');
  declare blog_name varchar;
  blog_name := coalesce ((select BI_TITLE from SYS_BLOG_INFO where BI_BLOG_ID = bid), bid);

  rss := null; home := null; tit := null; is_def := 0;

  if ({?'delete'} is not null)
    {
      delete from MTYPE_CATEGORIES where MTC_BLOG_ID = bid and MTC_ID = id;
      id := '';
    }
  if ({?'edit'} is not null or id <> '')
    {
      select MTC_NAME, coalesce (MTC_ROUTING, 0), MTC_DEFAULT, blob_to_string (MTC_KEYWORDS) into cat, ups, is_def, kwds from MTYPE_CATEGORIES where MTC_BLOG_ID = bid and MTC_ID = id;
    }
  if ({?'post'} = 'Save' or {?'add'} is not null)
    {
      is_def := atoi (get_keyword ('is_def', params, '0'));
      cat := {?'cat'};
      ups := atoi ({?'ups'});
      if (is_def)
        {
          update MTYPE_CATEGORIES set MTC_DEFAULT = 0 where MTC_BLOG_ID = bid;
        }
      if (id = '')
        {
           id := cast (sequence_next ('category.'||bid) as varchar);
           insert into MTYPE_CATEGORIES (MTC_ID, MTC_BLOG_ID, MTC_NAME, MTC_ROUTING, MTC_DEFAULT, MTC_KEYWORDS) values (id, bid, {?'cat'}, atoi ({?'ups'}), is_def, kwds);
        }
      else
	update MTYPE_CATEGORIES set MTC_NAME = {?'cat'}, MTC_ROUTING = atoi ({?'ups'}), MTC_DEFAULT = is_def, MTC_KEYWORDS = kwds where
	    MTC_BLOG_ID = bid and MTC_ID = id;
      if ({?'post'} = 'Save')
        {
          id := ''; is_def := 0; kwds := ''; cat := ''; is_def := 0; ups := 0;
        }
    }
  if ({?'add'} = 'Add' and id <> '')
    {
      declare qry any;
      qry := {?'tquery'};
      exec ('vt_parse (?)', null, null, vector (qry));
      TT_QUERY_SYS_BLOGS (qry, userid, '', '', bid, id);
    }
  if (id <> '')
   {
     declare i, l int;
     declare ttid int;
     declare act any;

     i := 0; l := length (params);
     while (i < l)
       {
         if (params[i] like 'edit_%')
           {
             ttid := atoi (substring (params[i], 6, length (params[i])));
	     act := 'edit';
             i := l;
           }
         else if (params[i] like 'delete_%')
           {
             ttid := atoi (substring (params[i], 8, length (params[i])));
             act := 'delete';
             i := l;
           }
         i := i + 1;
       }
     if (act = 'delete' or act = 'edit')
       {
	 delete from SYS_BLOGS_B_CONTENT_QUERY where TT_ID = ttid;
	 delete from SYS_BLOGS_B_CONTENT_USER where TTU_T_ID = ttid;
	 delete from SYS_BLOGS_B_CONTENT_HIT where TTH_T_ID = ttid;
       }
     if (act = 'edit')
       {
         declare qry any;
         qry := get_keyword (sprintf ('tquery_%d', ttid), params);
         exec ('vt_parse (?)', null, null, vector (qry));
         TT_QUERY_SYS_BLOGS (qry, userid, '', '', bid, id);
       }
   }

  if ({?'update_all'} is not null)
    {
	for select distinct TT_QUERY, TT_PREDICATE, TT_ID from SYS_BLOGS_B_CONTENT_QUERY
	where TT_CD = bid and TT_XPATH is null do
	  {
	     for select B_POST_ID, B_BLOG_ID, B_USER_ID, B_CONTENT_ID from SYS_BLOGS where
	       B_BLOG_ID = bid and contains (B_CONTENT, TT_QUERY) do
	       {
		 insert soft SYS_BLOGS_B_CONTENT_HIT (TTH_U_ID, TTH_T_ID, TTH_D_ID) values
		 (B_USER_ID, TT_ID, B_CONTENT_ID);
	       }
	  }
    }

?>

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">

<html>
  <head>
    <link rel="stylesheet" type="text/css" href="<?=adm_what_css()?>">
    <title>BLOG Administration</title>
    <meta name="AUTHOR" content="OpenLink Software">
    <meta name="DESCRIPTION" content="BLOG Management for Virtuoso DB">
  </head>
<?vsp adm_page_header('BLOG Administration', ''); ?>

    <H4><?=blog_name?></H4>
    <form method="POST" action="admin_blog_category.vsp">
    <TABLE class="genlist" BORDER="0" CELLPADDING="0" CELLSPACING="2">
      <TR><TD class="genhead" COLSPAN="2">New category</TD></TR>
      <TR><TD CLASS="AdmBorders" COLSPAN="2"><IMG SRC="images/1x1.gif" WIDTH="1" HEIGHT="2" ALT=""></TD></TR>
      <input type="hidden" name="bid" value="<?=bid?>">
      <input type="hidden" name="id" value="<?=id?>">
      <tr>
        <td class="geninput">Description</td>
        <td class="geninput"><input type="text" name="cat" size="70%" value="<?= cat ?>" />
	<input type="hidden" name="kwds" size="70%" value="<?= kwds ?>" />
	</td>
      </tr>
      <tr>
        <td class="geninput">Triggers for automatic <br> category association</td>
        <td class="geninput">
	   <table border="0">
	     <?vsp
               for select distinct TT_ID, coalesce (TT_XPATH, TT_QUERY) QUERY, isnull(TT_XPATH) FT
	       from SYS_BLOGS_B_CONTENT_QUERY where TT_CD = bid
		and TT_PREDICATE = id order by QUERY
                do {
             ?>
	     <tr>
	        <td><input type="text" name="tquery_<?V TT_ID ?>" size="50" value="<?V QUERY ?>"></td>
	        <td>
                   <select name="ttype_<?V TT_ID ?>">
		     <option>TEXT
	           </select>
		</td>
	        <td>
		   <input type="submit" name="edit_<?V TT_ID ?>" value="Update">
		   <input type="submit" name="delete_<?V TT_ID ?>" value="Delete">
		</td>
	     </tr>
	     <?vsp
		   }
             ?>
	     <tr>
	        <td><input type="text" name="tquery" size="50"></td>
	        <td>
                   <select name="ttype">
		     <option>TEXT
	           </select>
		</td>
	        <td><input type="submit" name="add" value="Add"></td>
	     </tr>
	   </table>
	</td>
      </tr>
      <tr>
        <td class="geninput">Upstreaming</td>
        <td class="geninput">
	<select name="ups" >
	 <option value="1" <?= select_if (1, ups) ?>>enabled
	 <option value="0" <?= select_if (0, ups) ?>>disabled
	 </select>
	</td>
      </tr>
      <tr>
        <td class="geninput">Is default</td>
        <td class="geninput">
		<input type="checkbox" name="is_def" value="1" <?= check_if (1, is_def) ?>/>
	</td>
      </tr>

      <tr>
        <td class="geninput" COLSPAN="2">
	<input type="submit" name="post" value="Save" />
	<input type="submit" name="cncl" value="Back" />
	</td>
      </tr>
    </TABLE>

<?vsp adm_page_break(); ?>

<div align="left"><input type="submit" name="update_all" value="Auto Categorize Uncategorized Posts"></div>
</form>
<TABLE class="genlist" BORDER="0" CELLPADDING="0">
<TR><TD class="genhead" COLSPAN="5">Categories</TD></TR>
<TR><TD CLASS="AdmBorders" COLSPAN="5"><IMG SRC="images/1x1.gif" WIDTH="1" HEIGHT="2" ALT=""></TD></TR>

            <tr>
		<th class="genlistheadt">Description</th>
		<th class="genlistheadt">Upstreaming</th>
		<th class="genlistheadt">Action</th>
             </tr>
<?vsp
    for select MTC_BLOG_ID, MTC_ID, MTC_NAME, MTC_ROUTING, MTC_DEFAULT from MTYPE_CATEGORIES where MTC_BLOG_ID = bid do
      {
?>
       <TR>
         <TD class="gendata"><?= MTC_NAME ?><?vsp if (MTC_DEFAULT) http ('<small> (default)</small>'); ?></TD>
         <TD class="gendata"><?= case when MTC_ROUTING is null or MTC_ROUTING = 0 then 'disabled' else 'enabled' end ?></TD>
         <TD class="gendata">
	   <a href="admin_blog_category.vsp?bid=<?=bid?>&id=<?=MTC_ID?>&edit">Edit</a>
	   <a href="admin_blog_category.vsp?bid=<?=bid?>&id=<?=MTC_ID?>&delete">Delete</a>
	 </TD>
       </TR>
<?vsp
      }
?>

</TABLE>
<?vsp adm_page_footer(); ?>
</html>

