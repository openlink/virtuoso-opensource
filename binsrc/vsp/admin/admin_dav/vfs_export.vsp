<?vsp
--
--  $Id$
--
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--
--  Copyright (C) 1998-2019 OpenLink Software
--
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--
--

 adm_pre_page(lines);
?>
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
<head>
    <link rel="stylesheet" type="text/css" href="<?=adm_what_css()?>">
    <meta name="AUTHOR" content="OpenLink Software">
    <meta name="DESCRIPTION" content="Web robot downloaded sites export">
<title>Web site export</title>
</head>
<?vsp adm_page_header('Site Export', NULL); ?>
<?include ../adm_js_check.vsp ?>
<?vsp
--no_c_escapes-
declare _site_name, _host, _root, _dst, _url, _method, _act varchar;
declare _rc integer;
_method := '';
_act := 'vfs_export.vsp';
_host := get_keyword ('host',params);
_root := get_keyword ('root',params);
_url := get_keyword ('url',params);
_dst := get_keyword ('dst',params);
_method := get_keyword ('method',params);
if (DB.DBA.adm_dav_check_auth (lines) <> 1)
  {
    http_request_status ('HTTP/1.1 401 Unauthorized');
    http ( concat ('<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">',
	  '<HTML><HEAD>',
	  '<TITLE>401 Unauthorized</TITLE>',
	  '</HEAD><BODY><H1>Unauthorized</H1>',
	  'Access to page is forbidden.</BODY></HTML>'));
    return (0);
  }
if ('Cancel' = get_keyword ('Cancel', params))
  _act := 'admin_vfs_export_main.vsp';
select VS_DESCR into _site_name from WS.WS.VFS_SITE where VS_HOST = _host and VS_ROOT = _root and VS_URL = _url;
?>

<form method="post" action="<?= _act ?>">
<TABLE CLASS="genlist" BORDER="0" CELLPADDING="0">
<tr><td CLASS="genlisthead">Selected Site</td><td CLASS="gendata">
<b><?= _site_name ?></b>
</td></tr>
<tr><td CLASS="genlisthead">Select Method</td><td>
<table size="100%">
<tr><td CLASS="gendata">File System</td><td>
<input type="radio" name="method" value="fs" checked>
</td><td CLASS="gendata">DAV</td><td>
<input type="radio" name="method" value="dav">
</td></tr>
</table></td></tr>
<tr><td CLASS="genlisthead">Destination path</td><td>
<input type="text" value="" name="dst" size="60%">
</td></tr>
<tr><td colspan="2" align="right">
	<input type="Button" value="Cancel" name="Cancel" onclick="location.replace ('admin_vfs_export_main.vsp')">
	<input type="Submit" value="Export" name="Export">
</td></tr>
</table>
<input type="hidden" value="<?= _root ?>" name="root">
<input type="hidden" value="<?= _host ?>" name="host">
<input type="hidden" value="<?= _url ?>" name="url">
</form>
<?vsp
if ('Export' = get_keyword ('Export', params))
  {
    if (not WS.WS.isempty (_host) and not WS.WS.isempty (_root) and not WS.WS.isempty (_url)
	and not WS.WS.isempty (_dst))
      {
	if (aref (_root, 0) = ascii ('/'))
	  _root := substring (_root, 2, length (_root));

	if (_method = 'fs')
	  {
	    DECLARE EXIT HANDLER FOR sqlexception { _rc := __SQL_MESSAGE; };
	    {
	      _rc := WS.WS.LFS_EXP (_host, _url, _root, _dst);
	    }
	  }
	else if (_method = 'dav')
	  _rc := WS.WS.DAV_EXP (_host, _url, _root, _dst);
	if (_rc <> 0)
	  {
	    http ('<P class="errorhead"><strong>Error while export collection</strong><br>');
	    if (isstring (_rc))
	       http (sprintf ('<b>Error: %s</b>', _rc));
	    else if (isnumeric (_rc))
	       http (sprintf ('<b>Error number: %d</b>', _rc));
	    else
	       http ('<b>Unspecified error</b>');
	    http ('</P>');

	  }
	else
	  {
	    if (length (_dst) > 2)
	      {
		if (aref (_dst, 1) = ascii (':'))
		  {
		    if (aref (_dst, 2) = ascii ('\\'))
		      _dst := replace (_dst, '\\', '/');
		  }
	      }
	    if (aref (_dst, length (_dst) - 1) <> ascii ('/'))
	      _dst := concat (_dst, '/');
	    http (concat ('<strong>Exported to: ', _dst, _root,'</strong>'));
	  }
      }
    else
      {
	    http ('<P class="errorhead"><strong>Error while export collection</strong><br>');
	    http ('<strong>Error: Destination path/URL must be supplied.</strong>');
	    http ('</P>');
      }
  }
?>
<?vsp adm_page_footer(); ?>
</html>
