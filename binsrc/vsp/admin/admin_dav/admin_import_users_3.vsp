<?vsp
--
--  $Id$
--
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--
--  Copyright (C) 1998-2019 OpenLink Software
--
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--
--
 adm_pre_page(lines);

  declare host, port, base, bind, pwd, res, src, sid any;
  declare maps any;

  sid := adm_get_sesid (params);
  if (DB.DBA.adm_dav_check_auth (lines) <> 1)
    {
      adm_tell_unauth_dav (lines);
      return (0);
    }
  maps := vector ();
  res := vector ();
  if ({?'import'} is not null)
    {
      declare dt any;
      declare j, k int;
      k := length (params);
      for (j := 0; j < k; j := j + 2)
        {
	  if (params[j] like 'data_%')
	    {
	      dt := deserialize (decode_base64 (params[j+1]));
              if (get_keyword ('cb_'||dt[0], params) = 'on')
                {
		  declare exit handler for sqlstate '*'
		  {
                    rollback work;
                    aset (dt, 4, __SQL_MESSAGE);
		    aset (res, length (res)-1,dt);
		    goto next;
		  };
		  aset (dt, 4, 'OK');
                  res := vector_concat (res, vector (dt));
		  if (not exists (select 1 from SYS_USERS where U_NAME = dt[0]))
                    {
		      USER_CREATE (dt[0], case when length(dt[3]) > 0 then dt[3] else dt[0] end,
			vector ('FULL_NAME', dt[1], 'E-MAIL', dt[2], 'DAV_ENABLE', 1, 'SQL_ENABLE', 0));
                    }
                  else
		    {
		      aset (dt, 4, 'Already exists in the Database');
		      aset (res, length (res)-1,dt);
		    }
		  commit work;
		}
	     next:;
            }
        }

    }
  if (
	{?'finish'} is not null or
	{?'cancel'} is not null
     )
   {
      http_request_status ('HTTP/1.1 302 Found');
      http_header ('Location: admin_dav_users.vsp\r\n');
      return 0;
   }
?>
<html>
  <head>
    <link rel="stylesheet" type="text/css" href="<?=adm_what_css()?>">
    <title>WebDAV User Accounts</title>
    <meta name="AUTHOR" content="OpenLink Software">
    <meta name="DESCRIPTION" content="Importing a users from LDAP">
  </head>
<?vsp adm_page_header('WebDAV User Accounts', 'davuseradm');
?>

<TABLE CLASS="genlist" BORDER="0" CELLPADDING="0">

<tr><td COLSPAN="3" CLASS="genhead">Import result</td></tr>
<TR><TD CLASS="AdmBorders" COLSPAN="3"><IMG SRC="../images/1x1.gif" WIDTH="1" HEIGHT="2" ALT=""></TD></TR>
<form method="POST" action="admin_import_users_3.vsp">
<tr>
<td class="genlistheadt">
    Login Name
</td><td class="genlistheadt">Name</td>
<td  CLASS="genlistheadt">Status</a></td>
</tr>
<input type="hidden" name="sid" value="<?= sid ?>">
<?vsp
     declare i, l int;
     declare ar any;
     declare uid, name, stat varchar;
     i := 0; l := length (res);
     while (i < l)
       {
	    uid := res[i][0];
	    name := res[i][1];
	    stat := res[i][4];
  ?>
            <tr>
	    <td class="gendata"><?= uid ?></td><td class="gendata"><?= name ?></td>
	    <td  CLASS="gendata"><?= stat ?></td>
	    </tr>
<?vsp
	 i := i + 1;
       }
     ?>
       <tr>
        <td  CLASS="geninput" colspan="3">
	<input type="submit" name="finish" value="Finish">
	</td>
       </tr>
    </table>
<?vsp adm_page_footer(); ?>
</html>

