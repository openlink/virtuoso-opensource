<?vsp
--
--  $Id$
--
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--
--  Copyright (C) 1998-2019 OpenLink Software
--
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--
--

 adm_pre_page(lines);

  if (not adm_check_auth (lines)) {adm_tell_unauth(lines); return (0);}
  declare _idx integer;
  declare _item varchar;
  declare _item_type integer;
  declare _state, _msg varchar;
  declare _interval integer;
  _item := get_keyword ('item', params, '');
  _item_type := atoi (get_keyword ('item_type', params, '0'));
?>

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <link rel="stylesheet" type="text/css" href="<?=adm_what_css()?>">
    <meta name="AUTHOR" content="OpenLink Software">
    <meta name="DESCRIPTION" content="Bidirectional snapshot replication wizard">
    <title>Bidirectional Snapshot Replication: <?=_item?></title>
  </head>
<?vsp
  adm_page_header(
      sprintf ('Bidirectional Snapshot Replication: %s', _item),
      NULL);
  if (get_keyword ('InitCopy', params, '') <> '')
    {
      _idx := 0;
      declare _server varchar;
      while (_server := adm_next_checkbox ('SB_', params, _idx))
	{
          declare continue handler for sqlstate '*' {
            http(sprintf ('Error: %s: %s<br>',
                     cast (__SQL_STATE as varchar), __SQL_MESSAGE));
          };
          REPL_INIT_SNAPSHOT (_server, _item, _item_type);
        }
    }
  if (get_keyword ('Delete', params, '') <> '')
    {
      _idx := 0;
      declare _server varchar;
      while (_server := adm_next_checkbox ('SB_', params, _idx))
	{
          declare continue handler for sqlstate '*' {
            http(sprintf ('Error: %s: %s<br>',
                     cast (__SQL_STATE as varchar), __SQL_MESSAGE));
          };
          REPL_DROP_SNAPSHOT_SUB (_server, _item, _item_type);
        }
    }
  if (get_keyword ('Set', params, '') <> '')
    {
      _interval := atoi (get_keyword ('interval', params, '10'));
      if (_interval > 0)
        {
	  insert replacing SYS_SCHEDULED_EVENT (SE_NAME, SE_START, SE_INTERVAL, SE_SQL)
	      values (_item, now (), _interval,
                      sprintf ('REPL_UPDATE_SNAPSHOT(''%s'', %d)',
                          _item, _item_type));
        }
      else
	delete from SYS_SCHEDULED_EVENT where SE_NAME = _item;
    }
  if ('Save' = get_keyword ('save', params, ''))
    {
      declare _stmt varchar;
      _stmt := get_keyword ('stmt', params, '');

      _state := '00000';
      _msg := '';
      if (exec (_stmt, _state, _msg) <> 0)
        http (sprintf ('Error: %s: %s<br>', _state, _msg));
    }
  else if (get_keyword ('del', params, '') <> '')
    {
      declare _cr_id varchar;
      declare _idx integer;
      _idx := 0;
      while (_cr_id := adm_next_checkbox ('CB_', params, _idx))
        {
          _state := '00000';
          _msg := '';
          declare _crtbl varchar;
          if (_item_type = 1)
            _crtbl := 'DB.DBA.SYS_DAV_CR';
          else
            _crtbl := 'DB.DBA.SYS_SNAPSHOT_CR';
          if (exec (sprintf ('delete from %s where CR_ID = ?', _crtbl),
                  _state, _msg, vector (_cr_id)) <> 0)
            http (sprintf ('Error: %s: %s<br>', _state, _msg));
        }
    }
  else if ('Add' = get_keyword ('add', params, ''))
    {
      declare _suffix, _order, _type, _class, _col varchar;
      _suffix := get_keyword ('suffix', params, '');
      _order := get_keyword ('order', params, '');
      _type := get_keyword ('type', params, '');
      _class := get_keyword ('class', params, '');
      _col := get_keyword ('col', params, '');

      if (_order = '')
        _order := '100';

      declare _err any;
      declare _stmt varchar;
      declare _params any;
      if (_item_type = 1)
        {
          _stmt := 'REPL_ADD_DAV_CR (?, ?, ?, ?)';
          _params := vector (_item, _suffix, _order, _class);
        }
      else
        {
          _stmt := 'REPL_ADD_SNAPSHOT_CR (?, ?, ?, ?, ?, ?)';
          _params := vector (_item, _suffix, _type, _order, _class, _col);
        }
      _state := '00000';
      _msg := '';
      if (0 <> exec (_stmt, _state, _msg, _params))
        http (sprintf ('Error: %s: %s<br>', _state, _msg));
    }
?>
<form action="snp_bidir_edit.vsp" method="post">
<input type="hidden" name="item" value="<?=_item?>">
<input type="hidden" name="item_type" value="<?=_item_type?>">
<TABLE CLASS="genlist" BORDER="0" CELLPADDING="0">
<TR><TD CLASS="genhead" COLSPAN="5">Subscriptions</TD></TR>
<TR><TD CLASS="AdmBorders" COLSPAN="5"><IMG SRC="../images/1x1.gif" WIDTH="1" HEIGHT="2" ALT=""></TD></TR>
<tr>
<td CLASS="genlistheadt">Subscriber</td>
<td CLASS="genlistheadt">Last Pull</td>
<td CLASS="genlistheadt">Last Push</td>
<td CLASS="genlistheadt">Sel</td>
</tr>
<?vsp
  declare _count integer;
  _count := 0;

  declare _pull_ts, _push_ts, _prefix varchar;
  for select SS_SERVER, SS_LAST_PULL_TS, SS_LAST_PUSH_TS
      from DB.DBA.SYS_SNAPSHOT_SUB
      where SS_ITEM = _item and SS_TYPE = _item_type
      order by SS_SERVER do
    {
      _count := _count + 1;
      _pull_ts := 'never';
      if (SS_LAST_PULL_TS is not null)
	_pull_ts := substring (cast (SS_LAST_PULL_TS as varchar), 1, 19);
      _push_ts := 'never';
      if (SS_LAST_PUSH_TS is not null)
	_push_ts := substring (cast (SS_LAST_PUSH_TS as varchar), 1, 19);
?>
<tr>
<td CLASS="gendata"><?=SS_SERVER?></td>
<td align="center" CLASS="gendata"><?=_pull_ts?></td>
<td align="center" CLASS="gendata"><?=_push_ts?></td>
<td CLASS="geninput">
<input type="checkbox" name="SB_<?=SS_SERVER?>">
</td>
</tr>
<?vsp
    }
  if (_count = 0)
    {
      http ('<tr><td colspan="4" CLASS="gendata" align="center">*** No subscriptions ***</td></tr>');
    }
?>
<tr><td colspan="4" align="right">
<table class="genlist" border="0" cellpadding="0">
<tr>
<?vsp
  if (_count > 0)
    {
?>
       <td><input type=submit name="InitCopy" value="Initial Copy"></td>
       <td><input type=submit name="Delete" value="Delete"></td>
<?vsp
    }

  _interval := coalesce ((select SE_INTERVAL from SYS_SCHEDULED_EVENT where SE_NAME = _item), 'none');
?>
</form>
<td>
<form action="snp_bidir_new_subscriber.vsp" method="post">
<input type="hidden" name="item" value="<?=_item?>">
<input type="hidden" name="item_type" value="<?=_item_type?>">
<input type="submit" name="New" value="New">
</form>
</td>
</table>
</td></tr>
</table>
<form action="snp_bidir_edit.vsp" method="post">
<input type="hidden" name="item" value="<?=_item?>">
<input type="hidden" name="item_type" value="<?=_item_type?>">
<TABLE CLASS="genlist" BORDER="0" CELLPADDING="0">
<TR><TD CLASS="genhead" COLSPAN="5">Update Interval</TD></TR>
<TR><TD CLASS="AdmBorders" COLSPAN="5"><IMG SRC="../images/1x1.gif" WIDTH="1" HEIGHT="2" ALT=""></TD></TR>
<tr>
<td CLASS="genlistheadt">Update interval (minutes)</td>
<td class="gendata"><input type="text" name="interval" value="<?=_interval?>">
</tr>
<tr>
<td colspan="2" align="right"><input type="submit" name="Set" value="Set">
</tr>
</table>
<?vsp
  _count := 0;
  if (_item_type = 1)
    {
?>
<table class="genlist" border="0" cellpadding="0">
<tr><td class="genhead" colspan="3">Conflict Resolvers</td></tr>
<tr>
<td class="genlistheadt">Sel</td>
<td class="genlistheadt">Proc</td>
<td class="genlistheadt">Order</td>
</tr>
<?vsp
      for select CR_ID, CR_COL_NAME, CR_PROC, CR_ORDER
              from DB.DBA.SYS_DAV_CR where CR_COL_NAME = _item
              order by CR_ORDER do
        {
          _count := _count + 1;
          declare _cr_proc varchar;
          _cr_proc := replace (CR_PROC, '"', '');
?>
<tr>
<td class="geninput"><input type="checkbox" name="CB_<?=CR_ID?>"></td>
<td class="gendata"><a href="../admin_trx_repl/trx_repl_cr_edit.vsp?item=<?=_item?>&item_type=<?=_item_type?>&proc=<?=_cr_proc?>"><?=_cr_proc?></href></td>
<td class="gendata"><?=CR_ORDER?></td>
</tr>
<?vsp
        }
      if (_count = 0)
        {
          http ('<tr><td class="gendata" colspan="3">*** No conflict resolvers defined for this collection ***</td></tr>');
        }
?>
<tr><td colspan="3" align="right">
<?vsp
    }
  else
    {
?>
<table class="genlist" border="0" cellpadding="0">
<tr><td class="genhead" colspan="4">Conflict Resolvers</td></tr>
<tr>
<td class="genlistheadt">Sel</td>
<td class="genlistheadt">Type</td>
<td class="genlistheadt">Proc</td>
<td class="genlistheadt">Order</td>
</tr>
<?vsp
      for select CR_ID, CR_TABLE_NAME, CR_TYPE, CR_PROC, CR_ORDER
              from DB.DBA.SYS_SNAPSHOT_CR where CR_TABLE_NAME = _item
              order by CR_TYPE, CR_ORDER do
        {
          _count := _count + 1;
          declare _cr_proc varchar;
          _cr_proc := replace (CR_PROC, '"', '');
?>
<tr>
<td class="geninput"><input type="checkbox" name="CB_<?=CR_ID?>"></td>
<td class="gendata"><?=CR_TYPE?></td>
<td class="gendata"><a href="../admin_trx_repl/trx_repl_cr_edit.vsp?item=<?=_item?>&item_type=<?=_item_type?>&proc=<?=_cr_proc?>"><?=_cr_proc?></href></td>
<td class="gendata"><?=CR_ORDER?></td>
</tr>
<?vsp
        }
      if (_count = 0)
        {
          http ('<tr><td class="gendata" colspan="4">*** No conflict resolvers defined for this table ***</td></tr>');
        }
?>
<tr><td colspan="4" align="right">
<?vsp
    }
?>
<table class="genlist" border="0" cellpadding="0">
<tr>
<?vsp
  if (_count > 0)
    {
?>
<td><input type="submit" name="del" value="Remove"></td>
<?vsp
    }
?>
</form>
<form method="post" action="../admin_trx_repl/trx_repl_cr_new.vsp">
<input type="hidden" name="item" value="<?=_item?>">
<input type="hidden" name="item_type" value="<?=_item_type?>">
<td><input type="submit" name="add" value="Add"></td>
</form>
</tr>
</table>
</table>
<?vsp
end_st:
  adm_page_footer();
?>
</html>
