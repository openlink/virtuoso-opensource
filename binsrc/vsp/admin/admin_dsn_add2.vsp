<?vsp
--
--  $Id$
--
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--
--  Copyright (C) 1998-2019 OpenLink Software
--
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--
--

  declare idx, len integer;
  declare _driver, _type, _step varchar;
  declare _err, _parameter, name_out varchar;
  declare _driver_str, _driver_def, _driver_end any;

  _driver := deserialize (decode_base64 (get_keyword ('driver', params, '')));
  _driver_str := deserialize (decode_base64 (get_keyword ('driver_str', params, '')));
  _driver_def := deserialize (decode_base64 (get_keyword ('driver_def', params, '')));
  _driver_end := deserialize (decode_base64 (get_keyword ('driver_end', params, '')));
  _type := get_keyword ('type', params, '');
  _step := get_keyword ('step', params, '');
  _parameter := get_keyword ('parameter', params, '');
  _err:='';

  if (not(is_empty_or_null (get_keyword ('reset', params, ''))))
    {
      _driver_end := _driver_def;
      _parameter := '';
      _step := '1';
    }

  if (not(is_empty_or_null (get_keyword ('add', params, ''))))
    {
      len := length (_driver_str);
      idx := 1;
      while (idx < len)
	{
	  aset (_driver_end, idx, get_keyword ( aref (_driver_str, idx), params, ''));
	  idx := idx + 1;
	}
      if (not (is_empty_or_null (get_keyword ('DSN', params, ''))))
      	{
	  If (sql_config_data_sources (_driver, _type, constru_string (params, _driver_end)))
	    {
	?>
		  <script language="JavaScript">
		     location.replace ('admin_dsn_add3.vsp')
		  </script>
	<?vsp
	    }
	  else
	    _err:='Bad or small parameters';
	}
      else
	_err:='* Name Requirement';
    }

?>

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">

<HTML>
  <head>
  <link rel="stylesheet" TYPE="text/css" href="<?=adm_what_css()?>">
    <title>ODBC Data Source Administration</title>
    <meta NAME="AUTHOR" content="OpenLink Software">
    <meta NAME="DESCRIPTION" content="Link External DSN into Virtuoso using VSP">
  </head>
  <BODY CLASS="adm_pages_body">
  <?vsp adm_page_header('Add New Data Source', NULL); ?>
  <TR><TD CLASS="ctrlmain"><IMG SRC="images/1x1.gif" WIDTH="1" HEIGHT="15" ALT=""></TD>
  <TD CLASS="ctrlmain" ROWSPAN="2" WIDTH="40%">
        <div CLASS="helptext">
		 <p CLASS="helptitle">Help</p>
        <P>All Data Sources require a name and use various parameters to instruct their driver as to how to connect to the target source.</P>
		 <P>Enter parameters in the parameters text area as key-value pairs such as: <B>Key=Value;</B> where Key is the parameter name.</P>
        </div>
    </TD></TR>
  </TD>
  </TR>
  <TR><TD CLASS="ctrlmain" >
<?vsp
  if (_err <> '')
    http (sprintf ('%s', _err));
?>
  <FORM method="POST" action="admin_dsn_add2.vsp">
<TABLE CLASS="genlist" BORDER="0" CELLPADDING="0">
  <TR><TD CLASS="genhead" COLSPAN="2">New ODBC Data Source: <?=_driver?></TD></TR>
  <TR><TD CLASS="AdmBorders" COLSPAN="2"><IMG SRC="images/1x1.gif" WIDTH="1" HEIGHT="2" ALT=""></TD></TR>

<?vsp
  if (_step = '1')
    {
      if ((adm_dsn_exist (_type, _driver)) is NULL)
	_driver_end := _driver_def;
      else
	convert_exist (_type, _driver, _driver_str, _driver_end);
      _step := '2';
    }
  len := length (_driver_str);
  idx := 1;
  while (idx < len)
  {
    name_out := aref (_driver_str, idx);
    http (sprintf ('<TR><TD CLASS="genlisthead">%s</TD><TD>
	    	    <INPUT TYPE="text" NAME="%s" VALUE="%s" SIZE="30"></TD></TR>'
  		    , name_out, name_out, aref (_driver_end, idx)));
    idx := idx + 1;
  }
  _driver := encode_base64 (serialize (_driver));
  _driver_str := encode_base64 (serialize (_driver_str));
  _driver_def := encode_base64 (serialize (_driver_def));
  _driver_end := encode_base64 (serialize (_driver_end));
?>

    <TR><TD CLASS="AdmBorders" COLSPAN="2"><IMG SRC="images/1x1.gif" WIDTH="1" HEIGHT="2" ALT=""></TD></TR>
    <TR><TD CLASS="genlistheadt" COLSPAN="2">Parameters: </TD>
    <TR><TD COLSPAN="2" ALIGN="left">
    <TEXTAREA WRAP="off" NAME="parameter" COLS="50" ROWS="8"><?=_parameter?></TEXTAREA>
    </TD></TR>
    <TR><TD COLSPAN="2" ALIGN="right">
      <INPUT TYPE="submit" NAME="add" VALUE="Add">
      <INPUT TYPE="submit" NAME="reset" VALUE="Default">
    </TD></TR>
  </TABLE>
  <INPUT TYPE="hidden" NAME="step" VALUE="<?=_step?>">
  <INPUT TYPE="hidden" NAME="TYPE" VALUE="<?=_type?>">
  <INPUT TYPE="hidden" NAME="driver" VALUE="<?=_driver?>">
  <INPUT TYPE="hidden" NAME="driver_str" VALUE="<?=_driver_str?>">
  <INPUT TYPE="hidden" NAME="driver_def" VALUE="<?=_driver_def?>">
  <INPUT TYPE="hidden" NAME="driver_end" VALUE="<?=_driver_end?>">
  </FORM>
</TD></TR>
  <TR><TD CLASS="ctrlmain" COLSPAN="2"><IMG SRC="images/1x1.gif" WIDTH="1" HEIGHT="15"></TD></TR>
</TABLE>
<?include admin_footer.vsp ?>
</BODY>
</HTML>
