<?vsp
--
--  $Id$
--
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--
--  Copyright (C) 1998-2019 OpenLink Software
--
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--
--

  if (not adm_check_auth(lines))
    {
      adm_unauth_response ();
      return(0);
    }
  declare oper_vector any;
  oper_vector := "VAD"."DBA"."RETRIEVE_HTTP_PARS" (params);

  declare act varchar;
  act := "PUMP"."DBA"."__GET_KEYWORD"('reg_action', oper_vector, '');

  declare curdir integer;
  curdir := cast ("PUMP"."DBA"."__GET_KEYWORD"('reg_curdir', oper_vector, '') as integer);

  declare rebuild integer;
  rebuild := 0;
?>

<html>
  <HEAD>
    <LINK REL="stylesheet" TYPE="text/css" HREF="<?=adm_what_css()?>">
    <title>OpenLink Interactive SQL (Virtuoso), VAD version <?= "VAD"."DBA"."VAD_VERSION" () ?>.: VAD Registry</title>
    <meta name="AUTHOR" content="OpenLink Software">
    <META NAME="DESCRIPTION" CONTENT="Virtuoso VAD">
  </HEAD>
<?vsp "PUMP"."DBA"."HTML_HEADER_OUT" (oper_vector, 'VAD Registry',''); ?>
<?vsp "PUMP"."DBA"."OUT_HIDDEN_PARS" (oper_vector, 'items_list@new_item_type'); ?>


<?vsp
  declare res integer;
  declare dirname varchar;
  declare s varchar;
  if (equ (act, 'mkdir_result'))
    {
      declare _err_code, _err_message varchar;
      declare exit handler for sqlstate '*' { _err_code := __SQL_STATE; _err_message := __SQL_MESSAGE; goto error_mkdir; };
      dirname := "PUMP"."DBA"."__GET_KEYWORD"('new_folder_name', oper_vector, '');
      res := "VAD"."DBA"."VAD_MKDIR" (oper_vector, curdir, dirname);
      if (res)
	{
	  dirname := 'New folder successfully created';
	}
      else
	{
error_mkdir:
	  dirname := sprintf ('Error occurred, STATE:%s :%s', _err_code, _err_message);
	}
      "PUMP"."DBA"."CHANGE_VAL" (oper_vector, 'result_txt', dirname);
      rebuild := 1;
    }
  else if (equ (act, 'rmdir_result'))
    {
      declare _err_code, _err_message varchar;
      _err_code := '';
      _err_message := '';
      declare exit handler for sqlstate '*' { _err_code := __SQL_STATE; _err_message := __SQL_MESSAGE; goto error_rmdir; };
      res := "VAD"."DBA"."VAD_RMDIR" (oper_vector, curdir);
      if (res)
	{
	  s := 'Folder successfully deleted';
	}
      else
	{
error_rmdir:
	  s := sprintf ('Error occurred, STATE:%s :%s', _err_code, _err_message);
	}
      "PUMP"."DBA"."CHANGE_VAL" (oper_vector, 'result_txt', s);
      rebuild := 1;
    }
  else if (equ (act, 'newval_result'))
    {
      declare _err_code, _err_message varchar;
      _err_code := '';
      _err_message := '';
      declare exit handler for sqlstate '*' { _err_code := __SQL_STATE; _err_message := __SQL_MESSAGE; goto error_newval; };

      declare itemname varchar;
      itemname := "PUMP"."DBA"."__GET_KEYWORD"('new_item_name', oper_vector, '');
      declare itemvalue varchar;
      itemvalue := "PUMP"."DBA"."__GET_KEYWORD"('new_item_value', oper_vector, '');
      declare itemtype varchar;
      itemtype := "PUMP"."DBA"."__GET_KEYWORD"('new_item_type', oper_vector, '');
      res := "VAD"."DBA"."VAD_MKNODE" (oper_vector, curdir, itemname, itemtype, itemvalue);
      if (res)
	{
	  s := 'New item successfully created';
	}
      else
	{
error_newval:
	  s := sprintf ('Error occurred, STATE:%s :%s', _err_code, _err_message);
	}
      "PUMP"."DBA"."CHANGE_VAL" (oper_vector, 'result_txt', s);
    }
  else if (equ (act, 'edval_result'))
    {
      declare _err_code, _err_message varchar;
      _err_code := '';
      _err_message := '';
      declare exit handler for sqlstate '*' { _err_code := __SQL_STATE; _err_message := __SQL_MESSAGE; goto error_edval; };

      declare itemid varchar;
      itemid := "PUMP"."DBA"."__GET_KEYWORD"('del_item_id', oper_vector, '');
      declare itemvalue varchar;
      itemvalue := "PUMP"."DBA"."__GET_KEYWORD"('new_item_value', oper_vector, '');
      declare itemoldvalue varchar;
      itemoldvalue := "PUMP"."DBA"."__GET_KEYWORD"('old_item_value', oper_vector, '');
      res := "VAD"."DBA"."VAD_UPDATE_NODE" (cast (itemid as integer), itemvalue, itemoldvalue);
      if (res)
	{
	  s := 'Item successfully updated';
	}
      else
	{
error_edval:
	  s := sprintf ('Error occurred, STATE:%s :%s', _err_code, _err_message);
	}
      "PUMP"."DBA"."CHANGE_VAL" (oper_vector, 'result_txt', s);
    }
  else if (equ (act, 'rmval_result'))
    {
      declare _err_code, _err_message varchar;
      _err_code := '';
      _err_message := '';
      declare exit handler for sqlstate '*' { _err_code := __SQL_STATE; _err_message := __SQL_MESSAGE; goto error_rmval; };

      declare itemid integer;
      itemid := "PUMP"."DBA"."__GET_KEYWORD"('items_list', oper_vector, '');

      res := "VAD"."DBA"."VAD_RMNODE" (cast (itemid as integer));
      if (res)
	{
	  s := 'Item successfully deleted';
	}
      else
	{
error_rmval:
	  s := sprintf ('Error occurred, STATE:%s :%s', _err_code, _err_message);
	}
      "PUMP"."DBA"."CHANGE_VAL" (oper_vector, 'result_txt', s);
    }
?>


<br>
<table class="statdata" border="0" cellpadding="0">

<tr>

<td class="statlist" >
<?vsp
  declare sz integer;
  sz := "VAD"."DBA"."VAD_REG_TREE_OUT" (oper_vector, rebuild);
?>
</td>

<td class="statlist" >
<?vsp
  "VAD"."DBA"."VAD_REG_DIR_OUT" (oper_vector, sz + 1);
?>
</td>
</tr>
<tr>
<td colspan=2 class="statlisthead"></td>
</tr>

<tr>
<td align="center">
	<?vsp "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'MkDir', 'this.form.reg_action.value=\'mkdir\';this.form.submit();', NULL, ' style=\"width: 1in\"'); ?>
	<?vsp "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'RmDir', 'this.form.reg_action.value=\'rmdir\';this.form.submit();', NULL, ' style=\"width: 1in\"'); ?>
</td><td align="center">
	<?vsp "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'NewVal', 'this.form.reg_action.value=\'newval\';this.form.submit();', NULL, ' style=\"width: 1in\"'); ?>
	<?vsp "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'Change', 'this.form.reg_action.value=\'edval\';this.form.submit();', NULL, ' style=\"width: 1in\"'); ?>
	<?vsp "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'Remove', 'this.form.reg_action.value=\'rmval\';this.form.submit();', NULL, ' style=\"width: 1in\"'); ?>
</td>
</tr>

</table>
<br>
<?vsp
  if (act is not null and length(act))
    {
	if (equ (act, 'mkdir'))
	  {
	    http ('<table class="statdata" border="0" cellpadding="0">');
	    http ('<tr><td CLASS="genhead"  colspan=2>Enter the name of new folder</td></tr>');
	    http ('<tr><td CLASS="statlisthead">');
	    "PUMP"."DBA"."__CHECK_HELP" ('new_folder_name', 'Folder Name');
	    http ('</td><td width=50%>');
	    "PUMP"."DBA"."HTML_EDIT_OUT" (oper_vector, 'new_folder_name', NULL, '', NULL, ' size=30 style="{width: 100%}"');
	    http ('</td></tr><tr><td align="center" colspan=2>');
	    "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'MkDir', 'this.form.reg_action.value=\'mkdir_result\';this.form.submit();', NULL, ' style=\"width: 1in\"');
	    "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'Cancel', 'this.form.submit();', NULL, ' style=\"width: 1in\"');
	    http ('</td></tr></table>');
    }
  else if (equ (act, 'rmdir'))
    {
	    declare _err_code, _err_message varchar;
	    _err_code := '';
	    _err_message := '';
	    declare exit handler for sqlstate '*' { _err_code := __SQL_STATE; _err_message := __SQL_MESSAGE; goto error_rmdir2; };

	    http ('<table class="statdata" border="0" cellpadding="0">');
	    http ('<tr><td CLASS="genhead">You are trying to remove directory:</td></tr>');
	    http ('<tr><td CLASS="statlist">');
	    http ("VAD"."DBA"."VAD_FULL_PATH" (oper_vector, curdir));
	    http ('</td></tr><tr><td align="center">');
	    "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'RmDir', 'this.form.reg_action.value=\'rmdir_result\';this.form.submit();', NULL, ' style=\"width: 1in\"');
	    "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'Cancel', 'this.form.submit();', NULL, ' style=\"width: 1in\"');
	    http ('</td></tr></table>');

error_rmdir2:
	    if (_err_code is not null and length (_err_code))
	      {
		s := sprintf ('Error occurred, STATE:%s :%s', _err_code, _err_message);
		"PUMP"."DBA"."CHANGE_VAL" (oper_vector, 'result_txt', s);
		"PUMP"."DBA"."HTML_LARGETEXT_OUT" (oper_vector, 'result_txt', 'Internal error:\n', NULL, NULL, '  width=50% ');
	      }
    }
  else if (equ (act, 'newval'))
    {
	    http ('<table class="statdata" border="0" cellpadding="0">');
	    http ('<tr><td CLASS="genhead"colspan=2>Enter the name and the value of new item:</td></tr>');
	    http ('<tr><td CLASS="statlisthead">');
	    "PUMP"."DBA"."__CHECK_HELP" ('new_item_name', 'Item Name');
	    http ('</td><td width=70%>');
	    "PUMP"."DBA"."HTML_EDIT_OUT" (oper_vector, 'new_item_name', NULL, '', NULL, ' size=30 style="{width: 100%}"');
	    http ('</td></tr><tr><td CLASS="statlisthead">');
	    "PUMP"."DBA"."__CHECK_HELP" ('new_item_value', 'Item Value');
	    http ('</td><td width=70%>');
	    "PUMP"."DBA"."HTML_TEXTAREA_OUT" (oper_vector, 'new_item_value', NULL, '', NULL, ' rows=5 style="{width: 100%}"');
	    http ('</td></tr><tr><td CLASS="statlisthead">');
	    "PUMP"."DBA"."__CHECK_HELP" ('new_item_type', 'Item Type');
	    http ('</td><td width=70%>');
	    "PUMP"."DBA"."HTML_SELECT_OUT" (oper_vector, 'new_item_type', NULL, 'STRING=String&INTEGER=Integer&KEY=Reference&URL=URL&XML=XML', NULL, ' style=\'{width: 100%%}\'', NULL, 20);
	    http ('</td></tr><tr><td colspan=2 align="center">');
	    "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'AddItem', 'this.form.reg_action.value=\'newval_result\';this.form.submit();', NULL, ' style=\"width: 1in\"');
	    "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'Cancel', 'this.form.submit();', NULL, ' style=\"width: 1in\"');
	    http ('</td></tr></table>');
    }
  else if (equ (act, 'edval'))
    {
	    declare _err_code, _err_message varchar;
	    _err_code := '';
	    _err_message := '';
	    declare exit handler for sqlstate '*' { _err_code := __SQL_STATE; _err_message := __SQL_MESSAGE; goto error_edval2; };

	    declare itemid integer;
	    itemid := cast ("PUMP"."DBA"."__GET_KEYWORD"('items_list', oper_vector, '') as integer);
	    declare itemname varchar;
	    declare itemvalue varchar;
	    declare itemtype varchar;
	    "VAD"."DBA"."VAD_NODE_INFO"(itemid, itemname, itemtype, itemvalue);
	    "PUMP"."DBA"."CHANGE_VAL" (oper_vector, 'old_item_value', itemvalue);
	    "PUMP"."DBA"."HIDDEN_VAL_OUT" (oper_vector, 'old_item_value');
	    "PUMP"."DBA"."CHANGE_VAL" (oper_vector, 'del_item_id', itemid);
	    "PUMP"."DBA"."HIDDEN_VAL_OUT" (oper_vector, 'del_item_id');

	    http ('<table class="statdata" border="0" cellpadding="0">');
	    http ('<tr><td CLASS="genhead"colspan=2>Enter the value of item:</td></tr>');
	    http ('<tr><td CLASS="statlisthead">');
	    "PUMP"."DBA"."__CHECK_HELP" ('new_item_name', 'Item Name');
	    http ('</td><td width=70%>');
	    http (itemname);
	    http ('</td></tr><tr><td CLASS="statlisthead">');
	    "PUMP"."DBA"."__CHECK_HELP" ('new_item_value', 'Item Value');
	    http ('</td><td width=70%>');
	    "PUMP"."DBA"."CHANGE_VAL" (oper_vector, 'new_item_value', itemvalue);
	    "PUMP"."DBA"."HTML_TEXTAREA_OUT" (oper_vector, 'new_item_value', NULL, '', NULL, ' rows=5 style="{width: 4in}"');
	    http ('</td></tr><tr><td CLASS="statlisthead">');
	    "PUMP"."DBA"."__CHECK_HELP" ('new_item_type', 'Item Type');
	    http ('</td><td width=70%>');
	    http (itemtype);
	    http ('</td></tr><tr><td colspan=2 class="statlisthead"></td></tr><tr><td colspan=2 align="center">');
	    "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'Update', 'this.form.reg_action.value=\'edval_result\';this.form.submit();', NULL, ' style=\"width: 1in\"');
	    "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'Cancel', 'this.form.submit();', NULL, ' style=\"width: 1in\"');
	    http ('</td></tr></table>');
error_edval2:
	    if (_err_code is not null and length (_err_code))
	      {
		s := sprintf ('Error occurred, STATE:%s :%s', _err_code, _err_message);
		"PUMP"."DBA"."CHANGE_VAL" (oper_vector, 'result_txt', s);
		"PUMP"."DBA"."HTML_LARGETEXT_OUT" (oper_vector, 'result_txt', 'Internal error:\n', NULL, NULL, '  width=50% ');
	      }
    }
  else if (equ (act, 'rmval'))
    {
	    declare _err_code, _err_message varchar;
	    _err_code := '';
	    _err_message := '';
	    declare exit handler for sqlstate '*' { _err_code := __SQL_STATE; _err_message := __SQL_MESSAGE; goto error_rmval2; };

	    declare itemid integer;
	    itemid := cast ("PUMP"."DBA"."__GET_KEYWORD"('items_list', oper_vector, '') as integer);
	    s := "VAD"."DBA"."VAD_FULL_PATH" (oper_vector, itemid);

	    http ('<table class="statdata" border="0" cellpadding="0">');
	    http ('<tr><td CLASS="genhead">You are trying to remove item:</td></tr>');
	    http ('<tr><td CLASS="statlist">');
	    http (s);
	    http ('</td></tr><tr><td align="center">');
	    "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'Delete', 'this.form.reg_action.value=\'rmval_result\';this.form.submit();', NULL, ' style=\"width: 1in\"');
	    "PUMP"."DBA"."HTML_BUTTON_OUT" (oper_vector, '', 'Cancel', 'this.form.submit();', NULL, ' style=\"width: 1in\"');
	    http ('</td></tr></table>');
error_rmval2:
	    if (_err_code is not null and length (_err_code))
	      {
		s := sprintf ('Error occurred, STATE:%s :%s', _err_code, _err_message);
		"PUMP"."DBA"."CHANGE_VAL" (oper_vector, 'result_txt', s);
		"PUMP"."DBA"."HTML_LARGETEXT_OUT" (oper_vector, 'result_txt', 'Internal error:\n', NULL, NULL, '  width=50% ');
	      }
    }


  else if (equ (act, 'mkdir_result'))
    {
      "PUMP"."DBA"."HTML_LARGETEXT_OUT" (oper_vector, 'result_txt', 'The result of new folder creation is:\n', NULL, NULL, '  width=50% ');
    }
  else if (equ (act, 'rmdir_result'))
    {
      "PUMP"."DBA"."HTML_LARGETEXT_OUT" (oper_vector, 'result_txt', 'The result of folder removing is:\n', NULL, NULL, '  width=50% ');
    }
  else if (equ (act, 'newval_result'))
    {
      "PUMP"."DBA"."HTML_LARGETEXT_OUT" (oper_vector, 'result_txt', 'The result of new item creation is:\n', NULL, NULL, '  width=50% ');
    }
  else if (equ (act, 'edval_result'))
    {
      "PUMP"."DBA"."HTML_LARGETEXT_OUT" (oper_vector, 'result_txt', 'The result of item update is:\n', NULL, NULL, '  width=50% ');
    }
  else if (equ (act, 'rmval_result'))
    {
      "PUMP"."DBA"."HTML_LARGETEXT_OUT" (oper_vector, 'result_txt', 'The result of item removing is"\n', NULL, NULL, '  width=50% ');
    }
  http ('<script>document.forms[0].reg_action.value="";</script>');
    }
?>
<?vsp "VAD"."DBA"."HTML_FOOTER_OUT" (oper_vector); ?>

</html>
