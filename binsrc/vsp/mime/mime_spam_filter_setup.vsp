<?vsp 
--
--  $Id$
--  
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--  
--  Copyright (C) 1998-2019 OpenLink Software
--  
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--  
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--  
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--  
--  
 adm_pre_page(lines);

  declare own, _word varchar;
  declare _u_id, _spam, _ham, nspam, nham integer;
  declare sid, _stat varchar;
  declare seen_before integer;
  declare _probability double precision;

  sid := adm_get_sesid (params);
  _word := get_keyword_ucase ('word', params, '');
  _stat := get_keyword_ucase ('stat', params, '');

  if (_stat = 'On')
    {
      cfg_write (virtuoso_ini_path(), 'HTTPServer', 'SpamFilter', '0');
      pop_spam_filter_init ();
    }
  else
    {
      cfg_write (virtuoso_ini_path(), 'HTTPServer', 'SpamFilter', '1');
      pop_spam_filter_init ();
    }

   if (registry_get ('__spam_filtering') = '1')
     _stat := 'On';
   else
     _stat := 'Off';

  _u_id := DB.DBA.adm_dav_check_auth (lines, 1);
  seen_before := adm_get_ses_var (sid, 'seen_before', 0);
  if (_u_id > 0 and seen_before and '' <> get_keyword ('new_login', params, ''))
    {
      _u_id := 0;
      adm_set_ses_var (sid, 'seen_before', 0);
    }
  if (_u_id < 1)
    {
      http_request_status ('HTTP/1.1 401 Unauthorized');
      DB.DBA.vsp_auth_get ('virtuoso_dav_admin', '/mime',
		md5 (datestring (now ())),
		md5 ('FloppyBootStompedOntoTheGround'),
		'false', lines, 1);

      http ( concat ('<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">',
            '<HTML><HEAD>',
            '<TITLE>401 Unauthorized</TITLE>',
            '</HEAD><BODY><H1>Unauthorized</H1>',
            'Access to page is forbidden.</BODY></HTML>'));
      return (0);
    }
  else
    select U_NAME into own from WS.WS.SYS_DAV_USER where U_ID = _u_id;

  if (_word <> '')
    {
       _probability := spam_probability (_word, _u_id);
       spam_get_word (ucase (_word), _u_id, _spam, _ham);
       select MS_SPAM, MS_HAM into nspam, nham from DB.DBA.MSG_SPAMS_COUNT where MS_USER = _u_id;
       dbg_obj_print ('_probability = ', _probability);
       dbg_obj_print ('_spam = ', _spam);
       dbg_obj_print ('_ham = ', _ham);
       dbg_obj_print ('_u_id = ', _u_id);
       dbg_obj_print ('_word = ', _word);
    }

?>
<html>
<head>
<link rel="stylesheet" type="text/css" HREF="<?=adm_what_css()?>" />
<meta name="AUTHOR" content="OpenLink Software">
<meta name="DESCRIPTION" content="Setup Virtuoso Spam Filter">
<script language="javascript" src="../admin/admin_utils.js"></script>
<title>Messages list</title>
</head>
<?vsp adm_page_header('Setup Virtuoso Spam Filter ', NULL); ?>


<FORM method="post" action="mime_spam_filter_setup.vsp" enctype="multipart/form-data">
<input type="hidden" name="sid" value="<?=sid?>">

<H2>The Spam filter is <A href=mime_spam_filter_setup.vsp?stat=<?=_stat?>><?=_stat?></A>.</h2><BR />

<TABLE CLASS="genlist" BORDER="0" CELLPADDING="0">
<TR><TD CLASS="stathead">Word query</TD></TR>
<TR CLASS="AdmBorders"><TD><IMG SRC="../admin/images/1x1.gif" WIDTH="1" HEIGHT="2" ALT=""></TD></TR>
<TR CLASS="AdmBorders"><TD>
<TR><TD class="genlistheadt">
<INPUT name="word" size="30" type="text" value="<?=_word?>">
<INPUT type="submit" value="Tell me about this word">
</TD></TR>
<?vsp  if (_word <> '' ) { ?>
<?vsp  if (_spam is NULL ) { ?>
<TR><TD class="gendata">
'<b><?=_word?></b>' does not exist in the database.
</TD></TR>
<?vsp } else { ?>
<TR><TD class="gendata">
Number of spam messages: <b><?=_spam?></b>.<br/>
</TD></TR>
<TR><TD class="gendata">
Number of ham messages: <b><?=_ham?></b>.<br/>
</TD></TR>
<TR><TD class="gendata">
Probability that a message containing this word is spam:
	        <b><?=_probability?></b>.<br/>
</TD></TR>
<?vsp } ?>
<TR><TD class="gendata">
Total emails trained: Spam:<b><?=nspam?></b>, Ham: <b><?=nham?></b>
</TD></TR>
<?vsp } ?>
</TABLE>
</FORM>

<FORM method="post" action="mime_plain.vsp" enctype="multipart/form-data">
<hr>
<TABLE border=0>
<tr>
<td colspan=2 align=right><INPUT type=submit name="back" value="Back"></td></tr>
</TABLE>
</FORM>
<?vsp adm_page_footer(); ?>
</html>
