<?vsp 
--
--  $Id$
--  
--  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
--  project.
--  
--  Copyright (C) 1998-2019 OpenLink Software
--  
--  This project is free software; you can redistribute it and/or modify it
--  under the terms of the GNU General Public License as published by the
--  Free Software Foundation; only version 2 of the License, dated June 1991.
--  
--  This program is distributed in the hope that it will be useful, but
--  WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
--  General Public License for more details.
--  
--  You should have received a copy of the GNU General Public License along
--  with this program; if not, write to the Free Software Foundation, Inc.,
--  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
--  
--  

 adm_pre_page(lines);

--no_c_escapes-
  declare _stmt varchar;
  declare _maxres integer;
  declare inx integer;
  declare _u_id integer;
  declare _no_matches varchar;
  declare _sid_id, _own varchar;

  _u_id := DB.DBA.adm_dav_check_auth (lines);
  if (_u_id < 1)
    {
      http_request_status ('HTTP/1.1 401 Unauthorized');
      http ( concat ('<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">',
	    '<HTML><HEAD>',
	    '<TITLE>401 Unauthorized</TITLE>',
	    '</HEAD><BODY><H1>Unauthorized</H1>',
            'Access to page is forbidden.</BODY></HTML>'));
      return (0);
    }

  _sid_id := adm_get_sesid (params);

  _own := coalesce ((select U_NAME from WS.WS.SYS_DAV_USER where U_ID = _u_id), '');

  if (not is_empty_or_null (get_keyword ('reset', params)))
    {
      _maxres := 100;
      _stmt := '';
    }
  else
    {
      _maxres := atoi (get_keyword ('maxres', params, '500'));
      _stmt := get_keyword ('stmt', params, '');
    }
-- DELME: only for tests
if ('' <> get_keyword ('mail_no', params, ''))
  {
    declare mm_b_id integer;
    declare msg_body varchar;
    mm_b_id := atoi (get_keyword ('mail_no', params, '0'));
    msg_body := coalesce ((select blob_to_string (MM_BODY) from DB.DBA.MAIL_MESSAGE where MM_BODY_ID = mm_b_id), '*** Invalid document ID ***');
    http_rewrite (0);
    http_header ('Content-Type: text/plain\r\n');
    http (msg_body);
    return (0);
  }
?>

<html>
  <head>
    <link rel="stylesheet" type="text/css" HREF="<?=adm_what_css()?>">
    <meta name="AUTHOR" content="OpenLink Software">
    <meta name="DESCRIPTION" content="Interactive text search using Virtuoso VSP">
    <title>Internet mail Search</title>
  </head>
<?vsp adm_page_header('Internet Mail Search', NULL); ?>

<?vsp if (not is_empty_or_null (get_keyword ('help1', params))) { ?>
	<TABLE CLASS="help" BORDER="0" CELLPADDING="0">
	<TR><TD CLASS="helptitle">Help: Free Text Search</TD></TR>
	<TR CLASS="helpborders"><TD><IMG SRC="../admin/images/1x1.gif" WIDTH="1" HEIGHT="2" ALT=""></TD></TR>
	<TR><TD CLASS="helptext">Type the words or phrases (contained in double quotes) separated by
<STRONG>AND</STRONG> or <STRONG>OR</STRONG> keywords into the text area provided that you wish to search the Mail box for.
	</TD></TR>
	<TR><TD CLASS="helptext">Press the <STRONG>Execute</STRONG> button to fetch the results of the search.
	</TD></TR>
	<TR><TD CLASS="helptext">The results will be returned as a hyper-linked list of search hits.  Press on the links to go to the document.
	</TD></TR>
	</TABLE>

<?vsp } ?>

    <form name="main_form" method="POST" action="mail_search.vsp">
    <input type=hidden name=sid value="<?=_sid_id?>">

    <TABLE CLASS="genlist" BORDER="0" CELLPADDING="0">
     <TR><TD CLASS="genhead">Internet Mail Search</TD></TR>
		<TR CLASS="AdmBorders"><TD><IMG SRC="../admin/images/1x1.gif" WIDTH="1" HEIGHT="2" ALT=""></TD></TR>
	    <TR><TD CLASS="genlistheadt">Search Expression</TD></TR>
	    <TR><TD><textarea name="stmt" rows="5" cols="60"><?= coalesce(_stmt, '') ?></textarea></TD></TR>
		<TR><TD><TABLE BORDER="0" WIDTH="100%">
		<TR><TD COLSPAN="3"><IMG SRC="../admin/images/1x1.gif" WIDTH="1" HEIGHT="15" ALT=""></TD></TR>
              <TR><TD CLASS="genlisthead" NOWRAP>Max. no of results</TD>
	      <TD COLSPAN="2"><INPUT TYPE="text" NAME="maxres" value="<?= _maxres ?>"></TD></TR>
</TR></TABLE>
           <TR>
             <TD ALIGN="right">
               <input type="submit" name="xecute" value="Execute">
               <input type="submit" name="reset" value="Reset">
		<input type="submit" name="help1" value="Help">
             </td>
           </tr>
       </TABLE>
         </FORM>

<BR />

 <TABLE CLASS="genlist" BORDER="0" CELLPADDING="0" CELLSPACING="0">
<?vsp
         if (not is_empty_or_null (get_keyword ('xecute', params)))
           {

	     if (not is_empty_or_null (_stmt))
	       {
		     for (select MM_SUBJ, MM_FROM, MM_REC_DATE, MM_ID, MM_BODY_ID
		            from DB.DBA.MAIL_MESSAGE
			    where
			    contains (MM_BODY, _stmt) and MM_OWN = _own) do
		       {
			 if (inx = _maxres) goto done;

?>
			 <TR><TD>
                         <TABLE BORDER="0" CELLPADDING="0">
			   <TR><TD CLASS="genlisthead"><a href="mime_display.vsp?sid=<?=_sid_id?>&msg=<?=MM_ID?>">Message No: <?=MM_ID?></a></TD></TR>
			   <TR><TD CLASS="gendata">Subject: <?=MM_SUBJ?></TD></TR>
			   <TR><TD CLASS="gendata">From: <?=MM_FROM?></TD></TR>
			   <TR><TD CLASS="gendata">Received: <?=substring(MM_REC_DATE,1,19)?></TD></TR>
			 </TABLE>
			 </TD></TR>
<?vsp
			 inx := inx + 1;
		       }

	       done:
	         if (0 = inx)
                   http ('<tr><td class="dochdr">*** Nothing matches the query ***</td></tr>');
		 else
		   http (sprintf ('<tr><td class="dochdr">displayed %d entities matching your query</td></tr>', inx));
	       }
	   }
?>

</TABLE>
<?vsp adm_page_footer(); ?>
</html>

