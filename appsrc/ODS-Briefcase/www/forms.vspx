<?xml version="1.0" encoding="UTF-8"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="forms" decor="template/template.vspx" style="template/template.xsl" fast-render="1" button-anchors="1" xmlns:v="http://www.openlinksw.com/vspx/" xmlns:vm="http://www.openlinksw.com/vspx/macro" doctype="-//W3C//DTD XHTML 1.0 Transitional//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

  <v:template name="tf1" type="simple" condition="(self.v_step = 'end')">
    <script type="text/javascript">
      <![CDATA[
        ODRIVE.formClose('<?V self.v_form ?>');
      ]]>
    </script>
  </v:template>

  <v:method name="showSelected" arglist="in x any">
    <![CDATA[
      declare i integer;
      declare item any;

      http ('<div id="dav_list" style="max-height: 200px; min-height: 200px;">');
      http ('  <table class="ODS_grid" style="border: 0px;">');
      http ('    <thead>');
      http ('      <tr>');
      http ('        <th>Name</th>');
      http ('        <th>Size</th>');
      http ('        <th>Date Modified</th>');
      http ('        <th>Owner</th>');
      http ('        <th>Group</th>');
      http ('        <th>Permissions</th>');
      if (self.v_step <> 'start')
      {
      http ('        <th>&nbsp;</th>');
      }
      http ('      </tr>');
      http ('    </thead>');

      for (i := 0; i < length (self.items); i := i + 2)
      {
        item := ODRIVE.WA.DAV_INIT (self.items[i]);
        if (not ODRIVE.WA.DAV_ERROR (item))
        {
        http ('    <tr>');
        http (sprintf ('<td nowrap="nowrap"><img src="%s" alt="%s">&nbsp;&nbsp;%s</td>', ODRIVE.WA.ui_image (ODRIVE.WA.DAV_GET (item, 'fullPath'), ODRIVE.WA.DAV_GET (item, 'type'), ODRIVE.WA.DAV_GET (item, 'mimeType')), ODRIVE.WA.ui_alt (ODRIVE.WA.DAV_GET (item, 'name'), ODRIVE.WA.DAV_GET (item, 'type')), self.items[i]));
        http (sprintf ('<td class="number" nowrap="nowrap">%s</td>', ODRIVE.WA.ui_size (ODRIVE.WA.DAV_GET (item, 'length'), ODRIVE.WA.DAV_GET (item, 'type'))));
        http (sprintf ('<td nowrap="nowrap">%s</td>', ODRIVE.WA.ui_date (ODRIVE.WA.DAV_GET (item, 'modificationTime'))));
        http (sprintf ('<td>%s</td>', ODRIVE.WA.DAV_GET (item, 'ownerName')));
        http (sprintf ('<td>%s</td>', ODRIVE.WA.DAV_GET (item, 'groupName')));
        http (sprintf ('<td>%s</td>', ODRIVE.WA.DAV_GET (item, 'permissionsName')));
        if (self.v_step <> 'start')
        {
        http (sprintf ('<td style="color: red;">%s</td>', self.items[i+1]));
        }
        http ('    </tr>');
      }
      }
      http ('  </table>');
      http ('</div>');
      http ('<br />');
    ]]>
  </v:method>

  <v:method name="execSelected" arglist="in overwriteFlag integer">
    <![CDATA[
      declare returnData, i integer;
      declare targetPath varchar;
      declare tmpVector, item any;

      tmpVector := vector();
      for (i := 0; i < length (self.items); i := i+ 2)
      {
        item := ODRIVE.WA.DAV_INIT(self.items[i]);
        if (ODRIVE.WA.DAV_ERROR (item))
        {
          returnData := item;
        }
        else
        {
          if (self.v_form = 'delete')
          {
            returnData := ODRIVE.WA.DAV_DELETE (self.items[i]);
          }
          else
          {
            targetPath := ODRIVE.WA.odrive_real_path (self.v_target) || ODRIVE.WA.DAV_GET (item, 'name');
            if (ODRIVE.WA.DAV_GET (item, 'type') = 'C')
            {
              targetPath := targetPath || '/';
            }
            if (self.v_form = 'copy')
            {
              returnData := ODRIVE.WA.DAV_COPY (self.items[i], targetPath, overwriteFlag, ODRIVE.WA.DAV_GET (item, 'permissions'));
            }
            else if (self.v_form = 'move')
            {
              returnData := ODRIVE.WA.DAV_MOVE (self.items[i], targetPath, overwriteFlag);
            }
          }
        }
        if (returnData < 0)
        {
          tmpVector := vector_concat (tmpVector, vector (self.items[i], ODRIVE.WA.DAV_PERROR (returnData)));
        }
      }
      self.items := tmpVector;
    ]]>
  </v:method>

  <v:method name="execPost" arglist="in e vspx_event">
    <![CDATA[
      declare exit handler for SQLSTATE '*'
      {
        -- dbg_obj_print ('__SQL_MESSAGE', __SQL_MESSAGE);
        if (__SQL_STATE = 'TEST')
        {
          self.vc_error_message := ODRIVE.WA.test_clear (__SQL_MESSAGE);
          self.vc_is_valid := 0;
          return;
        }
        resignal;
      };

      declare I, N integer;
      declare returnData, item, params any;

      params := e.ve_params;
      if (self.v_form = 'properties')
      {
        declare prop_owner, prop_group integer;
        declare prop_mime, prop_add_perms, prop_rem_perms, prop_perms, one, zero varchar;
        declare c_properties, c_seq, c_property, c_value, c_action any;
        declare old_dav_acl, dav_acl, acl_value, aci_value any;
        declare itemList any;

        if ((not ODRIVE.WA.check_admin (self.account_id)) and (get_keyword ('prop_group', params, '') <> 'Do not change'))
          if (not ODRIVE.WA.odrive_group_own (trim (get_keyword ('prop_group', params, ''))))
          {
            self.vc_error_message := 'Only own groups or ''dba'' group are allowed!';
            self.vc_is_valid := 0;
            return;
          }

        -- validate ACL rules
        DB.DBA.wa_aci_validate (DB.DBA.wa_aci_params (params));

        prop_mime  := trim (get_keyword ('prop_mime', params, ''));
        prop_owner := ODRIVE.WA.odrive_user_id (trim(get_keyword ('prop_owner', params, '')));
        prop_group := ODRIVE.WA.odrive_user_id (trim(get_keyword ('prop_group', params, '')));

        one := ascii('1');
        zero := ascii('0');
        prop_add_perms := '000000000N';
        for (N := 0; N < 9; N := N + 1)
        {
          if (get_keyword (sprintf ('prop_add_perm%i', N), params, '') <> '')
            aset(prop_add_perms, N, one);
        }
        prop_rem_perms := '000000000N';
        for (N := 0; N < 9; N := N + 1)
        {
          if (get_keyword (sprintf ('prop_rem_perm%i', N), params, '') <> '')
            aset(prop_rem_perms, N, one);
        }

        -- changing or adding properties
        c_properties := ODRIVE.WA.prop_params (params, self.account_id);

        -- acl properties
        acl_value := WS.WS.ACL_PARSE (ODRIVE.WA.acl_params (params));

        -- aci properties
        aci_value := ODRIVE.WA.aci_n3 (DB.DBA.wa_aci_params (params));

        for (I := 0; I < length (self.items); I := I + 2)
        {
          item := ODRIVE.WA.DAV_INIT(self.items[I]);
          if (not ODRIVE.WA.DAV_ERROR (item))
          {
            if (('' <> prop_mime) and ('Do not change' <> prop_mime) and (ODRIVE.WA.DAV_GET (item, 'type') = 'R') and (ODRIVE.WA.DAV_GET (item, 'mimeType') <> prop_mime))
            {
              ODRIVE.WA.DAV_SET (self.items[I], 'mimeType', prop_mime);
            }
            if ((prop_owner <> -1) and (ODRIVE.WA.DAV_GET (item, 'ownerID') <> prop_owner))
            {
              ODRIVE.WA.DAV_SET (self.items[I], 'ownerID', prop_owner);
            }
            if ((prop_group <> -1) and (ODRIVE.WA.DAV_GET (item, 'groupID') <> prop_group))
            {
              ODRIVE.WA.DAV_SET (self.items[I], 'groupID', prop_group);
            }
            -- permissions
            prop_perms := ODRIVE.WA.DAV_GET (item, 'permissions');
            for (N := 0; N < 10; N := N + 1)
            {
              if (prop_add_perms[N] = one)
                aset(prop_perms, N, one);
              if (prop_rem_perms[N] = one)
                aset (prop_perms, N, zero);
            }
            if (get_keyword ('prop_index', params, '*') <> '*')
            {
              aset (prop_perms, 9, ascii (get_keyword ('prop_index', params)));
            }
            if (get_keyword ('prop_metagrab', params, '*') <> '*')
            {
              if (length(prop_perms) < 11)
                prop_perms := concat(prop_perms, ' ');
              aset (prop_perms, 10, ascii (get_keyword ('prop_metagrab', params)));
            }
            ODRIVE.WA.DAV_SET (self.items[I], 'permissions', prop_perms);

            -- recursive
            if ((ODRIVE.WA.DAV_GET (item, 'type') = 'C') and ('' <> get_keyword ('prop_recursive', params, '')))
            {
              ODRIVE.WA.DAV_SET_RECURSIVE (self.items[I], prop_perms, prop_owner, prop_group);
            }

            -- properties
            for (N := 0; N < length (c_properties); N := N + 1)
            {
              if (c_properties[N][0] <> '')
              {
                if (c_properties[N][2] = 'U')
                {
                  ODRIVE.WA.DAV_PROP_SET (self.items[I], c_properties[N][0], c_properties[N][1]);
                }
                else if (c_properties[N][2] = 'R')
                {
                  ODRIVE.WA.DAV_PROP_REMOVE (self.items[I], c_properties[N][0]);
                }
              }
            }

            -- acl
            if (length (acl_value))
            {
              dav_acl := ODRIVE.WA.DAV_GET (item, 'acl');
              old_dav_acl := dav_acl;
              foreach (any acl in acl_value) do
              {
                if ((ODRIVE.WA.DAV_GET (item, 'type') = 'C') or (acl[2] = 0))
                {
                  WS.WS.ACL_ADD_ENTRY (dav_acl, acl[0], acl[3], acl[1], acl[2]);
                }
              }
              if (old_dav_acl <> dav_acl)
              {
                if (not ODRIVE.WA.DAV_ERROR (ODRIVE.WA.DAV_SET (self.items[I], 'acl', dav_acl)))
                {
                  ODRIVE.WA.acl_send_mail (self.domain_id, self.account_id, self.items[I], old_dav_acl, dav_acl);
                }
              }
            }

            -- aci - WebAccess
            if (length (aci_value))
            {
              ODRIVE.WA.DAV_PROP_SET (self.items[I], 'virt:aci_meta_n3', aci_value);
            }
          }
        }
        self.v_step := 'end';
      }
      else if (self.v_form in ('edit', 'view'))
      {
        item := ODRIVE.WA.DAV_INIT (self.v_path);
        if (not ODRIVE.WA.DAV_ERROR (item))
        {
        returnData := ODRIVE.WA.DAV_RES_UPLOAD (self.v_path, get_keyword ('f_content', params, ''), ODRIVE.WA.DAV_GET (item, 'mimeType'), ODRIVE.WA.DAV_GET (item, 'permissions'), ODRIVE.WA.DAV_GET (item, 'ownerID'), ODRIVE.WA.DAV_GET (item, 'groupID'));
        if (ODRIVE.WA.DAV_ERROR (returnData))
          signal('TEST', ODRIVE.WA.DAV_PERROR (returnData) || '<>');
        }
        self.v_step := 'end';
      }
      else if (self.v_form = 'rename')
      {
   	    declare oldName, newName any;

        oldName := trim (self.f_old.ufl_value);
        newName := trim (self.f_new.ufl_value);
        if (oldName <> newName)
        {
          ODRIVE.WA.test (newName, vector('name', 'New Name', 'class', 'varchar', 'type', 'varchar', 'canEmpty', 0));
          returnData := ODRIVE.WA.DAV_SET (self.v_path, 'name', newName);
          if (ODRIVE.WA.DAV_ERROR (returnData))
            signal('TEST', ODRIVE.WA.DAV_PERROR (returnData) || '<>');
        }
        self.v_step := 'end';
      }
      else if (self.v_form = 'tags')
      {
  	    declare itemPath, tags, tagsPublic, tagsPrivate any;

        tagsPublic := trim (self.f_tags_public.ufl_value);
        if (not ODRIVE.WA.validate_tags (tagsPublic))
        {
          signal ('TEST', 'The expression contains no valid tag(s)!<>');
        }
        tagsPrivate := trim (self.f_tags_private.ufl_value);
        if (not ODRIVE.WA.validate_tags (tagsPrivate))
        {
          signal ('TEST', 'The expression contains no valid tag(s)!<>');
        }
        if ((tagsPublic <> '') or (tagsPrivate <> ''))
        {
          for (N := 0; N < length (self.items); N := N + 2)
          {
            itemPath := self.items[N];
            if (tagsPublic <> '')
            {
              tags := ODRIVE.WA.DAV_PROP_GET (itemPath, ':virtpublictags', '');
              ODRIVE.WA.DAV_PROP_SET (itemPath, ':virtpublictags', ODRIVE.WA.tags_join (tags, tagsPublic));
            }
            if (tagsPrivate <> '')
            {
              tags := ODRIVE.WA.DAV_PROP_GET (itemPath, ':virtprivatetags', '');
              ODRIVE.WA.DAV_PROP_SET (itemPath, ':virtprivatetags', ODRIVE.WA.tags_join (tags, tagsPrivate));
            }
          }
        }
        self.v_step := 'end';
      }
    ]]>
  </v:method>

  <v:method name="property_right" arglist="in property any">
    <![CDATA[
      if (ODRIVE.WA.check_admin (self.account_id))
        return 1;
      if (property like 'DAV:%')
        return 0;
      if (property like 'xml-%')
        return 0;
      if (property like 'xper-%')
        return 0;
      return 1;
    ]]>
  </v:method>

  <vm:pagetitle>Rename File</vm:pagetitle>
  <vm:popup_pagewrapper clean="yes" login="yes">
    <vm:variables>
      <v:variable name="v_form" param-name="sa" type="varchar" default="''" persist="0"/>
      <v:variable name="v_step" type="varchar" default="''" persist="0" />
      <v:variable name="v_tab" param-name="tabNo" type="varchar" default="'1'" />

      <v:variable name="v_id" param-name="id" type="any" persist="0" />
      <v:variable name="v_path" type="varchar" persist="pagestate" />

      <v:variable name="v_parent" type="varchar" />
      <v:variable name="v_old" type="varchar" />
      <v:variable name="v_new" type="varchar" />

      <v:variable name="v_source" type="varchar" persist="0"/>
      <v:variable name="v_target" type="varchar" persist="0"/>

      <v:variable name="items" type="any" persist="0"/>
      <v:variable name="overwriteFlag" type="integer" value="0" persist="0"/>
      <v:variable name="mimeType" type="any" />
    </vm:variables>
    <vm:pagebody>
      <v:template name="tf2" type="simple" enabled="-- case when (self.v_step <> 'end') then 1 else 0 end">

        <input type="hidden" name="tabNo" id="tabNo" value="<?V self.v_tab ?>" />
        <v:template name="tf3" type="simple" condition="not self.vc_is_valid">
          <div class="error">
            <p><v:error-summary/></p>
          </div>
        </v:template>

        <v:before-data-bind>
          <![CDATA[
            self.sid := get_keyword ('sid', params);
            self.realm := get_keyword ('realm', params);
            if (isnull (connection_get ('vspx_user')))
              connection_set ('vspx_user', (select U_NAME from DB.DBA.SYS_USERS, DB.DBA.VSPX_SESSION where U_NAME = VS_UID and VS_SID = self.sid));

            if (self.v_step = '')
            {
              declare i integer;

              self.v_step := 'start';
              self.v_source := get_keyword ('path', params, '');
              self.overwriteFlag := 0;
              self.items := vector ();
              for (i := 0; i < length(params); i := i + 2)
              {
                if (params[i] = 'cb_item')
                {
                  self.items := vector_concat (self.items, vector (params[i+1], null));
                }
              }
            }
          ]]>
        </v:before-data-bind>

        <v:template name="tf4" type="simple" enabled="-- case when self.v_form = 'properties' then 1 else 0 end">
          <div class="new-form-header">
            Update properties for listed items
          </div>
          <?vsp self.showSelected(1); ?>
          <div id="c1">
            <div class="tabs">
              <vm:tabCaption tab="1" tabs="2" caption="Main" />
              <vm:tabCaption tab="2" tabs="2" caption="Sharing" />
            </div>
            <div class="contents">
              <div id="1" class="tabContent">
                <table class="form-body" cellspacing="0">
                  <tr>
                    <th>
                      <vm:label for="prop_mime" value="--'File Mime Type'" />
                    </th>
                    <td>
                      <v:text name="prop_mime" xhtml_id="prop_mime" value="--'Do not change'" format="%s" xhtml_class="field-short" />
                      <input type="button" value="Select" onclick="javascript: windowShow('<?V ODRIVE.WA.page_url (self.domain_id, 'mimes_select.vspx?params=prop_mime:s1;') ?>');" class="button" />
                    </td>
                  </tr>
                  <tr>
                    <th>
                      <vm:label for="prop_owner" value="--'Owner'" />
                    </th>
                    <td>
                      <v:text name="prop_owner" xhtml_id="prop_owner" value="--'Do not change'" format="%s" xhtml_class="field-short">
                        <v:after-data-bind>
                          <![CDATA[
                            if (not ODRIVE.WA.check_admin (self.account_id))
                              control.tf_style := 3;
                          ]]>
                        </v:after-data-bind>
                      </v:text>
                      <vm:if test="ODRIVE.WA.check_admin (self.account_id)">
                        <input type="button" value="Select" onclick="javascript: windowShow('/ods/users_select.vspx?mode=u&amp;params=prop_owner:s1;&nrows=<?V ODRIVE.WA.settings_rows (self.settings) ?>')" class="button" />
                      </vm:if>
                    </td>
                  </tr>
                  <tr>
                    <th>
                      <vm:label for="prop_group" value="--'Group'" />
                    </th>
                    <td>
                      <v:text name="prop_group" xhtml_id="prop_group" value="--'Do not change'" format="%s" xhtml_class="field-short" />
                      <input type="button" value="Select" onclick="javascript: windowShow('/ods/users_select.vspx?mode=g&amp;params=prop_group:s1;')" class="button" />
                    </td>
                  </tr>
                  <tr>
                    <th valign="top">
                      <vm:label value="--'Permissions'" />
                    </th>
                    <td>
                      <table class="permissions-list" cellspacing="0">
                        <vm:permissions-header1 text="Add"/>
                        <vm:permissions-header2 />
                        <tr>
                          <td>Add</td>
                          <?vsp
                            declare i integer;
                            declare S varchar;
                            for (i := 0; i < 9; i := i + 1)
                            {
                              S := case when (i = 8) then 'class="right"' else '' end;
                              http (sprintf ('<td %s><input type="checkbox" name="prop_add_perm%i" onclick="chkbx(this,prop_rem_perm%i);" /></td>', S, i, i));
                            }
                          ?>
                        </tr>
                        <tr>
                          <td class="bottom">Remove</td>
                          <?vsp
                            for (i := 0; i < 9; i := i + 1)
                            {
                              S := case when (i = 8) then 'class="right bottom"' else 'class="bottom"' end;
                              http (sprintf ('<td %s><input type="checkbox" name="prop_rem_perm%i" onclick="chkbx(this,prop_add_perm%i);" /></td>', S, i, i));
                            }
                          ?>
                        </tr>
                      </table>
                    </td>
                  </tr>
                  <tr>
                    <th>
                      <vm:label for="prop_index" value="--'Full Text Search'" />
                    </th>
                    <td>
                      <v:select-list name="prop_index" xhtml_id="prop_index" >
                        <v:item name="Do not change" value="*" />
                        <v:item name="Off" value="N" />
                        <v:item name="Direct members" value="T" />
                        <v:item name="Recursively" value="R" />
                      </v:select-list>
                    </td>
                  </tr>
                  <tr>
                    <th>
                      <vm:label for="prop_metagrab" value="--'Metadata Retrieval'" />
                    </th>
                    <td>
                      <v:select-list name="prop_metagrab" xhtml_id="prop_metagrab" >
                        <v:item name="Do not change" value="*" />
                        <v:item name="Off" value="N" />
                        <v:item name="Direct members" value="M" />
                        <v:item name="Recursively" value="R" />
                      </v:select-list>
                    </td>
                  </tr>
                  <tr>
                    <th />
                    <td valign="center">
                      <input type="checkbox" name="prop_recursive" id="prop_recursive" title="Recursive" />
                      <vm:label for="prop_recursive" value="--'Recursive'" />
                    </td>
                  </tr>
                  <tr>
                    <th valign="top">WebDAV Properties</th>
                    <td>
                      <table>
                        <tr>
                          <td width="600px">
                            <table id="c_tbl" class="form-list" cellspacing="0">
                        <tr>
                                <th width="50%">Property</th>
                                <th width="50%">Value</th>
                          <th>Action</th>
                          <th>&amp;nbsp;</th>
                        </tr>
                              <tr id="c_tr_no"><td colspan="4"><b>No Properties</b></td></tr>
                            </table>
                          </td>
                          <td valign="top" nowrap="nowrap">
                            <span class="button pointer" onclick="javascript: TBL.createRow('c', null, {fld_1: {mode: 40, className: '_validate_', onblur: function(){validateField(this);}}, fld_2: {mode: 0}, fld_3: {mode: 41}});"><img src="/ods/images/icons/add_16.png" class="button" alt="Add Property" title="Add Property" /> Add</span><br /><br />
                          </td>
                        </tr>
                      </table>
                    </td>
                  </tr>
                </table>
              </div>

              <div id="2" class="tabContent">
                <fieldset>
                  <legend><b>ODS users/groups</b></legend>
                  <table>
                    <tr>
                      <td width="100%">
                        <table id="f_tbl" class="form-list" style="width: 100%;"  cellspacing="0">
                          <thead>
                  <tr>
                            <th nowrap="nowrap">User/Group</th>
                            <th>Inheritance</th>
                            <th width="1%" align="center" nowrap="nowrap">Allow<br />(R)ead, (W)rite, e(X)ecute</th>
                            <th width="1%" align="center" nowrap="nowrap">Deny<br />(R)ead, (W)rite, e(X)ecute</th>
                            <th width="1%">Action</th>
                  </tr>
                          </thead>
                          <tbody id="f_tbody">
                            <tr id="f_tr_no"><td colspan="5"><b>No Security Properties</b></td></tr>
                          </tbody>
                </table>
                      </td>
                      <td valign="top" nowrap="nowrap">
                        <span class="button pointer" onclick="javascript: TBL.createRow('f', null, {fld_1: {mode: 1, cssText: 'width: 88%;', tdCssText: 'white-space: nowrap;'}, fld_2: {mode: 43, value: 1}, fld_3: {mode: 42, value: [1, 1, 0], suffix: '_grant', onclick: function(){TBL.clickCell42(this);}, tdCssText: 'width: 1%; text-align: center;'}, fld_4: {mode: 42,  suffix: '_deny', onclick: function(){TBL.clickCell42(this);}, tdCssText: 'width: 1%; text-align: center;'}});"><img src="/ods/images/icons/add_16.png" class="button" alt="Add Security" title="Add Security" /> Add</span><br /><br />
                      </td>
                    </tr>
                  </table>
                </fieldset>
                <vm:if test='not isnull (ODS.ODS_API."server.getInfo"(&apos;sslPort&apos;))'>
                <fieldset>
                    <legend><b>WebID users</b></legend>
                  <table>
                    <tr>
                      <td width="100%">
                          <table id="s_tbl" class="form-list" style="width: 100%;"  cellspacing="0">
                            <thead>
                          <tr>
                              <th width="1%" align="center" nowrap="nowrap">Acces Type</th>
                              <th nowrap="nowrap">WebID</th>
                                <th width="1%" align="center" nowrap="nowrap">Allow<br />(R)ead, (W)rite, e(X)ecute</th>
                            <th width="1%" >Action</th>
                          </tr>
                            </thead>
                            <tbody id="s_tbody" >
                              <tr id="s_tr_no"><td colspan="4"><b>No Security Properties</b></td></tr>
                            </tbody>
                        </table>
                      </td>
                        <td valign="top" nowrap="nowrap">3
                          <span class="button pointer" onclick="javascript: TBL.createRow('s', null, {fld_1: {mode: 50, onchange: function(){TBL.changeCell50(this);}}, fld_2: {mode: 51, form: 'F1', tdCssText: 'white-space: nowrap;', className: '_validate_ _uri_'}, fld_3: {mode: 52, value: [1, 0, 0], execute: true, tdCssText: 'width: 1%; text-align: center;'}});"><img src="/ods/images/icons/add_16.png" class="button" alt="Add Security" title="Add Security" /> Add</span><br /><br />
                      </td>
                    </tr>
                  </table>
                </fieldset>
                </vm:if>
              </div>
            </div>
          </div>
          <div class="new-form-footer">
            <v:button action="simple" value="Update">
              <v:on-post>
                <![CDATA[
                  self.execPost (e);
                  self.vc_data_bind (e);
                ]]>
              </v:on-post>
            </v:button>
            <input type="button" title="Cancel" value="Cancel" onclick="javascript: ODRIVE.formClose();"/>
          </div>
          <script>
            initTab(2, 1);
          </script>
        </v:template>

        <v:template type="simple" enabled="-- case when (self.v_form in ('edit', 'view')) then 1 else 0 end">
          <v:before-data-bind>
            <![CDATA[
              declare item any;

              self.v_path := self.v_id;
              item := ODRIVE.WA.DAV_INIT (self.v_path);
              self.mimeType := ODRIVE.WA.DAV_GET (item, 'mimeType');
            ]]>
          </v:before-data-bind>
          <div class="new-form-header">
            <?V initcap (self.v_form) ?> resource <?V ODRIVE.WA.utf2wide (self.v_path) ?>
          </div>
          <div style="padding-right: 6px;">
            <?vsp
              declare disabled varchar;

              disabled := case when self.v_form = 'view' then 'disabled="disabled"' else '' end;
              http (sprintf ('<textarea id="f_content" name="f_content" style="width: 100%%; height: 360px" %s>%V</textarea>', disabled, ODRIVE.WA.utf2wide (cast (ODRIVE.WA.DAV_RES_CONTENT (self.v_path) as varchar))));
            ?>
            <vm:if test="self.mimeType like 'text/html'">
              <![CDATA[
                <script type="text/javascript" src="/ods/ckeditor/ckeditor.js"></script>
                <script type="text/javascript">
                  var oEditor = CKEDITOR.replace('f_content', {height: '250px', width: '99%'});
                </script>
              ]]>
            </vm:if>
          </div>
          <div class="new-form-footer">
            <v:button action="simple" value="Save" enabled="--case when self.v_form = 'view' then 0 else 1 end">
              <v:on-post>
                <![CDATA[
                  self.execPost (e);
                  self.vc_data_bind (e);
                ]]>
              </v:on-post>
            </v:button>
            <input type="button" title="Cancel" value="Cancel" onclick="javascript: ODRIVE.formClose();"/>
          </div>
        </v:template>

        <v:template type="simple" enabled="--case when (self.v_form = 'rename') then 1 else 0 end">
          <v:before-data-bind>
            <![CDATA[
              if (self.v_step = 'start')
              {
                declare N integer;
                declare tmp any;

                self.v_path := self.items [0];
                tmp := rtrim(self.v_path, '/');
                N := strrchr(tmp, '/');
                if (isnull(N))
                  N := 0;
                self.v_parent := left (tmp, N);
                self.v_old := trim (subseq(tmp, N, length(tmp)), '/');
                self.v_new := self.v_old;
              }
            ]]>
          </v:before-data-bind>
          <div class="new-form-header">
            Rename resource
          </div>
          <div class="new-form-body">
            <table cellspacing="0">
              <tr>
                <th width="30%">
                  Parent Folder
                </th>
                <td>
                  <span class="text"><v:label value="--self.v_parent" /></span>
                </td>
              </tr>
              <tr>
                <th>
                  Old Name
                </th>
                <td>
                  <v:text name="f_old" value="--self.v_old" xhtml_disabled="disabled" xhtml_size="65%" />
                </td>
              </tr>
              <tr>
                <th>
                  <vm:label for="f_new" value="New Name" />
                </th>
                <td>
                  <v:text name="f_new" value="--self.v_new" xhtml_size="65%" />
                </td>
              </tr>
            </table>
          </div>
          <div class="new-form-footer">
            <v:button action="simple" value="Rename">
              <v:on-post>
                <![CDATA[
                  self.execPost (e);
                  self.vc_data_bind (e);
                ]]>
              </v:on-post>
            </v:button>
            <input type="button" title="Cancel" value="Cancel" onclick="javascript: ODRIVE.formClose();"/>
          </div>
        </v:template>

        <v:template type="simple" condition="(self.v_form = 'tags')">
          <div class="new-form-header">
            Tag listed items
          </div>
          <?vsp self.showSelected(1); ?>
          <div class="new-form-body">
            <table cellspacing="0">
              <tr>
                <th>
                  <v:label for="f_tags_public" value="Public tags (comma-separated)"/>
                </th>
                <td>
                  <v:text name="f_tags_public" xhtml_id="f_tags_public" xhtml_class="textbox" xhtml_size="60"/>
                  <input type="button" value="Clear" onclick="javascript: $('f_tags_public').value = ''" class="button" />
                </td>
              </tr>
              <tr>
                <th>
                  <v:label for="f_tags_private" value="Private tags (comma-separated)"/>
                </th>
                <td>
                  <v:text name="f_tags_private" xhtml_id="f_tags_private" xhtml_class="textbox" xhtml_size="60"/>
                  <input type="button" value="Clear" onclick="javascript: $('f_tags_private').value = ''" class="button" />
                </td>
              </tr>
            </table>
          </div>
          <div class="new-form-footer">
            <v:button action="simple" value="Tag">
              <v:on-post>
                <![CDATA[
                  self.execPost (e);
                  self.vc_data_bind (e);
                ]]>
              </v:on-post>
            </v:button>
            <input type="button" title="Cancel" value="Cancel" onclick="javascript: ODRIVE.formClose();"/>
          </div>
        </v:template>

        <v:template type="simple" condition="(self.v_form in ('move', 'copy', 'delete'))">
          <div class="new-form-header">
            <?V initcap (self.v_form) ?> listed items
          </div>
          <?vsp self.showSelected(2); ?>
          <v:template type="simple" condition="((self.v_form <> 'delete') and (self.v_step <> 'error'))">
            <div class="new-form-body">
              <table cellspacing="0">
                <v:template type="simple" condition="(self.v_step = 'start')">
                  <th width="30%">
                    Destination folder
                  </th>
                  <td>
                    <input name="f_folder" id="f_folder" value="<?V self.v_source ?>" class="field-short" />
                    <input type="button" class="button" onclick="javascript: ODRIVE.davFolderSelect ('f_folder');" value="Select" />
              		  <![CDATA[
              		    <script type="text/javascript">
                        OAT.Loader.load(['dav'], function(){OAT.WebDav.init(davOptions);});
              		    </script>
              		  ]]>
                  </td>
                </v:template>
                <v:template type="simple" condition="(self.v_step = 'overwrite')">
                  <th colspan="2">
                    Some folder(s)/file(s) could not to be written or have to overwrite existing ones. Do you want to try to overwrite?
                  </th>
                </v:template>
              </table>
            </div>
          </v:template>
          <div class="new-form-footer">
            <v:button action="simple" value="--initcap (self.v_form)" enabled="-- case when self.v_step <> 'error' then 1 else 0 end">
              <v:on-post>
                <![CDATA[
                  if (self.v_step = 'start')
                  {
                    self.v_target := '/' || get_keyword ('f_folder', e.ve_params, '') || '/';
                    self.v_target := replace (self.v_target, '//', '/');
                  }
                  if (self.v_step = 'overwrite')
                  {
                    self.overwriteFlag := 1;
                  }
                  self.execSelected (self.overwriteFlag);
                  if (length (self.items) = 0)
                  {
                    self.v_step := 'end';
                  }
                  else
                  {
                    if (self.v_form = 'delete')
                    {
                      self.v_step := 'error';
                    }
                    else if (self.v_step = 'start')
                    {
                      self.v_step := 'overwrite';
                    }
                    else
                    {
                      self.v_step := 'error';
                    }
                  }
                  self.vc_data_bind (e);
                ]]>
              </v:on-post>
            </v:button>
            <input type="button" title="Cancel" value="Cancel" onclick="javascript: ODRIVE.formClose();"/>
          </div>
        </v:template>
      </v:template>

    </vm:pagebody>
  </vm:popup_pagewrapper>

</v:page>
