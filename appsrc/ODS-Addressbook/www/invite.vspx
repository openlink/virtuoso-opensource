<?xml version="1.0"?>
<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="annotea" decor="template/popup.vspx" style="template/template.xsl" fast-render="1" xmlns:v="http://www.openlinksw.com/vspx/" xmlns:vm="http://www.openlinksw.com/vspx/macro" doctype="-//W3C//DTD XHTML 1.0 Transitional//EN" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

  <vm:pagetitle>Invitation page</vm:pagetitle>
  <vm:popup_page_wrapper>
    <vm:variables>
      <v:variable persist="0" name="v_oid" param-name="oid" type="integer" default="-1" />
      <v:variable persist="0" name="v_name" param-name="name" type="varchar" default="''" />
      <v:variable persist="0" name="v_fullName" param-name="full_name" type="varchar" default="''" />
      <v:variable persist="0" name="v_mail" param-name="mail" type="varchar" default="''" />
      <v:variable persist="0" name="v_step" type="integer" default="0" />
    </vm:variables>
    <vm:pagebody>
      <v:before-data-bind>
        <![CDATA[
          if (self.v_oid <> -1)
          {
            self.v_name := '';
            self.v_fullName := '';
            self.v_mail := '';
            for (select * from AB.WA.PERSONS where P_ID = self.v_oid) do
            {
              self.v_name := P_NAME;
              self.v_fullName := coalesce (P_NAME, P_FULL_NAME);
              self.v_mail := P_MAIL;
            }
          }
          if (is_empty_or_null (self.v_fullName))
            self.v_fullName := self.v_name;
          self.v_mail := replace (self.v_mail, 'mailto:', '');
    		]]>
      </v:before-data-bind>
      <?vsp
        http (sprintf ('<input type="hidden" name="sid"   value="%s" />', get_keyword ('sid',   self.vc_event.ve_params, '')));
        http (sprintf ('<input type="hidden" name="realm" value="%s" />', get_keyword ('realm', self.vc_event.ve_params, '')));
      ?>
      <v:template type="simple" condition="not self.vc_is_valid">
        <div class="error">
          <p><v:error-summary/></p>
        </div>
      </v:template>
      <div class="new-form-header">
        Invitation: '<?V AB.WA.utf2wide (self.v_fullName) ?>'
      </div>
      <div class="new-form-body">
        <table cellspacing="0">
          <vm:if test="self.v_step = 0">
          	<tr>
  	          <th>To</th>
          	  <td>
          	    <v:text name="f_mail" value="--self.v_mail" xhtml_size="50" />
         	    </td>
          	</tr>
          	<tr>
          	  <th>Subject</th>
          	  <td>
          	    <v:text name="f_subject" value="--'Invitation to ODS'" fmt-function="AB.WA.utf2wide" xhtml_size="50" />
          	  </td>
          	</tr>
          	<tr>
          	  <th>Customize Message</th>
          	  <td>
          	    <v:textarea name="f_content" fmt-function="AB.WA.utf2wide" xhtml_rows="15" xhtml_cols="50" >
          	      <v:after-data-bind>
          	        <![CDATA[
          		        if (not e.ve_is_post)
          		        {
                		    declare url, content any;
  		                  declare instance web_app;

  		                  instance := (select WAI_INST from WA_INSTANCE where WAI_ID = self.domain_id);
          				      content := WA_GET_EMAIL_TEMPLATE ('WS_INV_TEMPLATE');
                        content := WA_MAIL_TEMPLATES (content, instance, '', '%url%');
                        content := replace(content, '%user%', self.v_fullName);
                        content := replace (content, 'a Address', 'an Address');

                		    control.ufl_value := content;
                		  }
                		]]>
                  </v:after-data-bind>
          	    </v:textarea>
          	  </td>
          	</tr>
          </vm:if>
          <vm:if test="self.v_step = 1">
            <tr>
              <th style="text-align: center; height: 150px;">
                <v:label value="Invitation has been sent successfully!" />
              </th>
            </tr>
          </vm:if>
        </table>
      </div>
      <div class="new-form-footer">
        <v:button action="simple" name="send" value="Send" xhtml_title="Send Invitation" enabled="--case when (self.v_step = 0) then 1 else 0 end" xhtml_class="form-button">
          <v:on-post>
            <![CDATA[
          		declare mail, content, sid, url any;

              mail := (select U_E_MAIL from DB.DBA.SYS_USERS where U_ID = self.account_id);
          		content := self.f_content.ufl_value;
          		sid := vspx_sid_generate ();

          		insert into DB.DBA.VSPX_SESSION (VS_SID, VS_REALM, VS_EXPIRY, VS_UID)
          		  values (sid, 'wa', now (), self.f_mail.ufl_value);

          		insert soft DB.DBA.WA_INVITATIONS (WI_U_ID, WI_TO_MAIL, WI_INSTANCE, WI_SID, WI_STATUS)
          		  values (self.account_id, self.f_mail.ufl_value, AB.WA.domain_name (self.domain_id), sid, 'pending');

          		if (row_count () = 0)
          		{
          		  rollback work;
          		  self.vc_is_valid := 0;
          		  self.vc_error_message := 'There is already an invitation to this e-mail address.';
          		  return;
          		}

		          url := sprintf ('%s/join.vspx?wai_id=%d&join_id=%s', wa_link (1), self.domain_id, sid);
              content := replace(content, '%url%', url);

          		declare exit handler for sqlstate '*'
          		{
          		  rollback work;
          		  self.vc_is_valid := 0;
          		  if (__SQL_STATE like 'WA%')
          		  {
          		    self.vc_error_message := __SQL_MESSAGE;
          		  } else {
          		    self.vc_error_message :=
          		      'The e-mail addresses is not valid and mail cannot be sent.'||
          		      'Please enter correct value and re-try.';
          		  }
          		  return;
          		};
          		commit work;

          		WA_SEND_MAIL (mail, self.f_mail.ufl_value, self.f_subject.ufl_value, content);

          		self.v_step := 1;
              self.vc_data_bind(e);
            ]]>
          </v:on-post>
        </v:button>
        <v:button action="simple" name="cancel" value="--case when (self.v_step = 0) then 'Cancel' else 'Close' end" xhtml_onclick=" javascript: window.close(); " xhtml_class="form-button"/>
      </div>
    </vm:pagebody>
  </vm:popup_page_wrapper>
</v:page>
