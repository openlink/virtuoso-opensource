;
;  odbc_mail.default.ini
;
;  Configuration file for the ODBC Mail Delivery Agent
;
;  Copyright (C) 1998-2019 OpenLink Software.
;
;  To learn more about this product, or any other product in our
;  portfolio, please check out our web site at:
;
;      http://www.openlinksw.com
;
;  or contact us at:
;
;      general.information@openlinksw.com
;
;  If you have any technical questions, please contact our support
;  staff at:
;
;      technical.support@openlinksw.com
;

[Options]

;;
;;  DSN = <connect string>
;;    Specifies the ODBC format database connect string
;;
;;  If the MDA is unable to connect to the database, it will
;;  exit with a temporarily-unavailable error code.
;;
;;  Example:
;;    DSN = Virtuoso;HOST=localhost:1111;UID=dba;PWD=dba
;;

DSN = DSN=Virtuoso;HOST=localhost:1115;UID=dba;PWD=dba

;;  MaxMessageSize = <integer>
;;    Imposes a mail message size limit
;;
;; Limit messages to 2M. Comment out / set to 0 to disable
MaxMessageSize = 2097152

;;  RemovePrefix = <string>
;;    Removes a prefix from $local (eg for qmail)
;;
;RemovePrefix = lists-

;;  UnixFromLine = <0|1>
;;    insert 'From x@y <date>' line -- qmail & courier mode only
;;
;UnixFromLine = 1

;;  MailDebug = <filename>
;;    Make a copy of every message dropped into the database
;;
;MailDebug = /tmp/odbc_mail.debug

;;  Verify = <sql statement>
;;    Verifies that a mail recipient exists in the database.
;;
;;  The SQL statement is macro expanded and executed.
;;  Defined macros are:
;;  $local	Local recipient without domain
;;  $domain	Domain for the local recipient
;;  $sender	Mail sender
;;
;;  Both $macro and ${macro} are valid.
;;
;;  A missing Verify statement causes the message to be accepted.
;;  If the SQL statement fails, or doesn't return a result set,
;;  or if the VerifyCheckReturn fails, then fallback delivery is attempted
;;  (see below)
;;
;;  Use VerifyCheckReturn=<value> to test stored procedure execution completion.
;;
;;  Returned columns from the returned result set are available in the
;;  Deliver statement as $1, $2 ..
;;
;;  Examples:
;;
;;  1. Look up account name in Virtuoso's DAV table for internal POP3 use
;;     Verify = SELECT U_NAME FROM WS.WS.SYS_DAV_USER WHERE U_NAME='$local' AND U_ACCOUNT_DISABLED=0
;;
;;  2. Use use your own user table ...
;;     Verify = SELECT NAME FROM USERS WHERE NAME = '$local' AND '$sender' LIKE '%@openlinksw.com'
;;
;;  3. Call a stored procedure which should return 1 on success ...
;;     Verify = FIND_USER('$local')
;;     VerifyCheckReturn = 1
;;
;;  4. OpenLink Portal Server (OPS):
;;     Verify = select ac.account_id, ac.domain_id from usr..accounts ac, usr..domains dm where ac.domain_id = dm.domain_id and ac.account_name = '$local' and dm.domain_name = '$domain'
;;
;;  5. OpenLink oMail WA application:
;;     Verify = OMAIL.WA.omail_check_mailbox('${local}@$domain')
;;     VerifyCheckReturn = 1

Verify = OMAIL.WA.omail_check_mailbox('${local}@$domain')
VerifyCheckReturn = 1

;;  Deliver = <sql statement>
;;    Delivers the mail into the database.
;;
;;  The SQL string is macro expanded and executed.
;;  Defined macros are:
;;  $local	Local recipient without domain
;;  $domain	Domain for the local recipient
;;  $sender	Mail sender
;;  $message	Message. Note that this is bound as a parameter
;;  $1, $2 ..	Returned columns from the Verify query
;;
;;  The Deliver query is only executed after a successful verification.
;;  If the SQL statement fails, the mail is bounced.
;;
;;  Use DeliverCheckReturn=<value> to test stored procedure execution
;;  completion. The message will be bounced if the completion value is
;;  different from the specified value
;;
;;  Examples:
;;  1. Use Virtuoso's mail drop stored procedure so user can use POP3 on it
;;     Deliver = DB.DBA.NEW_MAIL($1, $message)
;;
;;  2. Use use your own user table ...
;;     Deliver = INSERT INTO MYMAIL(AT,USR,MSG) VALUES(datestring(now()),'$local',$message)
;;
;;  3. Call a stored procedure which should return 1 on success ...
;;     Deliver = DELIVER_MAIL('${local}@$domain','$sender',$message)
;;     DeliverCheckReturn = 1
;;
;;  4. OpenLink Portal Server (OPS):
;;     Deliver = eml..recive_message($2,$1,NULL,$message,NULL,-1,100)
;;
;;  5. OpenLink oMail WA application:
;;     Deliver = OMAIL.WA.omail_smtp_message_deliver('${local}@$domain', $message)
;;     DeliverCheckReturn = 1

Deliver = OMAIL.WA.omail_smtp_message_deliver('${local}@$domain', $message)
DeliverCheckReturn = 1

;;  Fallback = <command>
;;    Specify auxiliary mail delivery agent
;;
;;  Fallback delivery is invoked when the recipient user is NOT in
;;  the database (when the Verify query fails)
;;  If there is no Fallback setting defined, the mail will be bounced.
;;
;;  Environment variables SENDER, LOCAL and HOST are set up before
;;  invocation. Macros $local, $domain and $sender are also usable here.
;;
;;  Examples:
;;  1. VMailMgr under qmail
;;     Fallback = vdeliver
;;
;;  2. procmail under qmail
;;     Fallback = preline procmail -m .procmailrc
;;
;;  3. procmail fallback for sendmail
;;     Fallback = /bin/sh -c "procmail -f $sender -d $local"
;;
;;  Fallback under win32:
;;  - PATH is NOT searched.
;;  - added environment variables: SENDER, RECIPIENT, LOCAL, HOST
;;
;Fallback = /bin/sh -c "procmail -f $sender -d $local"

;;  Environment
;;
;;  These variables are merged with the environment before the database
;;  is connected. UDBCINI may be required to locate the DSN.
;;  Define additional environment variables here necessary for
;;  fallback delivery.
;;
[Environment]
PATH		= /bin:/usr/bin:/sbin:/usr/sbin
SHELL		= /bin/sh
;UDBCINI	= /home/openlink/lib/udbc.ini

;;  Bounce messages
;;
;;  Indent continuation lines with at least a space or tab.
;;
[Bounce]
UserUnknown= The OpenLink Application Mailer:
 Sorry, the user you are trying to reach doesn't exist in our system.
 The user could be removed, or you may have encountered a software
 misconfiguration. Please contact the postmaster for the domain if you
 believe there's something wrong.

DatabaseError= The OpenLink Application Mailer:
 Sorry, our mail delivery program encountered a fatal error while trying
 to deliver your message to the database. I got the following error(s):

InternalError= The OpenLink Application Mailer:
 Sorry, our mail delivery program encountered an internal error or
 software misconfiguration while trying to deliver your message.
 This shouldn't happen under normal circumstances.
 Please contact the postmaster for the domain if these problems persist.

TooLong= The OpenLink Application Mailer:
 Sorry, our mail delivery program cannot deliver your message because it's
 size exceeds the maximum allowed message size limit of 2 megabytes.
