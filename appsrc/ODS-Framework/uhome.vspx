<!--
 -
 -  $Id$
 -
 -  This file is part of the OpenLink Software Virtuoso Open-Source (VOS)
 -  project.
 -
 -  Copyright (C) 1998-2019 OpenLink Software
 -
 -  This project is free software; you can redistribute it and/or modify it
 -  under the terms of the GNU General Public License as published by the
 -  Free Software Foundation; only version 2 of the License, dated June 1991.
 -
 -  This program is distributed in the hope that it will be useful, but
 -  WITHOUT ANY WARRANTY; without even the implied warranty of
 -  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 -  General Public License for more details.
 -
 -  You should have received a copy of the GNU General Public License along
 -  with this program; if not, write to the Free Software Foundation, Inc.,
 -  51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 -
-->
<v:page name="wa-home-page"
  xmlns:v="http://www.openlinksw.com/vspx/"
  doctype="-//W3C//DTD XHTML 1.0 Transitional//EN"
  doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"
  on-error-redirect="error.vspx">
  <v:variable name="ssid" type="varchar" default="null" param-name="sid"/>
  <v:variable name="srealm" type="varchar" default="null" param-name="realm"/>
  <v:variable name="suser" type="varchar" default="null" param-name="ufname"/>
  <?vsp
    declare template, uname, src varchar;
    declare tmp_uid int;

    http_rewrite ();
    commit work;

    if (http_map_get ('is_dav') = 0)
      {
        template := '/samples/wa/home.vspx';
        goto default_template;
      }

    {
      whenever not found goto nf_user;
      select U_ID into tmp_uid from SYS_USERS where U_NAME = self.suser;
    }

    if (0)
      {
        declare exit handler for not found
            {
                signal ('22023', sprintf ('The user "%s" does not exist.', self.suser));
            };
        nf_user:
	select U_NAME into tmp_uid from SYS_USERS, WA_USER_INFO where WAUI_U_ID = U_ID and WAUI_NICK = self.suser;
	self.suser := tmp_uid;
      }



    declare exit handler for not found
      {
        template := '/DAV/VAD/wa/templates/default/home.vspx';
        goto default_template;
      };

    if (length (self.suser) = 0)
      {
      select WAUI_TEMPLATE, VS_UID into template, uname
        from WA_USER_INFO, VSPX_SESSION, SYS_USERS
	where VS_SID = self.ssid and VS_REALM = self.srealm and VS_UID = U_NAME and U_ID = WAUI_U_ID;
      }
    else
      {
        uname := self.suser;
	select WAUI_TEMPLATE into template from WA_USER_INFO, SYS_USERS where U_NAME = uname and U_ID = WAUI_U_ID;
      }

    if (length (template))
      {
        if (template = 'custom')
	  template := '/DAV/home/'|| uname ||'/wa/templates/custom/home.vspx';
	else
	  template := '/DAV/VAD/wa/templates/' || template || '/home.vspx';
      }

    select RES_CONTENT into src from WS.WS.SYS_DAV_RES where RES_FULL_PATH = template;

    {
      declare xt any;
      xt := xtree_doc (src, 256, DB.DBA.vspx_base_url (template));
      xslt (DB.DBA.vspx_base_url ('/DAV/VAD/wa/comp/check.xsl'), xt);
    }
default_template:
    wa_home_exec (template, path, params, lines);
    return;
  ?>
</v:page>
